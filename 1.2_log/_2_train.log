
12.Apr 2020 17:03:48 LSTM model creation or compile error

12.Apr 2020 17:13:31 LSTM model creation or compile error

12.Apr 2020 17:14:56 LSTM model creation or compile error

12.Apr 2020 17:15:56 LSTM model creation or compile error

12.Apr 2020 17:19:59 LSTM model creation or compile error

12.Apr 2020 17:21:05 correct LSTM model creation and compilation

12.Apr 2020 17:28:49 correct LSTM model creation and compilation

12.Apr 2020 17:29:27 correct LSTM model creation and compilation

12.Apr 2020 17:46:45 correct LSTM model creation and compilation

12.Apr 2020 17:50:05 correct LSTM model creation and compilation

12.Apr 2020 17:54:57 correct LSTM model creation and compilation

12.Apr 2020 17:56:45 correct LSTM model creation and compilation

12.Apr 2020 18:00:49 correct LSTM model creation and compilation

12.Apr 2020 18:02:13 correct LSTM model creation and compilation

12.Apr 2020 18:06:32 correct LSTM model creation and compilation

12.Apr 2020 18:15:21 correct LSTM model creation and compilation

12.Apr 2020 18:18:32 correct LSTM model creation and compilation

12.Apr 2020 18:26:50 correct LSTM model creation and compilation

12.Apr 2020 18:32:44 correct LSTM model creation and compilation

12.Apr 2020 18:32:56 model training error

12.Apr 2020 19:53:21 correct LSTM model creation and compilation

12.Apr 2020 19:54:12 model training error

12.Apr 2020 20:20:42 correct LSTM model creation and compilation

12.Apr 2020 20:20:42 model training error

12.Apr 2020 20:23:01 correct LSTM model creation and compilation

12.Apr 2020 20:23:32 model training error

12.Apr 2020 20:24:04 correct LSTM model creation and compilation

12.Apr 2020 20:24:16 model training error

12.Apr 2020 20:53:03 correct LSTM model creation and compilation

12.Apr 2020 23:17:32 correct LSTM model creation and compilation

12.Apr 2020 23:24:17 correct LSTM model creation and compilation

12.Apr 2020 23:26:48 correct LSTM model creation and compilation

12.Apr 2020 23:31:04 correct LSTM model creation and compilation

12.Apr 2020 23:32:18 correct LSTM model creation and compilation

12.Apr 2020 23:33:57 correct LSTM model creation and compilation

12.Apr 2020 23:35:12 correct LSTM model creation and compilation

12.Apr 2020 23:36:38 correct LSTM model creation and compilation

12.Apr 2020 23:37:48 correct LSTM model creation and compilation

12.Apr 2020 23:38:57 correct LSTM model creation and compilation

12.Apr 2020 23:43:10 correct LSTM model creation and compilation

12.Apr 2020 23:46:21 correct LSTM model creation and compilation

12.Apr 2020 23:54:12 correct LSTM model creation and compilation

12.Apr 2020 23:55:07 correct LSTM model creation and compilation

13.Apr 2020 00:01:33 correct LSTM model creation and compilation

13.Apr 2020 00:27:13 LSTM model creation or compile error
Error converting shape to a TensorShape: Dimension value must be integer or None or have an __index__ method, got '('.
Traceback (most recent call last):
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\execute.py", line 211, in make_shape
    shape = tensor_shape.as_shape(v)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\tensor_shape.py", line 1218, in as_shape
    return TensorShape(shape)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\tensor_shape.py", line 771, in __init__
    self._dims = [as_dimension(d) for d in dims_iter]
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\tensor_shape.py", line 771, in <listcomp>
    self._dims = [as_dimension(d) for d in dims_iter]
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\tensor_shape.py", line 716, in as_dimension
    return Dimension(value)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\tensor_shape.py", line 197, in __init__
    six.raise_from(
  File "<string>", line 3, in raise_from
TypeError: Dimension value must be integer or None or have an __index__ method, got '('

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File ".\_2_train.py", line 50, in <module>
    forecaster.add(layers.LSTM(units=int(model_hyperparameters['units_layer_1']),
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\training\tracking\base.py", line 456, in _method_wrapper
    result = method(self, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\sequential.py", line 193, in add
    x = input_layer.Input(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\input_layer.py", line 295, in Input
    input_layer = InputLayer(**input_layer_config)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\input_layer.py", line 149, in __init__
    input_tensor = backend.placeholder(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\backend.py", line 1087, in placeholder
    x = array_ops.placeholder(dtype, shape=shape, name=name)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\array_ops.py", line 3026, in placeholder
    return gen_array_ops.placeholder(dtype=dtype, shape=shape, name=name)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\gen_array_ops.py", line 6674, in placeholder
    shape = _execute.make_shape(shape, "shape")
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\execute.py", line 213, in make_shape
    raise TypeError("Error converting %s to a TensorShape: %s." % (arg_name, e))
TypeError: Error converting shape to a TensorShape: Dimension value must be integer or None or have an __index__ method, got '('.

13.Apr 2020 00:27:13 model training error
You must compile your model before training/testing. Use `model.compile(optimizer, loss)`.
Traceback (most recent call last):
  File ".\_2_train.py", line 115, in train
    forecaster.fit(x_train, y_train, batch_size=batch_size, epochs=epochs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 66, in _method_wrapper
    return method(self, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 725, in fit
    self._assert_compile_was_called()
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 1572, in _assert_compile_was_called
    raise RuntimeError('You must compile your model before '
RuntimeError: You must compile your model before training/testing. Use `model.compile(optimizer, loss)`.

13.Apr 2020 00:32:21 LSTM model creation or compile error
Error converting shape to a TensorShape: Dimension value must be integer or None or have an __index__ method, got '('.
Traceback (most recent call last):
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\execute.py", line 211, in make_shape
    shape = tensor_shape.as_shape(v)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\tensor_shape.py", line 1218, in as_shape
    return TensorShape(shape)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\tensor_shape.py", line 771, in __init__
    self._dims = [as_dimension(d) for d in dims_iter]
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\tensor_shape.py", line 771, in <listcomp>
    self._dims = [as_dimension(d) for d in dims_iter]
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\tensor_shape.py", line 716, in as_dimension
    return Dimension(value)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\tensor_shape.py", line 197, in __init__
    six.raise_from(
  File "<string>", line 3, in raise_from
TypeError: Dimension value must be integer or None or have an __index__ method, got '('

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File ".\_2_train.py", line 50, in <module>
    forecaster.add(layers.LSTM(units=int(model_hyperparameters['units_layer_1']),
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\training\tracking\base.py", line 456, in _method_wrapper
    result = method(self, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\sequential.py", line 193, in add
    x = input_layer.Input(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\input_layer.py", line 295, in Input
    input_layer = InputLayer(**input_layer_config)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\input_layer.py", line 149, in __init__
    input_tensor = backend.placeholder(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\backend.py", line 1087, in placeholder
    x = array_ops.placeholder(dtype, shape=shape, name=name)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\array_ops.py", line 3026, in placeholder
    return gen_array_ops.placeholder(dtype=dtype, shape=shape, name=name)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\gen_array_ops.py", line 6674, in placeholder
    shape = _execute.make_shape(shape, "shape")
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\execute.py", line 213, in make_shape
    raise TypeError("Error converting %s to a TensorShape: %s." % (arg_name, e))
TypeError: Error converting shape to a TensorShape: Dimension value must be integer or None or have an __index__ method, got '('.

13.Apr 2020 00:32:21 model training error
You must compile your model before training/testing. Use `model.compile(optimizer, loss)`.
Traceback (most recent call last):
  File ".\_2_train.py", line 115, in train
    forecaster.fit(x_train, y_train, batch_size=batch_size, epochs=epochs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 66, in _method_wrapper
    return method(self, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 725, in fit
    self._assert_compile_was_called()
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 1572, in _assert_compile_was_called
    raise RuntimeError('You must compile your model before '
RuntimeError: You must compile your model before training/testing. Use `model.compile(optimizer, loss)`.

13.Apr 2020 00:33:37 LSTM model creation or compile error
Error converting shape to a TensorShape: Dimension value must be integer or None or have an __index__ method, got '('.
Traceback (most recent call last):
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\execute.py", line 211, in make_shape
    shape = tensor_shape.as_shape(v)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\tensor_shape.py", line 1218, in as_shape
    return TensorShape(shape)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\tensor_shape.py", line 771, in __init__
    self._dims = [as_dimension(d) for d in dims_iter]
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\tensor_shape.py", line 771, in <listcomp>
    self._dims = [as_dimension(d) for d in dims_iter]
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\tensor_shape.py", line 716, in as_dimension
    return Dimension(value)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\tensor_shape.py", line 197, in __init__
    six.raise_from(
  File "<string>", line 3, in raise_from
TypeError: Dimension value must be integer or None or have an __index__ method, got '('

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File ".\_2_train.py", line 50, in <module>
    forecaster.add(layers.LSTM(units=int(model_hyperparameters['units_layer_1']),
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\training\tracking\base.py", line 456, in _method_wrapper
    result = method(self, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\sequential.py", line 193, in add
    x = input_layer.Input(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\input_layer.py", line 295, in Input
    input_layer = InputLayer(**input_layer_config)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\input_layer.py", line 149, in __init__
    input_tensor = backend.placeholder(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\backend.py", line 1087, in placeholder
    x = array_ops.placeholder(dtype, shape=shape, name=name)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\array_ops.py", line 3026, in placeholder
    return gen_array_ops.placeholder(dtype=dtype, shape=shape, name=name)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\gen_array_ops.py", line 6674, in placeholder
    shape = _execute.make_shape(shape, "shape")
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\execute.py", line 213, in make_shape
    raise TypeError("Error converting %s to a TensorShape: %s." % (arg_name, e))
TypeError: Error converting shape to a TensorShape: Dimension value must be integer or None or have an __index__ method, got '('.

13.Apr 2020 00:33:37 model training error
You must compile your model before training/testing. Use `model.compile(optimizer, loss)`.
Traceback (most recent call last):
  File ".\_2_train.py", line 115, in train
    forecaster.fit(x_train, y_train, batch_size=batch_size, epochs=epochs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 66, in _method_wrapper
    return method(self, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 725, in fit
    self._assert_compile_was_called()
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 1572, in _assert_compile_was_called
    raise RuntimeError('You must compile your model before '
RuntimeError: You must compile your model before training/testing. Use `model.compile(optimizer, loss)`.

13.Apr 2020 00:54:31 correct LSTM model creation and compilation

13.Apr 2020 00:54:31 model training error
in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:465 train_step  **
        y_pred = self(x, training=True)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py:885 __call__
        input_spec.assert_input_compatibility(self.input_spec, inputs,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\input_spec.py:224 assert_input_compatibility
        raise ValueError('Input ' + str(input_index) +

    ValueError: Input 0 is incompatible with layer sequential: expected shape=(None, None, 1913), found shape=[None, 365, 1]
Traceback (most recent call last):
  File ".\_2_train.py", line 116, in train
    forecaster.fit(x_train, y_train, batch_size=batch_size, epochs=epochs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 66, in _method_wrapper
    return method(self, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 785, in fit
    tmp_logs = train_function(iterator)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 580, in __call__
    result = self._call(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 627, in _call
    self._initialize(args, kwds, add_initializers_to=initializers)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 505, in _initialize
    self._stateful_fn._get_concrete_function_internal_garbage_collected(  # pylint: disable=protected-access
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2446, in _get_concrete_function_internal_garbage_collected
    graph_function, _, _ = self._maybe_define_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2777, in _maybe_define_function
    graph_function = self._create_graph_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2657, in _create_graph_function
    func_graph_module.func_graph_from_py_func(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 981, in func_graph_from_py_func
    func_outputs = python_func(*func_args, **func_kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 441, in wrapped_fn
    return weak_wrapped_fn().__wrapped__(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 968, in wrapper
    raise e.ag_error_metadata.to_exception(e)
ValueError: in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:465 train_step  **
        y_pred = self(x, training=True)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py:885 __call__
        input_spec.assert_input_compatibility(self.input_spec, inputs,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\input_spec.py:224 assert_input_compatibility
        raise ValueError('Input ' + str(input_index) +

    ValueError: Input 0 is incompatible with layer sequential: expected shape=(None, None, 1913), found shape=[None, 365, 1]


13.Apr 2020 00:57:46 correct LSTM model creation and compilation

13.Apr 2020 00:58:13 time series number saved to forecast settings

13.Apr 2020 00:58:33 time series number saved to forecast settings

13.Apr 2020 00:58:53 time series number saved to forecast settings

13.Apr 2020 00:59:13 time series number saved to forecast settings

13.Apr 2020 00:59:32 time series number saved to forecast settings

13.Apr 2020 00:59:52 time series number saved to forecast settings

13.Apr 2020 01:00:12 time series number saved to forecast settings

13.Apr 2020 01:00:32 time series number saved to forecast settings

13.Apr 2020 01:00:52 time series number saved to forecast settings

13.Apr 2020 01:02:06 correct LSTM model creation and compilation

13.Apr 2020 01:15:56 correct LSTM model creation and compilation

13.Apr 2020 01:30:04 correct LSTM model creation and compilation

13.Apr 2020 01:31:23 correct LSTM model creation and compilation

13.Apr 2020 01:32:20 correct LSTM model creation and compilation

13.Apr 2020 01:34:40 correct LSTM model creation and compilation

13.Apr 2020 01:36:43 correct LSTM model creation and compilation

13.Apr 2020 01:40:48 correct LSTM model creation and compilation

13.Apr 2020 01:40:48 model training error
'str' object cannot be interpreted as an integer
Traceback (most recent call last):
  File ".\_2_train.py", line 113, in train
    for time_serie in range(number_of_time_series):
TypeError: 'str' object cannot be interpreted as an integer

13.Apr 2020 01:45:33 correct LSTM model creation and compilation

13.Apr 2020 01:45:33 model training error
'str' object cannot be interpreted as an integer
Traceback (most recent call last):
  File ".\_2_train.py", line 113, in train
    for time_serie in range(number_of_time_series):
TypeError: 'str' object cannot be interpreted as an integer

13.Apr 2020 02:01:21 correct LSTM model creation and compilation

13.Apr 2020 02:01:21 model training error
'str' object cannot be interpreted as an integer
Traceback (most recent call last):
  File ".\_2_train.py", line 113, in train
    for time_serie in range(number_of_time_series):
TypeError: 'str' object cannot be interpreted as an integer

13.Apr 2020 02:05:49 correct LSTM model creation and compilation

13.Apr 2020 02:07:42 correct LSTM model creation and compilation

13.Apr 2020 02:09:46 correct LSTM model creation and compilation

13.Apr 2020 02:10:50 time series number saved to forecast settings

13.Apr 2020 02:10:50 correct model training, correct saving of model and weights

13.Apr 2020 02:13:23 correct LSTM model creation and compilation

13.Apr 2020 02:23:35 correct LSTM model creation and compilation

13.Apr 2020 02:24:19 time series number saved to forecast settings

13.Apr 2020 02:24:19 correct model training, correct saving of model and weights

13.Apr 2020 02:26:30 correct LSTM model creation and compilation

13.Apr 2020 02:37:22 correct LSTM model creation and compilation

13.Apr 2020 02:39:48 correct LSTM model creation and compilation

13.Apr 2020 02:41:53 correct LSTM model creation and compilation

13.Apr 2020 02:44:29 correct LSTM model creation and compilation

13.Apr 2020 02:45:17 time series number saved to forecast settings

13.Apr 2020 02:45:17 correct model training, correct saving of model and weights

13.Apr 2020 02:47:32 correct LSTM model creation and compilation

13.Apr 2020 02:49:09 correct LSTM model creation and compilation

13.Apr 2020 02:49:09 model training error
Extra data: line 3 column 2 (char 32)
Traceback (most recent call last):
  File ".\_2_train.py", line 108, in train
    forecast_settings = json.loads(local_f_json_file.read())
  File "C:\Users\Demo Windows 10\AppData\Local\Programs\Python\Python38\lib\json\__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "C:\Users\Demo Windows 10\AppData\Local\Programs\Python\Python38\lib\json\decoder.py", line 340, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 3 column 2 (char 32)

13.Apr 2020 02:51:20 correct LSTM model creation and compilation

13.Apr 2020 02:52:07 correct model training, correct saving of model and weights

13.Apr 2020 02:59:25 correct LSTM model creation and compilation

13.Apr 2020 03:00:13 correct model training, correct saving of model and weights

13.Apr 2020 03:05:56 correct LSTM model creation and compilation

13.Apr 2020 03:06:44 correct model training, correct saving of model and weights

13.Apr 2020 03:09:02 correct LSTM model creation and compilation

13.Apr 2020 03:09:51 correct model training, correct saving of model and weights

13.Apr 2020 03:15:34 correct LSTM model creation and compilation

13.Apr 2020 03:16:20 correct model training, correct saving of model and weights

13.Apr 2020 03:19:24 correct LSTM model creation and compilation

13.Apr 2020 03:20:09 correct model training, correct saving of model and weights

13.Apr 2020 03:21:59 correct LSTM model creation and compilation

13.Apr 2020 03:22:25 correct model training, correct saving of model and weights

13.Apr 2020 03:24:05 correct LSTM model creation and compilation

13.Apr 2020 03:24:31 correct model training, correct saving of model and weights

13.Apr 2020 03:26:58 correct LSTM model creation and compilation

13.Apr 2020 03:27:24 correct model training, correct saving of model and weights

13.Apr 2020 03:31:00 correct LSTM model creation and compilation

13.Apr 2020 03:31:27 correct model training, correct saving of model and weights

13.Apr 2020 03:33:42 correct LSTM model creation and compilation

13.Apr 2020 03:34:08 correct model training, correct saving of model and weights

13.Apr 2020 03:39:28 correct LSTM model creation and compilation

13.Apr 2020 03:39:53 correct model training, correct saving of model and weights

13.Apr 2020 15:38:05 correct LSTM model creation and compilation

13.Apr 2020 15:38:32 correct model training, correct saving of model and weights

13.Apr 2020 15:45:09 correct LSTM model creation and compilation

13.Apr 2020 15:45:35 correct model training, correct saving of model and weights

13.Apr 2020 15:50:09 correct LSTM model creation and compilation

13.Apr 2020 15:50:35 correct model training, correct saving of model and weights

13.Apr 2020 15:53:56 correct LSTM model creation and compilation

13.Apr 2020 15:54:22 correct model training, correct saving of model and weights

13.Apr 2020 15:55:47 correct LSTM model creation and compilation

13.Apr 2020 15:56:14 correct model training, correct saving of model and weights

13.Apr 2020 15:59:17 correct LSTM model creation and compilation

13.Apr 2020 15:59:43 correct model training, correct saving of model and weights

13.Apr 2020 16:00:32 correct LSTM model creation and compilation

13.Apr 2020 16:00:58 correct model training, correct saving of model and weights

13.Apr 2020 16:03:13 correct LSTM model creation and compilation

13.Apr 2020 16:03:39 correct model training, correct saving of model and weights

13.Apr 2020 16:06:05 correct LSTM model creation and compilation

13.Apr 2020 16:06:32 correct model training, correct saving of model and weights

13.Apr 2020 16:08:21 correct LSTM model creation and compilation

13.Apr 2020 16:08:47 correct model training, correct saving of model and weights

13.Apr 2020 16:10:42 correct LSTM model creation and compilation

13.Apr 2020 16:11:08 correct model training, correct saving of model and weights

13.Apr 2020 16:12:33 correct LSTM model creation and compilation

13.Apr 2020 16:13:00 correct model training, correct saving of model and weights

13.Apr 2020 16:14:47 correct LSTM model creation and compilation

13.Apr 2020 16:15:13 correct model training, correct saving of model and weights

13.Apr 2020 16:19:08 correct LSTM model creation and compilation

13.Apr 2020 16:19:34 correct model training, correct saving of model and weights

13.Apr 2020 16:21:00 correct LSTM model creation and compilation

13.Apr 2020 16:21:26 correct model training, correct saving of model and weights

13.Apr 2020 16:23:36 correct LSTM model creation and compilation

13.Apr 2020 16:24:03 correct model training, correct saving of model and weights

13.Apr 2020 16:24:52 correct LSTM model creation and compilation

13.Apr 2020 16:24:53 model training error
Data cardinality is ambiguous:
  x sizes: 365
  y sizes: 1548
Please provide data which shares the same first dimension.
Traceback (most recent call last):
  File ".\_2_train.py", line 124, in train
    forecaster.fit(x_train, y_train, batch_size=batch_size, epochs=epochs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 66, in _method_wrapper
    return method(self, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 739, in fit
    data_handler = data_adapter.DataHandler(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\data_adapter.py", line 1100, in __init__
    self._adapter = adapter_cls(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\data_adapter.py", line 282, in __init__
    raise ValueError(msg)
ValueError: Data cardinality is ambiguous:
  x sizes: 365
  y sizes: 1548
Please provide data which shares the same first dimension.

13.Apr 2020 16:27:28 correct LSTM model creation and compilation

13.Apr 2020 16:27:54 correct model training, correct saving of model and weights

13.Apr 2020 16:29:11 correct LSTM model creation and compilation

13.Apr 2020 16:29:38 correct model training, correct saving of model and weights

13.Apr 2020 16:30:46 correct LSTM model creation and compilation

13.Apr 2020 16:31:12 correct model training, correct saving of model and weights

13.Apr 2020 16:32:52 correct LSTM model creation and compilation

13.Apr 2020 16:33:18 correct model training, correct saving of model and weights

13.Apr 2020 16:35:47 correct LSTM model creation and compilation

13.Apr 2020 16:36:13 correct model training, correct saving of model and weights

13.Apr 2020 16:37:51 correct LSTM model creation and compilation

13.Apr 2020 16:38:17 correct model training, correct saving of model and weights

13.Apr 2020 16:44:46 correct LSTM model creation and compilation

13.Apr 2020 16:45:12 correct model training, correct saving of model and weights

13.Apr 2020 16:47:05 correct LSTM model creation and compilation

13.Apr 2020 16:47:31 correct model training, correct saving of model and weights

13.Apr 2020 16:54:22 correct LSTM model creation and compilation

13.Apr 2020 16:54:48 correct model training, correct saving of model and weights

13.Apr 2020 16:57:44 correct LSTM model creation and compilation

13.Apr 2020 16:58:10 correct model training, correct saving of model and weights

13.Apr 2020 18:21:14 correct LSTM model creation and compilation

13.Apr 2020 18:21:41 correct model training, correct saving of model and weights

13.Apr 2020 18:27:31 correct LSTM model creation and compilation

13.Apr 2020 18:27:58 correct model training, correct saving of model and weights

13.Apr 2020 18:30:10 correct LSTM model creation and compilation

13.Apr 2020 18:30:40 correct model training, correct saving of model and weights

13.Apr 2020 18:33:57 correct LSTM model creation and compilation

13.Apr 2020 18:34:33 correct model training, correct saving of model and weights

13.Apr 2020 18:38:24 correct LSTM model creation and compilation

13.Apr 2020 18:38:58 correct model training, correct saving of model and weights

13.Apr 2020 18:53:59 correct LSTM model creation and compilation

13.Apr 2020 18:57:27 correct LSTM model creation and compilation

13.Apr 2020 18:59:27 correct LSTM model creation and compilation

13.Apr 2020 19:00:23 correct LSTM model creation and compilation

13.Apr 2020 19:01:15 correct model training, correct saving of model and weights

13.Apr 2020 19:59:42 correct LSTM model creation and compilation

13.Apr 2020 20:00:08 correct model training, correct saving of model and weights

13.Apr 2020 20:09:05 correct LSTM model creation and compilation

13.Apr 2020 20:09:58 correct model training, correct saving of model and weights

13.Apr 2020 20:16:55 correct LSTM model creation and compilation

13.Apr 2020 20:17:48 correct model training, correct saving of model and weights

13.Apr 2020 20:21:38 correct LSTM model creation and compilation

13.Apr 2020 20:22:30 correct model training, correct saving of model and weights

13.Apr 2020 20:25:51 correct LSTM model creation and compilation

13.Apr 2020 20:26:43 correct model training, correct saving of model and weights

13.Apr 2020 20:28:10 correct LSTM model creation and compilation

13.Apr 2020 20:29:04 correct model training, correct saving of model and weights

13.Apr 2020 21:58:55 correct LSTM model creation and compilation

13.Apr 2020 21:59:49 correct model training, correct saving of model and weights

13.Apr 2020 22:02:16 correct LSTM model creation and compilation

13.Apr 2020 22:03:10 correct model training, correct saving of model and weights

13.Apr 2020 22:19:41 correct LSTM model creation and compilation

13.Apr 2020 22:28:18 correct LSTM model creation and compilation

13.Apr 2020 22:29:24 correct LSTM model creation and compilation

13.Apr 2020 22:29:56 correct model training, correct saving of model and weights

13.Apr 2020 22:43:41 correct LSTM model creation and compilation

13.Apr 2020 22:44:14 correct model training, correct saving of model and weights

13.Apr 2020 22:46:19 correct LSTM model creation and compilation

13.Apr 2020 22:46:49 correct model training, correct saving of model and weights

13.Apr 2020 22:54:47 correct LSTM model creation and compilation

13.Apr 2020 22:55:17 correct model training, correct saving of model and weights

13.Apr 2020 22:55:56 correct LSTM model creation and compilation

13.Apr 2020 22:57:05 correct LSTM model creation and compilation

13.Apr 2020 23:20:30 correct LSTM model creation and compilation

13.Apr 2020 23:21:28 correct LSTM model creation and compilation

13.Apr 2020 23:22:07 correct model training, correct saving of model and weights

13.Apr 2020 23:27:55 correct LSTM model creation and compilation

13.Apr 2020 23:28:24 correct model training, correct saving of model and weights

13.Apr 2020 23:29:45 correct LSTM model creation and compilation

13.Apr 2020 23:32:22 correct LSTM model creation and compilation

13.Apr 2020 23:33:01 correct model training, correct saving of model and weights

13.Apr 2020 23:35:13 correct LSTM model creation and compilation

13.Apr 2020 23:38:08 correct LSTM model creation and compilation

13.Apr 2020 23:39:45 correct LSTM model creation and compilation

13.Apr 2020 23:40:43 correct model training, correct saving of model and weights

13.Apr 2020 23:48:16 correct LSTM model creation and compilation

13.Apr 2020 23:49:14 correct model training, correct saving of model and weights

13.Apr 2020 23:49:52 correct LSTM model creation and compilation

13.Apr 2020 23:50:50 correct model training, correct saving of model and weights

14.Apr 2020 00:15:16 correct LSTM model creation and compilation

14.Apr 2020 00:16:17 correct model training, correct saving of model and weights

14.Apr 2020 00:24:35 correct LSTM model creation and compilation

14.Apr 2020 00:25:36 correct model training, correct saving of model and weights

14.Apr 2020 00:38:10 correct LSTM model creation and compilation

14.Apr 2020 00:39:08 correct model training, correct saving of model and weights

14.Apr 2020 00:41:41 correct LSTM model creation and compilation

14.Apr 2020 00:42:39 correct model training, correct saving of model and weights

14.Apr 2020 00:43:28 correct LSTM model creation and compilation

14.Apr 2020 00:44:26 correct model training, correct saving of model and weights

14.Apr 2020 00:45:29 correct LSTM model creation and compilation

14.Apr 2020 00:46:27 correct model training, correct saving of model and weights

14.Apr 2020 00:48:01 correct LSTM model creation and compilation

14.Apr 2020 00:48:59 correct model training, correct saving of model and weights

14.Apr 2020 00:50:18 correct LSTM model creation and compilation

14.Apr 2020 00:54:10 correct model training, correct saving of model and weights

14.Apr 2020 00:54:53 correct LSTM model creation and compilation

14.Apr 2020 00:58:45 correct model training, correct saving of model and weights

14.Apr 2020 01:02:07 correct LSTM model creation and compilation

14.Apr 2020 01:03:08 correct LSTM model creation and compilation

14.Apr 2020 01:04:52 correct model training, correct saving of model and weights

14.Apr 2020 01:06:27 correct LSTM model creation and compilation

14.Apr 2020 01:07:31 model training error
 [_Derived_]  Failed to call ThenRnnBackward with model config: [rnn_mode, rnn_input_mode, rnn_direction_mode]: 2, 0, 0 , [num_layers, input_size, num_units, dir_count, max_seq_length, batch_size, cell_num_units]: [1, 1, 50, 1, 180, 32, 50] 
	 [[{{node gradients/CudnnRNN_grad/CudnnRNNBackprop}}]]
	 [[StatefulPartitionedCall_3]] [Op:__inference_train_function_11261]

Function call stack:
train_function -> train_function -> train_function
Traceback (most recent call last):
  File ".\_2_train.py", line 124, in train
    forecaster.fit(x_train, y_train, batch_size=batch_size, epochs=epochs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 66, in _method_wrapper
    return method(self, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 785, in fit
    tmp_logs = train_function(iterator)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 580, in __call__
    result = self._call(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 611, in _call
    return self._stateless_fn(*args, **kwds)  # pylint: disable=not-callable
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2420, in __call__
    return graph_function._filtered_call(args, kwargs)  # pylint: disable=protected-access
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 1661, in _filtered_call
    return self._call_flat(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 1745, in _call_flat
    return self._build_call_outputs(self._inference_function.call(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 593, in call
    outputs = execute.execute(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\execute.py", line 59, in quick_execute
    tensors = pywrap_tfe.TFE_Py_Execute(ctx._handle, device_name, op_name,
tensorflow.python.framework.errors_impl.InternalError:  [_Derived_]  Failed to call ThenRnnBackward with model config: [rnn_mode, rnn_input_mode, rnn_direction_mode]: 2, 0, 0 , [num_layers, input_size, num_units, dir_count, max_seq_length, batch_size, cell_num_units]: [1, 1, 50, 1, 180, 32, 50] 
	 [[{{node gradients/CudnnRNN_grad/CudnnRNNBackprop}}]]
	 [[StatefulPartitionedCall_3]] [Op:__inference_train_function_11261]

Function call stack:
train_function -> train_function -> train_function


14.Apr 2020 01:09:26 correct LSTM model creation and compilation

14.Apr 2020 01:10:08 model training error
 [_Derived_]  Failed to call ThenRnnBackward with model config: [rnn_mode, rnn_input_mode, rnn_direction_mode]: 2, 0, 0 , [num_layers, input_size, num_units, dir_count, max_seq_length, batch_size, cell_num_units]: [1, 50, 50, 1, 180, 32, 50] 
	 [[{{node gradients/CudnnRNN_grad/CudnnRNNBackprop}}]]
	 [[StatefulPartitionedCall_2]] [Op:__inference_train_function_11261]

Function call stack:
train_function -> train_function -> train_function
Traceback (most recent call last):
  File ".\_2_train.py", line 124, in train
    forecaster.fit(x_train, y_train, batch_size=batch_size, epochs=epochs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 66, in _method_wrapper
    return method(self, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 785, in fit
    tmp_logs = train_function(iterator)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 580, in __call__
    result = self._call(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 611, in _call
    return self._stateless_fn(*args, **kwds)  # pylint: disable=not-callable
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2420, in __call__
    return graph_function._filtered_call(args, kwargs)  # pylint: disable=protected-access
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 1661, in _filtered_call
    return self._call_flat(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 1745, in _call_flat
    return self._build_call_outputs(self._inference_function.call(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 593, in call
    outputs = execute.execute(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\execute.py", line 59, in quick_execute
    tensors = pywrap_tfe.TFE_Py_Execute(ctx._handle, device_name, op_name,
tensorflow.python.framework.errors_impl.InternalError:  [_Derived_]  Failed to call ThenRnnBackward with model config: [rnn_mode, rnn_input_mode, rnn_direction_mode]: 2, 0, 0 , [num_layers, input_size, num_units, dir_count, max_seq_length, batch_size, cell_num_units]: [1, 50, 50, 1, 180, 32, 50] 
	 [[{{node gradients/CudnnRNN_grad/CudnnRNNBackprop}}]]
	 [[StatefulPartitionedCall_2]] [Op:__inference_train_function_11261]

Function call stack:
train_function -> train_function -> train_function


14.Apr 2020 01:10:41 correct LSTM model creation and compilation

14.Apr 2020 01:13:30 correct LSTM model creation and compilation

14.Apr 2020 01:15:26 correct model training, correct saving of model and weights

14.Apr 2020 01:16:06 correct LSTM model creation and compilation

14.Apr 2020 01:17:49 correct model training, correct saving of model and weights

14.Apr 2020 01:18:25 correct LSTM model creation and compilation

14.Apr 2020 01:19:58 correct model training, correct saving of model and weights

14.Apr 2020 01:20:35 correct LSTM model creation and compilation

14.Apr 2020 01:22:08 correct model training, correct saving of model and weights

14.Apr 2020 01:23:34 correct LSTM model creation and compilation

14.Apr 2020 01:24:55 correct model training, correct saving of model and weights

14.Apr 2020 01:25:31 correct LSTM model creation and compilation

14.Apr 2020 01:28:02 correct LSTM model creation and compilation

14.Apr 2020 01:29:33 correct model training, correct saving of model and weights

14.Apr 2020 01:30:32 correct LSTM model creation and compilation

14.Apr 2020 01:31:58 correct model training, correct saving of model and weights

14.Apr 2020 01:36:36 correct LSTM model creation and compilation

14.Apr 2020 01:43:37 LSTM model creation or compile error
'input_shape_0'
Traceback (most recent call last):
  File ".\_2_train.py", line 53, in <module>
    input_shape=(int(model_hyperparameters['input_shape_0']),
KeyError: 'input_shape_0'

14.Apr 2020 01:51:05 correct LSTM model creation and compilation

14.Apr 2020 01:59:44 correct LSTM model creation and compilation

14.Apr 2020 02:01:53 correct LSTM model creation and compilation

14.Apr 2020 02:02:01 data dimensions does not match settings

14.Apr 2020 02:03:24 correct LSTM model creation and compilation

14.Apr 2020 02:06:45 correct LSTM model creation and compilation

14.Apr 2020 02:10:42 correct LSTM model creation and compilation

14.Apr 2020 02:17:04 correct LSTM model creation and compilation

14.Apr 2020 02:20:27 correct LSTM model creation and compilation

14.Apr 2020 02:23:51 correct LSTM model creation and compilation

14.Apr 2020 06:48:03 correct LSTM model creation and compilation

14.Apr 2020 06:49:29 correct model training, correct saving of model and weights

14.Apr 2020 07:03:48 correct LSTM model creation and compilation

14.Apr 2020 07:06:00 correct model training, correct saving of model and weights

14.Apr 2020 07:17:06 correct LSTM model creation and compilation

14.Apr 2020 07:25:38 correct model training, correct saving of model and weights

14.Apr 2020 18:09:30 correct LSTM model creation and compilation

14.Apr 2020 18:11:55 correct model training, correct saving of model and weights

14.Apr 2020 18:13:04 correct LSTM model creation and compilation

14.Apr 2020 18:15:23 correct model training, correct saving of model and weights

14.Apr 2020 18:20:16 correct LSTM model creation and compilation

14.Apr 2020 18:22:39 correct model training, correct saving of model and weights

14.Apr 2020 18:30:41 correct LSTM model creation and compilation

14.Apr 2020 18:33:05 correct model training, correct saving of model and weights

14.Apr 2020 18:43:18 correct LSTM model creation and compilation

14.Apr 2020 18:45:32 correct model training, correct saving of model and weights

14.Apr 2020 18:49:12 correct LSTM model creation and compilation

14.Apr 2020 18:51:23 correct model training, correct saving of model and weights

14.Apr 2020 18:52:38 correct LSTM model creation and compilation

14.Apr 2020 18:54:03 correct model training, correct saving of model and weights

14.Apr 2020 18:56:01 correct LSTM model creation and compilation

14.Apr 2020 18:57:27 correct model training, correct saving of model and weights

14.Apr 2020 19:24:59 correct LSTM model creation and compilation

14.Apr 2020 19:26:03 correct LSTM model creation and compilation

14.Apr 2020 19:27:26 correct model training, correct saving of model and weights

14.Apr 2020 19:32:04 correct LSTM model creation and compilation

14.Apr 2020 19:33:37 correct model training, correct saving of model and weights

14.Apr 2020 19:38:57 correct LSTM model creation and compilation

14.Apr 2020 19:40:27 correct model training, correct saving of model and weights

14.Apr 2020 19:49:32 correct LSTM model creation and compilation

14.Apr 2020 19:51:02 correct model training, correct saving of model and weights

14.Apr 2020 20:49:09 correct LSTM model creation and compilation

14.Apr 2020 20:50:34 correct model training, correct saving of model and weights

14.Apr 2020 20:51:06 correct LSTM model creation and compilation

14.Apr 2020 20:52:30 correct model training, correct saving of model and weights

14.Apr 2020 20:57:41 correct LSTM model creation and compilation

14.Apr 2020 20:59:06 correct model training, correct saving of model and weights

14.Apr 2020 21:11:48 correct LSTM model creation and compilation

14.Apr 2020 21:13:21 correct model training, correct saving of model and weights

14.Apr 2020 21:14:55 correct LSTM model creation and compilation

14.Apr 2020 21:16:27 correct model training, correct saving of model and weights

14.Apr 2020 22:48:30 correct LSTM model creation and compilation

14.Apr 2020 22:53:40 correct model training, correct saving of model and weights

14.Apr 2020 23:25:02 correct LSTM model creation and compilation

14.Apr 2020 23:29:10 correct model training, correct saving of model and weights

14.Apr 2020 23:35:36 correct LSTM model creation and compilation

14.Apr 2020 23:39:50 correct model training, correct saving of model and weights

14.Apr 2020 23:48:16 correct LSTM model creation and compilation

14.Apr 2020 23:52:32 correct model training, correct saving of model and weights

14.Apr 2020 23:58:45 correct LSTM model creation and compilation

15.Apr 2020 00:02:56 correct model training, correct saving of model and weights

15.Apr 2020 00:11:56 correct LSTM model creation and compilation

15.Apr 2020 00:13:59 correct model training, correct saving of model and weights

15.Apr 2020 00:18:37 correct LSTM model creation and compilation

15.Apr 2020 00:20:00 correct model training, correct saving of model and weights

15.Apr 2020 00:22:30 correct LSTM model creation and compilation

15.Apr 2020 00:23:49 correct model training, correct saving of model and weights

15.Apr 2020 00:26:38 correct LSTM model creation and compilation

15.Apr 2020 00:31:42 correct model training, correct saving of model and weights

15.Apr 2020 00:32:59 correct LSTM model creation and compilation

15.Apr 2020 00:37:57 correct model training, correct saving of model and weights

15.Apr 2020 01:00:29 correct LSTM model creation and compilation

15.Apr 2020 01:05:34 correct model training, correct saving of model and weights

15.Apr 2020 01:35:50 correct LSTM model creation and compilation

15.Apr 2020 01:38:46 correct LSTM model creation and compilation

15.Apr 2020 01:42:53 correct model training, correct saving of model and weights

15.Apr 2020 19:01:22 correct LSTM model creation and compilation

15.Apr 2020 19:07:00 correct model training, correct saving of model and weights

15.Apr 2020 19:20:55 correct LSTM model creation and compilation

15.Apr 2020 19:21:28 model training error
in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:465 train_step  **
        y_pred = self(x, training=True)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py:885 __call__
        input_spec.assert_input_compatibility(self.input_spec, inputs,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\input_spec.py:176 assert_input_compatibility
        raise ValueError('Input ' + str(input_index) + ' of layer ' +

    ValueError: Input 0 of layer sequential is incompatible with the layer: expected ndim=3, found ndim=4. Full shape received: [None, None, None, None]
Traceback (most recent call last):
  File ".\_2_train.py", line 136, in train
    forecaster.fit(input_x_train_y_train, batch_size=batch_size, epochs=epochs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 66, in _method_wrapper
    return method(self, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 785, in fit
    tmp_logs = train_function(iterator)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 580, in __call__
    result = self._call(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 627, in _call
    self._initialize(args, kwds, add_initializers_to=initializers)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 505, in _initialize
    self._stateful_fn._get_concrete_function_internal_garbage_collected(  # pylint: disable=protected-access
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2446, in _get_concrete_function_internal_garbage_collected
    graph_function, _, _ = self._maybe_define_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2777, in _maybe_define_function
    graph_function = self._create_graph_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2657, in _create_graph_function
    func_graph_module.func_graph_from_py_func(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 981, in func_graph_from_py_func
    func_outputs = python_func(*func_args, **func_kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 441, in wrapped_fn
    return weak_wrapped_fn().__wrapped__(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 968, in wrapper
    raise e.ag_error_metadata.to_exception(e)
ValueError: in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:465 train_step  **
        y_pred = self(x, training=True)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py:885 __call__
        input_spec.assert_input_compatibility(self.input_spec, inputs,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\input_spec.py:176 assert_input_compatibility
        raise ValueError('Input ' + str(input_index) + ' of layer ' +

    ValueError: Input 0 of layer sequential is incompatible with the layer: expected ndim=3, found ndim=4. Full shape received: [None, None, None, None]


15.Apr 2020 19:25:07 correct LSTM model creation and compilation

15.Apr 2020 19:29:02 correct model training, correct saving of model and weights

15.Apr 2020 20:51:46 correct LSTM model creation and compilation

15.Apr 2020 20:52:18 model training error
`validation_split` is only supported for Tensors or NumPy arrays, found: (<tensorflow.python.keras.preprocessing.sequence.TimeseriesGenerator object at 0x0000025555AC5A00>, None, None)
Traceback (most recent call last):
  File ".\_2_train.py", line 137, in train
    forecaster.fit(input_x_train_y_train, epochs=epochs, validation_split=0.8)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 66, in _method_wrapper
    return method(self, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 732, in fit
    data_adapter.train_validation_split((x, y, sample_weight),
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\data_adapter.py", line 1314, in train_validation_split
    raise ValueError(
ValueError: `validation_split` is only supported for Tensors or NumPy arrays, found: (<tensorflow.python.keras.preprocessing.sequence.TimeseriesGenerator object at 0x0000025555AC5A00>, None, None)

15.Apr 2020 20:56:29 correct LSTM model creation and compilation

15.Apr 2020 20:57:00 model training error
in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:465 train_step  **
        y_pred = self(x, training=True)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py:885 __call__
        input_spec.assert_input_compatibility(self.input_spec, inputs,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\input_spec.py:176 assert_input_compatibility
        raise ValueError('Input ' + str(input_index) + ' of layer ' +

    ValueError: Input 0 of layer sequential is incompatible with the layer: expected ndim=3, found ndim=4. Full shape received: [None, None, None, None]
Traceback (most recent call last):
  File ".\_2_train.py", line 137, in train
    forecaster.fit(input_x_train_y_train, epochs=epochs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 66, in _method_wrapper
    return method(self, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 785, in fit
    tmp_logs = train_function(iterator)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 580, in __call__
    result = self._call(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 627, in _call
    self._initialize(args, kwds, add_initializers_to=initializers)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 505, in _initialize
    self._stateful_fn._get_concrete_function_internal_garbage_collected(  # pylint: disable=protected-access
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2446, in _get_concrete_function_internal_garbage_collected
    graph_function, _, _ = self._maybe_define_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2777, in _maybe_define_function
    graph_function = self._create_graph_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2657, in _create_graph_function
    func_graph_module.func_graph_from_py_func(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 981, in func_graph_from_py_func
    func_outputs = python_func(*func_args, **func_kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 441, in wrapped_fn
    return weak_wrapped_fn().__wrapped__(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 968, in wrapper
    raise e.ag_error_metadata.to_exception(e)
ValueError: in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:465 train_step  **
        y_pred = self(x, training=True)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py:885 __call__
        input_spec.assert_input_compatibility(self.input_spec, inputs,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\input_spec.py:176 assert_input_compatibility
        raise ValueError('Input ' + str(input_index) + ' of layer ' +

    ValueError: Input 0 of layer sequential is incompatible with the layer: expected ndim=3, found ndim=4. Full shape received: [None, None, None, None]


15.Apr 2020 21:01:51 correct LSTM model creation and compilation

15.Apr 2020 21:05:06 correct model training, correct saving of model and weights

15.Apr 2020 21:06:17 correct LSTM model creation and compilation

15.Apr 2020 21:11:18 correct model training, correct saving of model and weights

15.Apr 2020 21:42:42 correct LSTM model creation and compilation

15.Apr 2020 21:43:16 model training error
in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:477 train_step  **
        self.compiled_metrics.update_state(y, y_pred, sample_weight)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:386 update_state
        self._build(y_pred, y_true)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:316 _build
        self._metrics = nest.map_structure_up_to(y_pred, self._get_metric_objects,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:1114 map_structure_up_to
        return map_structure_with_tuple_paths_up_to(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:1213 map_structure_with_tuple_paths_up_to
        results = [func(*args, **kwargs) for args in zip(flat_path_list,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:1213 <listcomp>
        results = [func(*args, **kwargs) for args in zip(flat_path_list,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:1116 <lambda>
        lambda _, *values: func(*values),  # Discards the path arg.
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:416 _get_metric_objects
        return [self._get_metric_object(m, y_t, y_p) for m in metrics]
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:416 <listcomp>
        return [self._get_metric_object(m, y_t, y_p) for m in metrics]
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:435 _get_metric_object
        metric_obj = metrics_mod.get(metric)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\metrics.py:3358 get
        return deserialize(str(identifier))
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\metrics.py:3345 deserialize
        return deserialize_keras_object(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\utils\generic_utils.py:392 deserialize_keras_object
        raise ValueError('Unknown ' + printable_module_name + ':' + object_name)

    ValueError: Unknown metric function:[tf.keras.metrics.RootMeanSquaredError()]
Traceback (most recent call last):
  File ".\_2_train.py", line 132, in train
    forecaster.fit(x_train, y_train, batch_size=batch_size, epochs=epochs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 66, in _method_wrapper
    return method(self, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 785, in fit
    tmp_logs = train_function(iterator)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 580, in __call__
    result = self._call(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 627, in _call
    self._initialize(args, kwds, add_initializers_to=initializers)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 505, in _initialize
    self._stateful_fn._get_concrete_function_internal_garbage_collected(  # pylint: disable=protected-access
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2446, in _get_concrete_function_internal_garbage_collected
    graph_function, _, _ = self._maybe_define_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2777, in _maybe_define_function
    graph_function = self._create_graph_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2657, in _create_graph_function
    func_graph_module.func_graph_from_py_func(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 981, in func_graph_from_py_func
    func_outputs = python_func(*func_args, **func_kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 441, in wrapped_fn
    return weak_wrapped_fn().__wrapped__(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 968, in wrapper
    raise e.ag_error_metadata.to_exception(e)
ValueError: in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:477 train_step  **
        self.compiled_metrics.update_state(y, y_pred, sample_weight)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:386 update_state
        self._build(y_pred, y_true)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:316 _build
        self._metrics = nest.map_structure_up_to(y_pred, self._get_metric_objects,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:1114 map_structure_up_to
        return map_structure_with_tuple_paths_up_to(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:1213 map_structure_with_tuple_paths_up_to
        results = [func(*args, **kwargs) for args in zip(flat_path_list,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:1213 <listcomp>
        results = [func(*args, **kwargs) for args in zip(flat_path_list,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:1116 <lambda>
        lambda _, *values: func(*values),  # Discards the path arg.
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:416 _get_metric_objects
        return [self._get_metric_object(m, y_t, y_p) for m in metrics]
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:416 <listcomp>
        return [self._get_metric_object(m, y_t, y_p) for m in metrics]
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:435 _get_metric_object
        metric_obj = metrics_mod.get(metric)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\metrics.py:3358 get
        return deserialize(str(identifier))
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\metrics.py:3345 deserialize
        return deserialize_keras_object(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\utils\generic_utils.py:392 deserialize_keras_object
        raise ValueError('Unknown ' + printable_module_name + ':' + object_name)

    ValueError: Unknown metric function:[tf.keras.metrics.RootMeanSquaredError()]


15.Apr 2020 21:44:47 correct LSTM model creation and compilation

15.Apr 2020 21:45:21 model training error
in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:477 train_step  **
        self.compiled_metrics.update_state(y, y_pred, sample_weight)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:386 update_state
        self._build(y_pred, y_true)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:316 _build
        self._metrics = nest.map_structure_up_to(y_pred, self._get_metric_objects,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:1114 map_structure_up_to
        return map_structure_with_tuple_paths_up_to(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:1213 map_structure_with_tuple_paths_up_to
        results = [func(*args, **kwargs) for args in zip(flat_path_list,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:1213 <listcomp>
        results = [func(*args, **kwargs) for args in zip(flat_path_list,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:1116 <lambda>
        lambda _, *values: func(*values),  # Discards the path arg.
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:416 _get_metric_objects
        return [self._get_metric_object(m, y_t, y_p) for m in metrics]
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:416 <listcomp>
        return [self._get_metric_object(m, y_t, y_p) for m in metrics]
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:435 _get_metric_object
        metric_obj = metrics_mod.get(metric)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\metrics.py:3358 get
        return deserialize(str(identifier))
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\metrics.py:3345 deserialize
        return deserialize_keras_object(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\utils\generic_utils.py:392 deserialize_keras_object
        raise ValueError('Unknown ' + printable_module_name + ':' + object_name)

    ValueError: Unknown metric function:[tf.keras.metrics.RootMeanSquaredError()]
Traceback (most recent call last):
  File ".\_2_train.py", line 132, in train
    forecaster.fit(x_train, y_train, batch_size=batch_size, epochs=epochs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 66, in _method_wrapper
    return method(self, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 785, in fit
    tmp_logs = train_function(iterator)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 580, in __call__
    result = self._call(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 627, in _call
    self._initialize(args, kwds, add_initializers_to=initializers)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 505, in _initialize
    self._stateful_fn._get_concrete_function_internal_garbage_collected(  # pylint: disable=protected-access
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2446, in _get_concrete_function_internal_garbage_collected
    graph_function, _, _ = self._maybe_define_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2777, in _maybe_define_function
    graph_function = self._create_graph_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2657, in _create_graph_function
    func_graph_module.func_graph_from_py_func(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 981, in func_graph_from_py_func
    func_outputs = python_func(*func_args, **func_kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 441, in wrapped_fn
    return weak_wrapped_fn().__wrapped__(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 968, in wrapper
    raise e.ag_error_metadata.to_exception(e)
ValueError: in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:477 train_step  **
        self.compiled_metrics.update_state(y, y_pred, sample_weight)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:386 update_state
        self._build(y_pred, y_true)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:316 _build
        self._metrics = nest.map_structure_up_to(y_pred, self._get_metric_objects,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:1114 map_structure_up_to
        return map_structure_with_tuple_paths_up_to(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:1213 map_structure_with_tuple_paths_up_to
        results = [func(*args, **kwargs) for args in zip(flat_path_list,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:1213 <listcomp>
        results = [func(*args, **kwargs) for args in zip(flat_path_list,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:1116 <lambda>
        lambda _, *values: func(*values),  # Discards the path arg.
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:416 _get_metric_objects
        return [self._get_metric_object(m, y_t, y_p) for m in metrics]
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:416 <listcomp>
        return [self._get_metric_object(m, y_t, y_p) for m in metrics]
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:435 _get_metric_object
        metric_obj = metrics_mod.get(metric)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\metrics.py:3358 get
        return deserialize(str(identifier))
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\metrics.py:3345 deserialize
        return deserialize_keras_object(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\utils\generic_utils.py:392 deserialize_keras_object
        raise ValueError('Unknown ' + printable_module_name + ':' + object_name)

    ValueError: Unknown metric function:[tf.keras.metrics.RootMeanSquaredError()]


15.Apr 2020 21:46:11 correct LSTM model creation and compilation

15.Apr 2020 21:46:45 model training error
in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:477 train_step  **
        self.compiled_metrics.update_state(y, y_pred, sample_weight)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:386 update_state
        self._build(y_pred, y_true)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:316 _build
        self._metrics = nest.map_structure_up_to(y_pred, self._get_metric_objects,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:1114 map_structure_up_to
        return map_structure_with_tuple_paths_up_to(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:1213 map_structure_with_tuple_paths_up_to
        results = [func(*args, **kwargs) for args in zip(flat_path_list,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:1213 <listcomp>
        results = [func(*args, **kwargs) for args in zip(flat_path_list,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:1116 <lambda>
        lambda _, *values: func(*values),  # Discards the path arg.
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:416 _get_metric_objects
        return [self._get_metric_object(m, y_t, y_p) for m in metrics]
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:416 <listcomp>
        return [self._get_metric_object(m, y_t, y_p) for m in metrics]
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:435 _get_metric_object
        metric_obj = metrics_mod.get(metric)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\metrics.py:3358 get
        return deserialize(str(identifier))
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\metrics.py:3345 deserialize
        return deserialize_keras_object(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\utils\generic_utils.py:392 deserialize_keras_object
        raise ValueError('Unknown ' + printable_module_name + ':' + object_name)

    ValueError: Unknown metric function:[RootMeanSquaredError()]
Traceback (most recent call last):
  File ".\_2_train.py", line 132, in train
    forecaster.fit(x_train, y_train, batch_size=batch_size, epochs=epochs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 66, in _method_wrapper
    return method(self, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 785, in fit
    tmp_logs = train_function(iterator)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 580, in __call__
    result = self._call(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 627, in _call
    self._initialize(args, kwds, add_initializers_to=initializers)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 505, in _initialize
    self._stateful_fn._get_concrete_function_internal_garbage_collected(  # pylint: disable=protected-access
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2446, in _get_concrete_function_internal_garbage_collected
    graph_function, _, _ = self._maybe_define_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2777, in _maybe_define_function
    graph_function = self._create_graph_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2657, in _create_graph_function
    func_graph_module.func_graph_from_py_func(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 981, in func_graph_from_py_func
    func_outputs = python_func(*func_args, **func_kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 441, in wrapped_fn
    return weak_wrapped_fn().__wrapped__(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 968, in wrapper
    raise e.ag_error_metadata.to_exception(e)
ValueError: in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:477 train_step  **
        self.compiled_metrics.update_state(y, y_pred, sample_weight)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:386 update_state
        self._build(y_pred, y_true)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:316 _build
        self._metrics = nest.map_structure_up_to(y_pred, self._get_metric_objects,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:1114 map_structure_up_to
        return map_structure_with_tuple_paths_up_to(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:1213 map_structure_with_tuple_paths_up_to
        results = [func(*args, **kwargs) for args in zip(flat_path_list,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:1213 <listcomp>
        results = [func(*args, **kwargs) for args in zip(flat_path_list,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:1116 <lambda>
        lambda _, *values: func(*values),  # Discards the path arg.
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:416 _get_metric_objects
        return [self._get_metric_object(m, y_t, y_p) for m in metrics]
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:416 <listcomp>
        return [self._get_metric_object(m, y_t, y_p) for m in metrics]
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:435 _get_metric_object
        metric_obj = metrics_mod.get(metric)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\metrics.py:3358 get
        return deserialize(str(identifier))
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\metrics.py:3345 deserialize
        return deserialize_keras_object(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\utils\generic_utils.py:392 deserialize_keras_object
        raise ValueError('Unknown ' + printable_module_name + ':' + object_name)

    ValueError: Unknown metric function:[RootMeanSquaredError()]


15.Apr 2020 21:49:02 correct LSTM model creation and compilation

15.Apr 2020 21:49:36 model training error
in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:477 train_step  **
        self.compiled_metrics.update_state(y, y_pred, sample_weight)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:386 update_state
        self._build(y_pred, y_true)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:316 _build
        self._metrics = nest.map_structure_up_to(y_pred, self._get_metric_objects,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:1114 map_structure_up_to
        return map_structure_with_tuple_paths_up_to(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:1213 map_structure_with_tuple_paths_up_to
        results = [func(*args, **kwargs) for args in zip(flat_path_list,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:1213 <listcomp>
        results = [func(*args, **kwargs) for args in zip(flat_path_list,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:1116 <lambda>
        lambda _, *values: func(*values),  # Discards the path arg.
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:416 _get_metric_objects
        return [self._get_metric_object(m, y_t, y_p) for m in metrics]
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:416 <listcomp>
        return [self._get_metric_object(m, y_t, y_p) for m in metrics]
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:435 _get_metric_object
        metric_obj = metrics_mod.get(metric)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\metrics.py:3358 get
        return deserialize(str(identifier))
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\metrics.py:3345 deserialize
        return deserialize_keras_object(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\utils\generic_utils.py:392 deserialize_keras_object
        raise ValueError('Unknown ' + printable_module_name + ':' + object_name)

    ValueError: Unknown metric function:[metrics.RootMeanSquaredError(), metrics.AUC()]
Traceback (most recent call last):
  File ".\_2_train.py", line 132, in train
    forecaster.fit(x_train, y_train, batch_size=batch_size, epochs=epochs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 66, in _method_wrapper
    return method(self, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 785, in fit
    tmp_logs = train_function(iterator)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 580, in __call__
    result = self._call(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 627, in _call
    self._initialize(args, kwds, add_initializers_to=initializers)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 505, in _initialize
    self._stateful_fn._get_concrete_function_internal_garbage_collected(  # pylint: disable=protected-access
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2446, in _get_concrete_function_internal_garbage_collected
    graph_function, _, _ = self._maybe_define_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2777, in _maybe_define_function
    graph_function = self._create_graph_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2657, in _create_graph_function
    func_graph_module.func_graph_from_py_func(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 981, in func_graph_from_py_func
    func_outputs = python_func(*func_args, **func_kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 441, in wrapped_fn
    return weak_wrapped_fn().__wrapped__(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 968, in wrapper
    raise e.ag_error_metadata.to_exception(e)
ValueError: in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:477 train_step  **
        self.compiled_metrics.update_state(y, y_pred, sample_weight)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:386 update_state
        self._build(y_pred, y_true)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:316 _build
        self._metrics = nest.map_structure_up_to(y_pred, self._get_metric_objects,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:1114 map_structure_up_to
        return map_structure_with_tuple_paths_up_to(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:1213 map_structure_with_tuple_paths_up_to
        results = [func(*args, **kwargs) for args in zip(flat_path_list,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:1213 <listcomp>
        results = [func(*args, **kwargs) for args in zip(flat_path_list,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:1116 <lambda>
        lambda _, *values: func(*values),  # Discards the path arg.
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:416 _get_metric_objects
        return [self._get_metric_object(m, y_t, y_p) for m in metrics]
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:416 <listcomp>
        return [self._get_metric_object(m, y_t, y_p) for m in metrics]
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:435 _get_metric_object
        metric_obj = metrics_mod.get(metric)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\metrics.py:3358 get
        return deserialize(str(identifier))
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\metrics.py:3345 deserialize
        return deserialize_keras_object(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\utils\generic_utils.py:392 deserialize_keras_object
        raise ValueError('Unknown ' + printable_module_name + ':' + object_name)

    ValueError: Unknown metric function:[metrics.RootMeanSquaredError(), metrics.AUC()]


15.Apr 2020 21:52:01 correct LSTM model creation and compilation

15.Apr 2020 21:54:38 correct LSTM model creation and compilation

15.Apr 2020 21:55:12 model training error
in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:477 train_step  **
        self.compiled_metrics.update_state(y, y_pred, sample_weight)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:386 update_state
        self._build(y_pred, y_true)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:316 _build
        self._metrics = nest.map_structure_up_to(y_pred, self._get_metric_objects,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:1114 map_structure_up_to
        return map_structure_with_tuple_paths_up_to(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:1213 map_structure_with_tuple_paths_up_to
        results = [func(*args, **kwargs) for args in zip(flat_path_list,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:1213 <listcomp>
        results = [func(*args, **kwargs) for args in zip(flat_path_list,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:1116 <lambda>
        lambda _, *values: func(*values),  # Discards the path arg.
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:416 _get_metric_objects
        return [self._get_metric_object(m, y_t, y_p) for m in metrics]
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:416 <listcomp>
        return [self._get_metric_object(m, y_t, y_p) for m in metrics]
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:435 _get_metric_object
        metric_obj = metrics_mod.get(metric)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\metrics.py:3358 get
        return deserialize(str(identifier))
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\metrics.py:3345 deserialize
        return deserialize_keras_object(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\utils\generic_utils.py:392 deserialize_keras_object
        raise ValueError('Unknown ' + printable_module_name + ':' + object_name)

    ValueError: Unknown metric function:[metrics.RootMeanSquaredError(), metrics.AUC()]
Traceback (most recent call last):
  File ".\_2_train.py", line 132, in train
    forecaster.fit(x_train, y_train, batch_size=batch_size, epochs=epochs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 66, in _method_wrapper
    return method(self, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 785, in fit
    tmp_logs = train_function(iterator)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 580, in __call__
    result = self._call(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 627, in _call
    self._initialize(args, kwds, add_initializers_to=initializers)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 505, in _initialize
    self._stateful_fn._get_concrete_function_internal_garbage_collected(  # pylint: disable=protected-access
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2446, in _get_concrete_function_internal_garbage_collected
    graph_function, _, _ = self._maybe_define_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2777, in _maybe_define_function
    graph_function = self._create_graph_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2657, in _create_graph_function
    func_graph_module.func_graph_from_py_func(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 981, in func_graph_from_py_func
    func_outputs = python_func(*func_args, **func_kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 441, in wrapped_fn
    return weak_wrapped_fn().__wrapped__(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 968, in wrapper
    raise e.ag_error_metadata.to_exception(e)
ValueError: in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:477 train_step  **
        self.compiled_metrics.update_state(y, y_pred, sample_weight)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:386 update_state
        self._build(y_pred, y_true)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:316 _build
        self._metrics = nest.map_structure_up_to(y_pred, self._get_metric_objects,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:1114 map_structure_up_to
        return map_structure_with_tuple_paths_up_to(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:1213 map_structure_with_tuple_paths_up_to
        results = [func(*args, **kwargs) for args in zip(flat_path_list,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:1213 <listcomp>
        results = [func(*args, **kwargs) for args in zip(flat_path_list,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:1116 <lambda>
        lambda _, *values: func(*values),  # Discards the path arg.
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:416 _get_metric_objects
        return [self._get_metric_object(m, y_t, y_p) for m in metrics]
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:416 <listcomp>
        return [self._get_metric_object(m, y_t, y_p) for m in metrics]
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:435 _get_metric_object
        metric_obj = metrics_mod.get(metric)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\metrics.py:3358 get
        return deserialize(str(identifier))
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\metrics.py:3345 deserialize
        return deserialize_keras_object(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\utils\generic_utils.py:392 deserialize_keras_object
        raise ValueError('Unknown ' + printable_module_name + ':' + object_name)

    ValueError: Unknown metric function:[metrics.RootMeanSquaredError(), metrics.AUC()]


15.Apr 2020 21:57:17 correct LSTM model creation and compilation

15.Apr 2020 21:57:51 model training error
in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:477 train_step  **
        self.compiled_metrics.update_state(y, y_pred, sample_weight)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:386 update_state
        self._build(y_pred, y_true)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:316 _build
        self._metrics = nest.map_structure_up_to(y_pred, self._get_metric_objects,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:1114 map_structure_up_to
        return map_structure_with_tuple_paths_up_to(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:1213 map_structure_with_tuple_paths_up_to
        results = [func(*args, **kwargs) for args in zip(flat_path_list,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:1213 <listcomp>
        results = [func(*args, **kwargs) for args in zip(flat_path_list,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:1116 <lambda>
        lambda _, *values: func(*values),  # Discards the path arg.
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:416 _get_metric_objects
        return [self._get_metric_object(m, y_t, y_p) for m in metrics]
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:416 <listcomp>
        return [self._get_metric_object(m, y_t, y_p) for m in metrics]
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:435 _get_metric_object
        metric_obj = metrics_mod.get(metric)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\metrics.py:3358 get
        return deserialize(str(identifier))
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\metrics.py:3345 deserialize
        return deserialize_keras_object(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\utils\generic_utils.py:392 deserialize_keras_object
        raise ValueError('Unknown ' + printable_module_name + ':' + object_name)

    ValueError: Unknown metric function:metrics.RootMeanSquaredError()
Traceback (most recent call last):
  File ".\_2_train.py", line 132, in train
    forecaster.fit(x_train, y_train, batch_size=batch_size, epochs=epochs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 66, in _method_wrapper
    return method(self, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 785, in fit
    tmp_logs = train_function(iterator)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 580, in __call__
    result = self._call(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 627, in _call
    self._initialize(args, kwds, add_initializers_to=initializers)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 505, in _initialize
    self._stateful_fn._get_concrete_function_internal_garbage_collected(  # pylint: disable=protected-access
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2446, in _get_concrete_function_internal_garbage_collected
    graph_function, _, _ = self._maybe_define_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2777, in _maybe_define_function
    graph_function = self._create_graph_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2657, in _create_graph_function
    func_graph_module.func_graph_from_py_func(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 981, in func_graph_from_py_func
    func_outputs = python_func(*func_args, **func_kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 441, in wrapped_fn
    return weak_wrapped_fn().__wrapped__(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 968, in wrapper
    raise e.ag_error_metadata.to_exception(e)
ValueError: in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:477 train_step  **
        self.compiled_metrics.update_state(y, y_pred, sample_weight)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:386 update_state
        self._build(y_pred, y_true)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:316 _build
        self._metrics = nest.map_structure_up_to(y_pred, self._get_metric_objects,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:1114 map_structure_up_to
        return map_structure_with_tuple_paths_up_to(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:1213 map_structure_with_tuple_paths_up_to
        results = [func(*args, **kwargs) for args in zip(flat_path_list,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:1213 <listcomp>
        results = [func(*args, **kwargs) for args in zip(flat_path_list,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:1116 <lambda>
        lambda _, *values: func(*values),  # Discards the path arg.
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:416 _get_metric_objects
        return [self._get_metric_object(m, y_t, y_p) for m in metrics]
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:416 <listcomp>
        return [self._get_metric_object(m, y_t, y_p) for m in metrics]
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:435 _get_metric_object
        metric_obj = metrics_mod.get(metric)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\metrics.py:3358 get
        return deserialize(str(identifier))
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\metrics.py:3345 deserialize
        return deserialize_keras_object(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\utils\generic_utils.py:392 deserialize_keras_object
        raise ValueError('Unknown ' + printable_module_name + ':' + object_name)

    ValueError: Unknown metric function:metrics.RootMeanSquaredError()


15.Apr 2020 22:01:51 correct LSTM model creation and compilation

15.Apr 2020 22:02:25 model training error
in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:477 train_step  **
        self.compiled_metrics.update_state(y, y_pred, sample_weight)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:386 update_state
        self._build(y_pred, y_true)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:316 _build
        self._metrics = nest.map_structure_up_to(y_pred, self._get_metric_objects,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:1114 map_structure_up_to
        return map_structure_with_tuple_paths_up_to(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:1213 map_structure_with_tuple_paths_up_to
        results = [func(*args, **kwargs) for args in zip(flat_path_list,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:1213 <listcomp>
        results = [func(*args, **kwargs) for args in zip(flat_path_list,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:1116 <lambda>
        lambda _, *values: func(*values),  # Discards the path arg.
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:416 _get_metric_objects
        return [self._get_metric_object(m, y_t, y_p) for m in metrics]
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:416 <listcomp>
        return [self._get_metric_object(m, y_t, y_p) for m in metrics]
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:435 _get_metric_object
        metric_obj = metrics_mod.get(metric)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\metrics.py:3358 get
        return deserialize(str(identifier))
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\metrics.py:3345 deserialize
        return deserialize_keras_object(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\utils\generic_utils.py:392 deserialize_keras_object
        raise ValueError('Unknown ' + printable_module_name + ':' + object_name)

    ValueError: Unknown metric function:metrics.RootMeanSquaredError()
Traceback (most recent call last):
  File ".\_2_train.py", line 132, in train
    forecaster.fit(x_train, y_train, batch_size=batch_size, epochs=epochs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 66, in _method_wrapper
    return method(self, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 785, in fit
    tmp_logs = train_function(iterator)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 580, in __call__
    result = self._call(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 627, in _call
    self._initialize(args, kwds, add_initializers_to=initializers)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 505, in _initialize
    self._stateful_fn._get_concrete_function_internal_garbage_collected(  # pylint: disable=protected-access
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2446, in _get_concrete_function_internal_garbage_collected
    graph_function, _, _ = self._maybe_define_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2777, in _maybe_define_function
    graph_function = self._create_graph_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2657, in _create_graph_function
    func_graph_module.func_graph_from_py_func(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 981, in func_graph_from_py_func
    func_outputs = python_func(*func_args, **func_kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 441, in wrapped_fn
    return weak_wrapped_fn().__wrapped__(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 968, in wrapper
    raise e.ag_error_metadata.to_exception(e)
ValueError: in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:477 train_step  **
        self.compiled_metrics.update_state(y, y_pred, sample_weight)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:386 update_state
        self._build(y_pred, y_true)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:316 _build
        self._metrics = nest.map_structure_up_to(y_pred, self._get_metric_objects,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:1114 map_structure_up_to
        return map_structure_with_tuple_paths_up_to(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:1213 map_structure_with_tuple_paths_up_to
        results = [func(*args, **kwargs) for args in zip(flat_path_list,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:1213 <listcomp>
        results = [func(*args, **kwargs) for args in zip(flat_path_list,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:1116 <lambda>
        lambda _, *values: func(*values),  # Discards the path arg.
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:416 _get_metric_objects
        return [self._get_metric_object(m, y_t, y_p) for m in metrics]
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:416 <listcomp>
        return [self._get_metric_object(m, y_t, y_p) for m in metrics]
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:435 _get_metric_object
        metric_obj = metrics_mod.get(metric)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\metrics.py:3358 get
        return deserialize(str(identifier))
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\metrics.py:3345 deserialize
        return deserialize_keras_object(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\utils\generic_utils.py:392 deserialize_keras_object
        raise ValueError('Unknown ' + printable_module_name + ':' + object_name)

    ValueError: Unknown metric function:metrics.RootMeanSquaredError()


15.Apr 2020 22:11:06 correct LSTM model creation and compilation

15.Apr 2020 22:11:41 model training error
in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:477 train_step  **
        self.compiled_metrics.update_state(y, y_pred, sample_weight)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:386 update_state
        self._build(y_pred, y_true)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:316 _build
        self._metrics = nest.map_structure_up_to(y_pred, self._get_metric_objects,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:1114 map_structure_up_to
        return map_structure_with_tuple_paths_up_to(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:1213 map_structure_with_tuple_paths_up_to
        results = [func(*args, **kwargs) for args in zip(flat_path_list,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:1213 <listcomp>
        results = [func(*args, **kwargs) for args in zip(flat_path_list,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:1116 <lambda>
        lambda _, *values: func(*values),  # Discards the path arg.
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:416 _get_metric_objects
        return [self._get_metric_object(m, y_t, y_p) for m in metrics]
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:416 <listcomp>
        return [self._get_metric_object(m, y_t, y_p) for m in metrics]
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:435 _get_metric_object
        metric_obj = metrics_mod.get(metric)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\metrics.py:3358 get
        return deserialize(str(identifier))
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\metrics.py:3345 deserialize
        return deserialize_keras_object(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\utils\generic_utils.py:392 deserialize_keras_object
        raise ValueError('Unknown ' + printable_module_name + ':' + object_name)

    ValueError: Unknown metric function:custom_metric_root_mean_squared_error()
Traceback (most recent call last):
  File ".\_2_train.py", line 136, in train
    forecaster.fit(x_train, y_train, batch_size=batch_size, epochs=epochs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 66, in _method_wrapper
    return method(self, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 785, in fit
    tmp_logs = train_function(iterator)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 580, in __call__
    result = self._call(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 627, in _call
    self._initialize(args, kwds, add_initializers_to=initializers)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 505, in _initialize
    self._stateful_fn._get_concrete_function_internal_garbage_collected(  # pylint: disable=protected-access
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2446, in _get_concrete_function_internal_garbage_collected
    graph_function, _, _ = self._maybe_define_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2777, in _maybe_define_function
    graph_function = self._create_graph_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2657, in _create_graph_function
    func_graph_module.func_graph_from_py_func(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 981, in func_graph_from_py_func
    func_outputs = python_func(*func_args, **func_kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 441, in wrapped_fn
    return weak_wrapped_fn().__wrapped__(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 968, in wrapper
    raise e.ag_error_metadata.to_exception(e)
ValueError: in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:477 train_step  **
        self.compiled_metrics.update_state(y, y_pred, sample_weight)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:386 update_state
        self._build(y_pred, y_true)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:316 _build
        self._metrics = nest.map_structure_up_to(y_pred, self._get_metric_objects,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:1114 map_structure_up_to
        return map_structure_with_tuple_paths_up_to(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:1213 map_structure_with_tuple_paths_up_to
        results = [func(*args, **kwargs) for args in zip(flat_path_list,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:1213 <listcomp>
        results = [func(*args, **kwargs) for args in zip(flat_path_list,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:1116 <lambda>
        lambda _, *values: func(*values),  # Discards the path arg.
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:416 _get_metric_objects
        return [self._get_metric_object(m, y_t, y_p) for m in metrics]
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:416 <listcomp>
        return [self._get_metric_object(m, y_t, y_p) for m in metrics]
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:435 _get_metric_object
        metric_obj = metrics_mod.get(metric)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\metrics.py:3358 get
        return deserialize(str(identifier))
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\metrics.py:3345 deserialize
        return deserialize_keras_object(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\utils\generic_utils.py:392 deserialize_keras_object
        raise ValueError('Unknown ' + printable_module_name + ':' + object_name)

    ValueError: Unknown metric function:custom_metric_root_mean_squared_error()


15.Apr 2020 22:13:16 correct LSTM model creation and compilation

15.Apr 2020 22:13:50 model training error
in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:477 train_step  **
        self.compiled_metrics.update_state(y, y_pred, sample_weight)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:386 update_state
        self._build(y_pred, y_true)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:316 _build
        self._metrics = nest.map_structure_up_to(y_pred, self._get_metric_objects,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:1114 map_structure_up_to
        return map_structure_with_tuple_paths_up_to(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:1213 map_structure_with_tuple_paths_up_to
        results = [func(*args, **kwargs) for args in zip(flat_path_list,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:1213 <listcomp>
        results = [func(*args, **kwargs) for args in zip(flat_path_list,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:1116 <lambda>
        lambda _, *values: func(*values),  # Discards the path arg.
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:416 _get_metric_objects
        return [self._get_metric_object(m, y_t, y_p) for m in metrics]
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:416 <listcomp>
        return [self._get_metric_object(m, y_t, y_p) for m in metrics]
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:435 _get_metric_object
        metric_obj = metrics_mod.get(metric)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\metrics.py:3358 get
        return deserialize(str(identifier))
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\metrics.py:3345 deserialize
        return deserialize_keras_object(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\utils\generic_utils.py:392 deserialize_keras_object
        raise ValueError('Unknown ' + printable_module_name + ':' + object_name)

    ValueError: Unknown metric function:[custom_metric_root_mean_squared_error()]
Traceback (most recent call last):
  File ".\_2_train.py", line 136, in train
    forecaster.fit(x_train, y_train, batch_size=batch_size, epochs=epochs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 66, in _method_wrapper
    return method(self, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 785, in fit
    tmp_logs = train_function(iterator)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 580, in __call__
    result = self._call(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 627, in _call
    self._initialize(args, kwds, add_initializers_to=initializers)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 505, in _initialize
    self._stateful_fn._get_concrete_function_internal_garbage_collected(  # pylint: disable=protected-access
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2446, in _get_concrete_function_internal_garbage_collected
    graph_function, _, _ = self._maybe_define_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2777, in _maybe_define_function
    graph_function = self._create_graph_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2657, in _create_graph_function
    func_graph_module.func_graph_from_py_func(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 981, in func_graph_from_py_func
    func_outputs = python_func(*func_args, **func_kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 441, in wrapped_fn
    return weak_wrapped_fn().__wrapped__(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 968, in wrapper
    raise e.ag_error_metadata.to_exception(e)
ValueError: in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:477 train_step  **
        self.compiled_metrics.update_state(y, y_pred, sample_weight)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:386 update_state
        self._build(y_pred, y_true)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:316 _build
        self._metrics = nest.map_structure_up_to(y_pred, self._get_metric_objects,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:1114 map_structure_up_to
        return map_structure_with_tuple_paths_up_to(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:1213 map_structure_with_tuple_paths_up_to
        results = [func(*args, **kwargs) for args in zip(flat_path_list,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:1213 <listcomp>
        results = [func(*args, **kwargs) for args in zip(flat_path_list,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:1116 <lambda>
        lambda _, *values: func(*values),  # Discards the path arg.
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:416 _get_metric_objects
        return [self._get_metric_object(m, y_t, y_p) for m in metrics]
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:416 <listcomp>
        return [self._get_metric_object(m, y_t, y_p) for m in metrics]
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:435 _get_metric_object
        metric_obj = metrics_mod.get(metric)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\metrics.py:3358 get
        return deserialize(str(identifier))
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\metrics.py:3345 deserialize
        return deserialize_keras_object(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\utils\generic_utils.py:392 deserialize_keras_object
        raise ValueError('Unknown ' + printable_module_name + ':' + object_name)

    ValueError: Unknown metric function:[custom_metric_root_mean_squared_error()]


15.Apr 2020 22:17:32 correct LSTM model creation and compilation

15.Apr 2020 22:18:06 model training error
in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:477 train_step  **
        self.compiled_metrics.update_state(y, y_pred, sample_weight)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:386 update_state
        self._build(y_pred, y_true)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:316 _build
        self._metrics = nest.map_structure_up_to(y_pred, self._get_metric_objects,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:1114 map_structure_up_to
        return map_structure_with_tuple_paths_up_to(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:1213 map_structure_with_tuple_paths_up_to
        results = [func(*args, **kwargs) for args in zip(flat_path_list,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:1213 <listcomp>
        results = [func(*args, **kwargs) for args in zip(flat_path_list,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:1116 <lambda>
        lambda _, *values: func(*values),  # Discards the path arg.
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:416 _get_metric_objects
        return [self._get_metric_object(m, y_t, y_p) for m in metrics]
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:416 <listcomp>
        return [self._get_metric_object(m, y_t, y_p) for m in metrics]
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:435 _get_metric_object
        metric_obj = metrics_mod.get(metric)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\metrics.py:3358 get
        return deserialize(str(identifier))
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\metrics.py:3345 deserialize
        return deserialize_keras_object(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\utils\generic_utils.py:392 deserialize_keras_object
        raise ValueError('Unknown ' + printable_module_name + ':' + object_name)

    ValueError: Unknown metric function:[custom_metric_root_mean_squared_error()]
Traceback (most recent call last):
  File ".\_2_train.py", line 135, in train
    forecaster.fit(x_train, y_train, batch_size=batch_size, epochs=epochs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 66, in _method_wrapper
    return method(self, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 785, in fit
    tmp_logs = train_function(iterator)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 580, in __call__
    result = self._call(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 627, in _call
    self._initialize(args, kwds, add_initializers_to=initializers)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 505, in _initialize
    self._stateful_fn._get_concrete_function_internal_garbage_collected(  # pylint: disable=protected-access
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2446, in _get_concrete_function_internal_garbage_collected
    graph_function, _, _ = self._maybe_define_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2777, in _maybe_define_function
    graph_function = self._create_graph_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2657, in _create_graph_function
    func_graph_module.func_graph_from_py_func(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 981, in func_graph_from_py_func
    func_outputs = python_func(*func_args, **func_kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 441, in wrapped_fn
    return weak_wrapped_fn().__wrapped__(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 968, in wrapper
    raise e.ag_error_metadata.to_exception(e)
ValueError: in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:477 train_step  **
        self.compiled_metrics.update_state(y, y_pred, sample_weight)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:386 update_state
        self._build(y_pred, y_true)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:316 _build
        self._metrics = nest.map_structure_up_to(y_pred, self._get_metric_objects,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:1114 map_structure_up_to
        return map_structure_with_tuple_paths_up_to(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:1213 map_structure_with_tuple_paths_up_to
        results = [func(*args, **kwargs) for args in zip(flat_path_list,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:1213 <listcomp>
        results = [func(*args, **kwargs) for args in zip(flat_path_list,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:1116 <lambda>
        lambda _, *values: func(*values),  # Discards the path arg.
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:416 _get_metric_objects
        return [self._get_metric_object(m, y_t, y_p) for m in metrics]
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:416 <listcomp>
        return [self._get_metric_object(m, y_t, y_p) for m in metrics]
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:435 _get_metric_object
        metric_obj = metrics_mod.get(metric)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\metrics.py:3358 get
        return deserialize(str(identifier))
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\metrics.py:3345 deserialize
        return deserialize_keras_object(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\utils\generic_utils.py:392 deserialize_keras_object
        raise ValueError('Unknown ' + printable_module_name + ':' + object_name)

    ValueError: Unknown metric function:[custom_metric_root_mean_squared_error()]


15.Apr 2020 22:25:28 correct LSTM model creation and compilation

15.Apr 2020 22:26:02 model training error
in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:477 train_step  **
        self.compiled_metrics.update_state(y, y_pred, sample_weight)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:386 update_state
        self._build(y_pred, y_true)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:316 _build
        self._metrics = nest.map_structure_up_to(y_pred, self._get_metric_objects,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:1114 map_structure_up_to
        return map_structure_with_tuple_paths_up_to(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:1213 map_structure_with_tuple_paths_up_to
        results = [func(*args, **kwargs) for args in zip(flat_path_list,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:1213 <listcomp>
        results = [func(*args, **kwargs) for args in zip(flat_path_list,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:1116 <lambda>
        lambda _, *values: func(*values),  # Discards the path arg.
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:416 _get_metric_objects
        return [self._get_metric_object(m, y_t, y_p) for m in metrics]
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:416 <listcomp>
        return [self._get_metric_object(m, y_t, y_p) for m in metrics]
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:435 _get_metric_object
        metric_obj = metrics_mod.get(metric)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\metrics.py:3358 get
        return deserialize(str(identifier))
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\metrics.py:3345 deserialize
        return deserialize_keras_object(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\utils\generic_utils.py:392 deserialize_keras_object
        raise ValueError('Unknown ' + printable_module_name + ':' + object_name)

    ValueError: Unknown metric function:['custom_metric_root_mean_squared_error()']
Traceback (most recent call last):
  File ".\_2_train.py", line 135, in train
    forecaster.fit(x_train, y_train, batch_size=batch_size, epochs=epochs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 66, in _method_wrapper
    return method(self, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 785, in fit
    tmp_logs = train_function(iterator)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 580, in __call__
    result = self._call(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 627, in _call
    self._initialize(args, kwds, add_initializers_to=initializers)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 505, in _initialize
    self._stateful_fn._get_concrete_function_internal_garbage_collected(  # pylint: disable=protected-access
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2446, in _get_concrete_function_internal_garbage_collected
    graph_function, _, _ = self._maybe_define_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2777, in _maybe_define_function
    graph_function = self._create_graph_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2657, in _create_graph_function
    func_graph_module.func_graph_from_py_func(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 981, in func_graph_from_py_func
    func_outputs = python_func(*func_args, **func_kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 441, in wrapped_fn
    return weak_wrapped_fn().__wrapped__(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 968, in wrapper
    raise e.ag_error_metadata.to_exception(e)
ValueError: in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:477 train_step  **
        self.compiled_metrics.update_state(y, y_pred, sample_weight)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:386 update_state
        self._build(y_pred, y_true)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:316 _build
        self._metrics = nest.map_structure_up_to(y_pred, self._get_metric_objects,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:1114 map_structure_up_to
        return map_structure_with_tuple_paths_up_to(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:1213 map_structure_with_tuple_paths_up_to
        results = [func(*args, **kwargs) for args in zip(flat_path_list,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:1213 <listcomp>
        results = [func(*args, **kwargs) for args in zip(flat_path_list,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:1116 <lambda>
        lambda _, *values: func(*values),  # Discards the path arg.
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:416 _get_metric_objects
        return [self._get_metric_object(m, y_t, y_p) for m in metrics]
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:416 <listcomp>
        return [self._get_metric_object(m, y_t, y_p) for m in metrics]
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:435 _get_metric_object
        metric_obj = metrics_mod.get(metric)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\metrics.py:3358 get
        return deserialize(str(identifier))
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\metrics.py:3345 deserialize
        return deserialize_keras_object(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\utils\generic_utils.py:392 deserialize_keras_object
        raise ValueError('Unknown ' + printable_module_name + ':' + object_name)

    ValueError: Unknown metric function:['custom_metric_root_mean_squared_error()']


15.Apr 2020 22:27:29 error at loading model (LTSM) hyperparameters
Expecting property name enclosed in double quotes: line 24 column 1 (char 634)
Traceback (most recent call last):
  File ".\_2_train.py", line 39, in <module>
    model_hyperparameters = json.loads(local_json_file.read())
  File "C:\Users\Demo Windows 10\AppData\Local\Programs\Python\Python38\lib\json\__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "C:\Users\Demo Windows 10\AppData\Local\Programs\Python\Python38\lib\json\decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "C:\Users\Demo Windows 10\AppData\Local\Programs\Python\Python38\lib\json\decoder.py", line 353, in raw_decode
    obj, end = self.scan_once(s, idx)
json.decoder.JSONDecodeError: Expecting property name enclosed in double quotes: line 24 column 1 (char 634)

15.Apr 2020 22:27:29 LSTM model creation or compile error
name 'model_hyperparameters' is not defined
Traceback (most recent call last):
  File ".\_2_train.py", line 61, in <module>
    forecaster.add(layers.LSTM(units=int(model_hyperparameters['units_layer_1']),
NameError: name 'model_hyperparameters' is not defined

15.Apr 2020 22:28:00 model training error
name 'model_hyperparameters' is not defined
Traceback (most recent call last):
  File ".\_2_train.py", line 112, in train
    epochs = int(model_hyperparameters['epochs'])
NameError: name 'model_hyperparameters' is not defined

15.Apr 2020 22:28:56 correct LSTM model creation and compilation

15.Apr 2020 22:29:04 correct LSTM model creation and compilation

15.Apr 2020 22:29:31 model training error
in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:477 train_step  **
        self.compiled_metrics.update_state(y, y_pred, sample_weight)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:386 update_state
        self._build(y_pred, y_true)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:316 _build
        self._metrics = nest.map_structure_up_to(y_pred, self._get_metric_objects,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:1114 map_structure_up_to
        return map_structure_with_tuple_paths_up_to(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:1213 map_structure_with_tuple_paths_up_to
        results = [func(*args, **kwargs) for args in zip(flat_path_list,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:1213 <listcomp>
        results = [func(*args, **kwargs) for args in zip(flat_path_list,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:1116 <lambda>
        lambda _, *values: func(*values),  # Discards the path arg.
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:416 _get_metric_objects
        return [self._get_metric_object(m, y_t, y_p) for m in metrics]
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:416 <listcomp>
        return [self._get_metric_object(m, y_t, y_p) for m in metrics]
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:435 _get_metric_object
        metric_obj = metrics_mod.get(metric)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\metrics.py:3358 get
        return deserialize(str(identifier))
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\metrics.py:3345 deserialize
        return deserialize_keras_object(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\utils\generic_utils.py:392 deserialize_keras_object
        raise ValueError('Unknown ' + printable_module_name + ':' + object_name)

    ValueError: Unknown metric function:['mean_squared_error']
Traceback (most recent call last):
  File ".\_2_train.py", line 135, in train
    forecaster.fit(x_train, y_train, batch_size=batch_size, epochs=epochs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 66, in _method_wrapper
    return method(self, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 785, in fit
    tmp_logs = train_function(iterator)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 580, in __call__
    result = self._call(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 627, in _call
    self._initialize(args, kwds, add_initializers_to=initializers)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 505, in _initialize
    self._stateful_fn._get_concrete_function_internal_garbage_collected(  # pylint: disable=protected-access
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2446, in _get_concrete_function_internal_garbage_collected
    graph_function, _, _ = self._maybe_define_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2777, in _maybe_define_function
    graph_function = self._create_graph_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2657, in _create_graph_function
    func_graph_module.func_graph_from_py_func(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 981, in func_graph_from_py_func
    func_outputs = python_func(*func_args, **func_kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 441, in wrapped_fn
    return weak_wrapped_fn().__wrapped__(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 968, in wrapper
    raise e.ag_error_metadata.to_exception(e)
ValueError: in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:477 train_step  **
        self.compiled_metrics.update_state(y, y_pred, sample_weight)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:386 update_state
        self._build(y_pred, y_true)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:316 _build
        self._metrics = nest.map_structure_up_to(y_pred, self._get_metric_objects,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:1114 map_structure_up_to
        return map_structure_with_tuple_paths_up_to(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:1213 map_structure_with_tuple_paths_up_to
        results = [func(*args, **kwargs) for args in zip(flat_path_list,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:1213 <listcomp>
        results = [func(*args, **kwargs) for args in zip(flat_path_list,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:1116 <lambda>
        lambda _, *values: func(*values),  # Discards the path arg.
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:416 _get_metric_objects
        return [self._get_metric_object(m, y_t, y_p) for m in metrics]
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:416 <listcomp>
        return [self._get_metric_object(m, y_t, y_p) for m in metrics]
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:435 _get_metric_object
        metric_obj = metrics_mod.get(metric)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\metrics.py:3358 get
        return deserialize(str(identifier))
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\metrics.py:3345 deserialize
        return deserialize_keras_object(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\utils\generic_utils.py:392 deserialize_keras_object
        raise ValueError('Unknown ' + printable_module_name + ':' + object_name)

    ValueError: Unknown metric function:['mean_squared_error']


15.Apr 2020 22:29:41 model training error
in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:477 train_step  **
        self.compiled_metrics.update_state(y, y_pred, sample_weight)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:386 update_state
        self._build(y_pred, y_true)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:316 _build
        self._metrics = nest.map_structure_up_to(y_pred, self._get_metric_objects,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:1114 map_structure_up_to
        return map_structure_with_tuple_paths_up_to(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:1213 map_structure_with_tuple_paths_up_to
        results = [func(*args, **kwargs) for args in zip(flat_path_list,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:1213 <listcomp>
        results = [func(*args, **kwargs) for args in zip(flat_path_list,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:1116 <lambda>
        lambda _, *values: func(*values),  # Discards the path arg.
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:416 _get_metric_objects
        return [self._get_metric_object(m, y_t, y_p) for m in metrics]
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:416 <listcomp>
        return [self._get_metric_object(m, y_t, y_p) for m in metrics]
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:435 _get_metric_object
        metric_obj = metrics_mod.get(metric)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\metrics.py:3358 get
        return deserialize(str(identifier))
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\metrics.py:3345 deserialize
        return deserialize_keras_object(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\utils\generic_utils.py:392 deserialize_keras_object
        raise ValueError('Unknown ' + printable_module_name + ':' + object_name)

    ValueError: Unknown metric function:['mean_squared_error']
Traceback (most recent call last):
  File ".\_2_train.py", line 135, in train
    forecaster.fit(x_train, y_train, batch_size=batch_size, epochs=epochs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 66, in _method_wrapper
    return method(self, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 785, in fit
    tmp_logs = train_function(iterator)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 580, in __call__
    result = self._call(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 627, in _call
    self._initialize(args, kwds, add_initializers_to=initializers)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 505, in _initialize
    self._stateful_fn._get_concrete_function_internal_garbage_collected(  # pylint: disable=protected-access
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2446, in _get_concrete_function_internal_garbage_collected
    graph_function, _, _ = self._maybe_define_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2777, in _maybe_define_function
    graph_function = self._create_graph_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2657, in _create_graph_function
    func_graph_module.func_graph_from_py_func(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 981, in func_graph_from_py_func
    func_outputs = python_func(*func_args, **func_kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 441, in wrapped_fn
    return weak_wrapped_fn().__wrapped__(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 968, in wrapper
    raise e.ag_error_metadata.to_exception(e)
ValueError: in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:477 train_step  **
        self.compiled_metrics.update_state(y, y_pred, sample_weight)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:386 update_state
        self._build(y_pred, y_true)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:316 _build
        self._metrics = nest.map_structure_up_to(y_pred, self._get_metric_objects,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:1114 map_structure_up_to
        return map_structure_with_tuple_paths_up_to(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:1213 map_structure_with_tuple_paths_up_to
        results = [func(*args, **kwargs) for args in zip(flat_path_list,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:1213 <listcomp>
        results = [func(*args, **kwargs) for args in zip(flat_path_list,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:1116 <lambda>
        lambda _, *values: func(*values),  # Discards the path arg.
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:416 _get_metric_objects
        return [self._get_metric_object(m, y_t, y_p) for m in metrics]
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:416 <listcomp>
        return [self._get_metric_object(m, y_t, y_p) for m in metrics]
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:435 _get_metric_object
        metric_obj = metrics_mod.get(metric)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\metrics.py:3358 get
        return deserialize(str(identifier))
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\metrics.py:3345 deserialize
        return deserialize_keras_object(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\utils\generic_utils.py:392 deserialize_keras_object
        raise ValueError('Unknown ' + printable_module_name + ':' + object_name)

    ValueError: Unknown metric function:['mean_squared_error']


15.Apr 2020 22:30:02 correct LSTM model creation and compilation

15.Apr 2020 22:30:36 model training error
in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:477 train_step  **
        self.compiled_metrics.update_state(y, y_pred, sample_weight)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:386 update_state
        self._build(y_pred, y_true)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:316 _build
        self._metrics = nest.map_structure_up_to(y_pred, self._get_metric_objects,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:1114 map_structure_up_to
        return map_structure_with_tuple_paths_up_to(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:1213 map_structure_with_tuple_paths_up_to
        results = [func(*args, **kwargs) for args in zip(flat_path_list,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:1213 <listcomp>
        results = [func(*args, **kwargs) for args in zip(flat_path_list,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:1116 <lambda>
        lambda _, *values: func(*values),  # Discards the path arg.
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:416 _get_metric_objects
        return [self._get_metric_object(m, y_t, y_p) for m in metrics]
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:416 <listcomp>
        return [self._get_metric_object(m, y_t, y_p) for m in metrics]
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:435 _get_metric_object
        metric_obj = metrics_mod.get(metric)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\metrics.py:3358 get
        return deserialize(str(identifier))
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\metrics.py:3345 deserialize
        return deserialize_keras_object(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\utils\generic_utils.py:392 deserialize_keras_object
        raise ValueError('Unknown ' + printable_module_name + ':' + object_name)

    ValueError: Unknown metric function:[mean_squared_error]
Traceback (most recent call last):
  File ".\_2_train.py", line 135, in train
    forecaster.fit(x_train, y_train, batch_size=batch_size, epochs=epochs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 66, in _method_wrapper
    return method(self, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 785, in fit
    tmp_logs = train_function(iterator)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 580, in __call__
    result = self._call(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 627, in _call
    self._initialize(args, kwds, add_initializers_to=initializers)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 505, in _initialize
    self._stateful_fn._get_concrete_function_internal_garbage_collected(  # pylint: disable=protected-access
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2446, in _get_concrete_function_internal_garbage_collected
    graph_function, _, _ = self._maybe_define_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2777, in _maybe_define_function
    graph_function = self._create_graph_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2657, in _create_graph_function
    func_graph_module.func_graph_from_py_func(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 981, in func_graph_from_py_func
    func_outputs = python_func(*func_args, **func_kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 441, in wrapped_fn
    return weak_wrapped_fn().__wrapped__(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 968, in wrapper
    raise e.ag_error_metadata.to_exception(e)
ValueError: in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:477 train_step  **
        self.compiled_metrics.update_state(y, y_pred, sample_weight)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:386 update_state
        self._build(y_pred, y_true)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:316 _build
        self._metrics = nest.map_structure_up_to(y_pred, self._get_metric_objects,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:1114 map_structure_up_to
        return map_structure_with_tuple_paths_up_to(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:1213 map_structure_with_tuple_paths_up_to
        results = [func(*args, **kwargs) for args in zip(flat_path_list,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:1213 <listcomp>
        results = [func(*args, **kwargs) for args in zip(flat_path_list,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:1116 <lambda>
        lambda _, *values: func(*values),  # Discards the path arg.
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:416 _get_metric_objects
        return [self._get_metric_object(m, y_t, y_p) for m in metrics]
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:416 <listcomp>
        return [self._get_metric_object(m, y_t, y_p) for m in metrics]
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:435 _get_metric_object
        metric_obj = metrics_mod.get(metric)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\metrics.py:3358 get
        return deserialize(str(identifier))
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\metrics.py:3345 deserialize
        return deserialize_keras_object(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\utils\generic_utils.py:392 deserialize_keras_object
        raise ValueError('Unknown ' + printable_module_name + ':' + object_name)

    ValueError: Unknown metric function:[mean_squared_error]


15.Apr 2020 22:34:39 correct LSTM model creation and compilation

15.Apr 2020 22:38:47 correct LSTM model creation and compilation

15.Apr 2020 22:45:22 correct LSTM model creation and compilation

15.Apr 2020 22:45:55 model training error
in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:466 train_step  **
        loss = self.compiled_loss(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:187 __call__
        self._build(y_pred)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:140 _build
        self._losses = nest.map_structure(self._get_loss_object, self._losses)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:617 map_structure
        structure[0], [func(*x) for x in entries],
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:617 <listcomp>
        structure[0], [func(*x) for x in entries],
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:259 _get_loss_object
        loss = losses_mod.get(loss)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\losses.py:1857 get
        return deserialize(identifier)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\losses.py:1831 deserialize
        return deserialize_keras_object(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\utils\generic_utils.py:392 deserialize_keras_object
        raise ValueError('Unknown ' + printable_module_name + ':' + object_name)

    ValueError: Unknown loss function:losses.MeanAbsolutePercentageError()
Traceback (most recent call last):
  File ".\_2_train.py", line 136, in train
    forecaster.fit(x_train, y_train, batch_size=batch_size, epochs=epochs, workers=workers)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 66, in _method_wrapper
    return method(self, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 785, in fit
    tmp_logs = train_function(iterator)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 580, in __call__
    result = self._call(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 627, in _call
    self._initialize(args, kwds, add_initializers_to=initializers)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 505, in _initialize
    self._stateful_fn._get_concrete_function_internal_garbage_collected(  # pylint: disable=protected-access
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2446, in _get_concrete_function_internal_garbage_collected
    graph_function, _, _ = self._maybe_define_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2777, in _maybe_define_function
    graph_function = self._create_graph_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2657, in _create_graph_function
    func_graph_module.func_graph_from_py_func(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 981, in func_graph_from_py_func
    func_outputs = python_func(*func_args, **func_kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 441, in wrapped_fn
    return weak_wrapped_fn().__wrapped__(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 968, in wrapper
    raise e.ag_error_metadata.to_exception(e)
ValueError: in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:466 train_step  **
        loss = self.compiled_loss(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:187 __call__
        self._build(y_pred)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:140 _build
        self._losses = nest.map_structure(self._get_loss_object, self._losses)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:617 map_structure
        structure[0], [func(*x) for x in entries],
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:617 <listcomp>
        structure[0], [func(*x) for x in entries],
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:259 _get_loss_object
        loss = losses_mod.get(loss)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\losses.py:1857 get
        return deserialize(identifier)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\losses.py:1831 deserialize
        return deserialize_keras_object(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\utils\generic_utils.py:392 deserialize_keras_object
        raise ValueError('Unknown ' + printable_module_name + ':' + object_name)

    ValueError: Unknown loss function:losses.MeanAbsolutePercentageError()


15.Apr 2020 22:47:19 correct LSTM model creation and compilation

15.Apr 2020 22:47:51 model training error
in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:466 train_step  **
        loss = self.compiled_loss(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:187 __call__
        self._build(y_pred)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:140 _build
        self._losses = nest.map_structure(self._get_loss_object, self._losses)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:617 map_structure
        structure[0], [func(*x) for x in entries],
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:617 <listcomp>
        structure[0], [func(*x) for x in entries],
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:259 _get_loss_object
        loss = losses_mod.get(loss)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\losses.py:1857 get
        return deserialize(identifier)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\losses.py:1831 deserialize
        return deserialize_keras_object(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\utils\generic_utils.py:392 deserialize_keras_object
        raise ValueError('Unknown ' + printable_module_name + ':' + object_name)

    ValueError: Unknown loss function:losses.MeanAbsolutePercentageError()
Traceback (most recent call last):
  File ".\_2_train.py", line 137, in train
    forecaster.fit(x_train, y_train, batch_size=batch_size, epochs=epochs, workers=workers)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 66, in _method_wrapper
    return method(self, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 785, in fit
    tmp_logs = train_function(iterator)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 580, in __call__
    result = self._call(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 627, in _call
    self._initialize(args, kwds, add_initializers_to=initializers)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 505, in _initialize
    self._stateful_fn._get_concrete_function_internal_garbage_collected(  # pylint: disable=protected-access
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2446, in _get_concrete_function_internal_garbage_collected
    graph_function, _, _ = self._maybe_define_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2777, in _maybe_define_function
    graph_function = self._create_graph_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2657, in _create_graph_function
    func_graph_module.func_graph_from_py_func(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 981, in func_graph_from_py_func
    func_outputs = python_func(*func_args, **func_kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 441, in wrapped_fn
    return weak_wrapped_fn().__wrapped__(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 968, in wrapper
    raise e.ag_error_metadata.to_exception(e)
ValueError: in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:466 train_step  **
        loss = self.compiled_loss(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:187 __call__
        self._build(y_pred)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:140 _build
        self._losses = nest.map_structure(self._get_loss_object, self._losses)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:617 map_structure
        structure[0], [func(*x) for x in entries],
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:617 <listcomp>
        structure[0], [func(*x) for x in entries],
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:259 _get_loss_object
        loss = losses_mod.get(loss)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\losses.py:1857 get
        return deserialize(identifier)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\losses.py:1831 deserialize
        return deserialize_keras_object(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\utils\generic_utils.py:392 deserialize_keras_object
        raise ValueError('Unknown ' + printable_module_name + ':' + object_name)

    ValueError: Unknown loss function:losses.MeanAbsolutePercentageError()


15.Apr 2020 22:51:51 error at loading model (LTSM) hyperparameters
Expecting value: line 19 column 11 (char 514)
Traceback (most recent call last):
  File ".\_2_train.py", line 40, in <module>
    model_hyperparameters = json.loads(local_json_file.read())
  File "C:\Users\Demo Windows 10\AppData\Local\Programs\Python\Python38\lib\json\__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "C:\Users\Demo Windows 10\AppData\Local\Programs\Python\Python38\lib\json\decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "C:\Users\Demo Windows 10\AppData\Local\Programs\Python\Python38\lib\json\decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 19 column 11 (char 514)

15.Apr 2020 22:51:51 LSTM model creation or compile error
name 'model_hyperparameters' is not defined
Traceback (most recent call last):
  File ".\_2_train.py", line 62, in <module>
    forecaster.add(layers.LSTM(units=int(model_hyperparameters['units_layer_1']),
NameError: name 'model_hyperparameters' is not defined

15.Apr 2020 22:52:25 model training error
name 'model_hyperparameters' is not defined
Traceback (most recent call last):
  File ".\_2_train.py", line 113, in train
    epochs = int(model_hyperparameters['epochs'])
NameError: name 'model_hyperparameters' is not defined

15.Apr 2020 22:53:26 correct LSTM model creation and compilation

15.Apr 2020 22:53:59 model training error
in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:466 train_step  **
        loss = self.compiled_loss(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:187 __call__
        self._build(y_pred)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:140 _build
        self._losses = nest.map_structure(self._get_loss_object, self._losses)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:617 map_structure
        structure[0], [func(*x) for x in entries],
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:617 <listcomp>
        structure[0], [func(*x) for x in entries],
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:259 _get_loss_object
        loss = losses_mod.get(loss)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\losses.py:1857 get
        return deserialize(identifier)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\losses.py:1831 deserialize
        return deserialize_keras_object(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\utils\generic_utils.py:392 deserialize_keras_object
        raise ValueError('Unknown ' + printable_module_name + ':' + object_name)

    ValueError: Unknown loss function:losses.MeanAbsolutePercentageError()
Traceback (most recent call last):
  File ".\_2_train.py", line 137, in train
    forecaster.fit(x_train, y_train, batch_size=batch_size, epochs=epochs, workers=workers)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 66, in _method_wrapper
    return method(self, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 785, in fit
    tmp_logs = train_function(iterator)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 580, in __call__
    result = self._call(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 627, in _call
    self._initialize(args, kwds, add_initializers_to=initializers)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 505, in _initialize
    self._stateful_fn._get_concrete_function_internal_garbage_collected(  # pylint: disable=protected-access
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2446, in _get_concrete_function_internal_garbage_collected
    graph_function, _, _ = self._maybe_define_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2777, in _maybe_define_function
    graph_function = self._create_graph_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2657, in _create_graph_function
    func_graph_module.func_graph_from_py_func(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 981, in func_graph_from_py_func
    func_outputs = python_func(*func_args, **func_kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 441, in wrapped_fn
    return weak_wrapped_fn().__wrapped__(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 968, in wrapper
    raise e.ag_error_metadata.to_exception(e)
ValueError: in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:466 train_step  **
        loss = self.compiled_loss(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:187 __call__
        self._build(y_pred)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:140 _build
        self._losses = nest.map_structure(self._get_loss_object, self._losses)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:617 map_structure
        structure[0], [func(*x) for x in entries],
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:617 <listcomp>
        structure[0], [func(*x) for x in entries],
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:259 _get_loss_object
        loss = losses_mod.get(loss)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\losses.py:1857 get
        return deserialize(identifier)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\losses.py:1831 deserialize
        return deserialize_keras_object(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\utils\generic_utils.py:392 deserialize_keras_object
        raise ValueError('Unknown ' + printable_module_name + ':' + object_name)

    ValueError: Unknown loss function:losses.MeanAbsolutePercentageError()


15.Apr 2020 22:56:00 error at loading model (LTSM) hyperparameters
Expecting value: line 20 column 5 (char 520)
Traceback (most recent call last):
  File ".\_2_train.py", line 40, in <module>
    model_hyperparameters = json.loads(local_json_file.read())
  File "C:\Users\Demo Windows 10\AppData\Local\Programs\Python\Python38\lib\json\__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "C:\Users\Demo Windows 10\AppData\Local\Programs\Python\Python38\lib\json\decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "C:\Users\Demo Windows 10\AppData\Local\Programs\Python\Python38\lib\json\decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 20 column 5 (char 520)

15.Apr 2020 22:56:00 LSTM model creation or compile error
name 'model_hyperparameters' is not defined
Traceback (most recent call last):
  File ".\_2_train.py", line 62, in <module>
    forecaster.add(layers.LSTM(units=int(model_hyperparameters['units_layer_1']),
NameError: name 'model_hyperparameters' is not defined

15.Apr 2020 22:56:31 model training error
name 'model_hyperparameters' is not defined
Traceback (most recent call last):
  File ".\_2_train.py", line 113, in train
    epochs = int(model_hyperparameters['epochs'])
NameError: name 'model_hyperparameters' is not defined

15.Apr 2020 23:03:27 correct LSTM model creation and compilation

15.Apr 2020 23:08:07 correct LSTM model creation and compilation

15.Apr 2020 23:08:41 model training error
in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:477 train_step  **
        self.compiled_metrics.update_state(y, y_pred, sample_weight)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:386 update_state
        self._build(y_pred, y_true)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:316 _build
        self._metrics = nest.map_structure_up_to(y_pred, self._get_metric_objects,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:1114 map_structure_up_to
        return map_structure_with_tuple_paths_up_to(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:1213 map_structure_with_tuple_paths_up_to
        results = [func(*args, **kwargs) for args in zip(flat_path_list,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:1213 <listcomp>
        results = [func(*args, **kwargs) for args in zip(flat_path_list,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:1116 <lambda>
        lambda _, *values: func(*values),  # Discards the path arg.
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:416 _get_metric_objects
        return [self._get_metric_object(m, y_t, y_p) for m in metrics]
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:416 <listcomp>
        return [self._get_metric_object(m, y_t, y_p) for m in metrics]
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:435 _get_metric_object
        metric_obj = metrics_mod.get(metric)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\metrics.py:3358 get
        return deserialize(str(identifier))
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\metrics.py:3345 deserialize
        return deserialize_keras_object(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\utils\generic_utils.py:392 deserialize_keras_object
        raise ValueError('Unknown ' + printable_module_name + ':' + object_name)

    ValueError: Unknown metric function:custom_metric_root_mean_squared_error()
Traceback (most recent call last):
  File ".\_2_train.py", line 137, in train
    forecaster.fit(x_train, y_train, batch_size=batch_size, epochs=epochs, workers=workers)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 66, in _method_wrapper
    return method(self, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 785, in fit
    tmp_logs = train_function(iterator)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 580, in __call__
    result = self._call(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 627, in _call
    self._initialize(args, kwds, add_initializers_to=initializers)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 505, in _initialize
    self._stateful_fn._get_concrete_function_internal_garbage_collected(  # pylint: disable=protected-access
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2446, in _get_concrete_function_internal_garbage_collected
    graph_function, _, _ = self._maybe_define_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2777, in _maybe_define_function
    graph_function = self._create_graph_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2657, in _create_graph_function
    func_graph_module.func_graph_from_py_func(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 981, in func_graph_from_py_func
    func_outputs = python_func(*func_args, **func_kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 441, in wrapped_fn
    return weak_wrapped_fn().__wrapped__(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 968, in wrapper
    raise e.ag_error_metadata.to_exception(e)
ValueError: in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:477 train_step  **
        self.compiled_metrics.update_state(y, y_pred, sample_weight)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:386 update_state
        self._build(y_pred, y_true)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:316 _build
        self._metrics = nest.map_structure_up_to(y_pred, self._get_metric_objects,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:1114 map_structure_up_to
        return map_structure_with_tuple_paths_up_to(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:1213 map_structure_with_tuple_paths_up_to
        results = [func(*args, **kwargs) for args in zip(flat_path_list,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:1213 <listcomp>
        results = [func(*args, **kwargs) for args in zip(flat_path_list,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:1116 <lambda>
        lambda _, *values: func(*values),  # Discards the path arg.
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:416 _get_metric_objects
        return [self._get_metric_object(m, y_t, y_p) for m in metrics]
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:416 <listcomp>
        return [self._get_metric_object(m, y_t, y_p) for m in metrics]
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:435 _get_metric_object
        metric_obj = metrics_mod.get(metric)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\metrics.py:3358 get
        return deserialize(str(identifier))
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\metrics.py:3345 deserialize
        return deserialize_keras_object(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\utils\generic_utils.py:392 deserialize_keras_object
        raise ValueError('Unknown ' + printable_module_name + ':' + object_name)

    ValueError: Unknown metric function:custom_metric_root_mean_squared_error()


15.Apr 2020 23:09:34 correct LSTM model creation and compilation

15.Apr 2020 23:10:08 model training error
in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:477 train_step  **
        self.compiled_metrics.update_state(y, y_pred, sample_weight)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:386 update_state
        self._build(y_pred, y_true)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:316 _build
        self._metrics = nest.map_structure_up_to(y_pred, self._get_metric_objects,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:1114 map_structure_up_to
        return map_structure_with_tuple_paths_up_to(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:1213 map_structure_with_tuple_paths_up_to
        results = [func(*args, **kwargs) for args in zip(flat_path_list,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:1213 <listcomp>
        results = [func(*args, **kwargs) for args in zip(flat_path_list,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:1116 <lambda>
        lambda _, *values: func(*values),  # Discards the path arg.
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:416 _get_metric_objects
        return [self._get_metric_object(m, y_t, y_p) for m in metrics]
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:416 <listcomp>
        return [self._get_metric_object(m, y_t, y_p) for m in metrics]
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:435 _get_metric_object
        metric_obj = metrics_mod.get(metric)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\metrics.py:3358 get
        return deserialize(str(identifier))
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\metrics.py:3345 deserialize
        return deserialize_keras_object(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\utils\generic_utils.py:392 deserialize_keras_object
        raise ValueError('Unknown ' + printable_module_name + ':' + object_name)

    ValueError: Unknown metric function:['custom_metric_root_mean_squared_error()']
Traceback (most recent call last):
  File ".\_2_train.py", line 137, in train
    forecaster.fit(x_train, y_train, batch_size=batch_size, epochs=epochs, workers=workers)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 66, in _method_wrapper
    return method(self, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 785, in fit
    tmp_logs = train_function(iterator)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 580, in __call__
    result = self._call(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 627, in _call
    self._initialize(args, kwds, add_initializers_to=initializers)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 505, in _initialize
    self._stateful_fn._get_concrete_function_internal_garbage_collected(  # pylint: disable=protected-access
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2446, in _get_concrete_function_internal_garbage_collected
    graph_function, _, _ = self._maybe_define_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2777, in _maybe_define_function
    graph_function = self._create_graph_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2657, in _create_graph_function
    func_graph_module.func_graph_from_py_func(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 981, in func_graph_from_py_func
    func_outputs = python_func(*func_args, **func_kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 441, in wrapped_fn
    return weak_wrapped_fn().__wrapped__(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 968, in wrapper
    raise e.ag_error_metadata.to_exception(e)
ValueError: in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:477 train_step  **
        self.compiled_metrics.update_state(y, y_pred, sample_weight)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:386 update_state
        self._build(y_pred, y_true)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:316 _build
        self._metrics = nest.map_structure_up_to(y_pred, self._get_metric_objects,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:1114 map_structure_up_to
        return map_structure_with_tuple_paths_up_to(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:1213 map_structure_with_tuple_paths_up_to
        results = [func(*args, **kwargs) for args in zip(flat_path_list,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:1213 <listcomp>
        results = [func(*args, **kwargs) for args in zip(flat_path_list,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:1116 <lambda>
        lambda _, *values: func(*values),  # Discards the path arg.
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:416 _get_metric_objects
        return [self._get_metric_object(m, y_t, y_p) for m in metrics]
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:416 <listcomp>
        return [self._get_metric_object(m, y_t, y_p) for m in metrics]
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:435 _get_metric_object
        metric_obj = metrics_mod.get(metric)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\metrics.py:3358 get
        return deserialize(str(identifier))
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\metrics.py:3345 deserialize
        return deserialize_keras_object(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\utils\generic_utils.py:392 deserialize_keras_object
        raise ValueError('Unknown ' + printable_module_name + ':' + object_name)

    ValueError: Unknown metric function:['custom_metric_root_mean_squared_error()']


15.Apr 2020 23:11:05 correct LSTM model creation and compilation

15.Apr 2020 23:11:39 model training error
in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:477 train_step  **
        self.compiled_metrics.update_state(y, y_pred, sample_weight)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:386 update_state
        self._build(y_pred, y_true)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:316 _build
        self._metrics = nest.map_structure_up_to(y_pred, self._get_metric_objects,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:1114 map_structure_up_to
        return map_structure_with_tuple_paths_up_to(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:1213 map_structure_with_tuple_paths_up_to
        results = [func(*args, **kwargs) for args in zip(flat_path_list,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:1213 <listcomp>
        results = [func(*args, **kwargs) for args in zip(flat_path_list,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:1116 <lambda>
        lambda _, *values: func(*values),  # Discards the path arg.
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:416 _get_metric_objects
        return [self._get_metric_object(m, y_t, y_p) for m in metrics]
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:416 <listcomp>
        return [self._get_metric_object(m, y_t, y_p) for m in metrics]
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:435 _get_metric_object
        metric_obj = metrics_mod.get(metric)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\metrics.py:3358 get
        return deserialize(str(identifier))
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\metrics.py:3345 deserialize
        return deserialize_keras_object(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\utils\generic_utils.py:392 deserialize_keras_object
        raise ValueError('Unknown ' + printable_module_name + ':' + object_name)

    ValueError: Unknown metric function:custom_metric_root_mean_squared_error()
Traceback (most recent call last):
  File ".\_2_train.py", line 137, in train
    forecaster.fit(x_train, y_train, batch_size=batch_size, epochs=epochs, workers=workers)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 66, in _method_wrapper
    return method(self, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 785, in fit
    tmp_logs = train_function(iterator)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 580, in __call__
    result = self._call(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 627, in _call
    self._initialize(args, kwds, add_initializers_to=initializers)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 505, in _initialize
    self._stateful_fn._get_concrete_function_internal_garbage_collected(  # pylint: disable=protected-access
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2446, in _get_concrete_function_internal_garbage_collected
    graph_function, _, _ = self._maybe_define_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2777, in _maybe_define_function
    graph_function = self._create_graph_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2657, in _create_graph_function
    func_graph_module.func_graph_from_py_func(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 981, in func_graph_from_py_func
    func_outputs = python_func(*func_args, **func_kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 441, in wrapped_fn
    return weak_wrapped_fn().__wrapped__(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 968, in wrapper
    raise e.ag_error_metadata.to_exception(e)
ValueError: in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:477 train_step  **
        self.compiled_metrics.update_state(y, y_pred, sample_weight)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:386 update_state
        self._build(y_pred, y_true)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:316 _build
        self._metrics = nest.map_structure_up_to(y_pred, self._get_metric_objects,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:1114 map_structure_up_to
        return map_structure_with_tuple_paths_up_to(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:1213 map_structure_with_tuple_paths_up_to
        results = [func(*args, **kwargs) for args in zip(flat_path_list,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:1213 <listcomp>
        results = [func(*args, **kwargs) for args in zip(flat_path_list,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:1116 <lambda>
        lambda _, *values: func(*values),  # Discards the path arg.
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:416 _get_metric_objects
        return [self._get_metric_object(m, y_t, y_p) for m in metrics]
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:416 <listcomp>
        return [self._get_metric_object(m, y_t, y_p) for m in metrics]
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:435 _get_metric_object
        metric_obj = metrics_mod.get(metric)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\metrics.py:3358 get
        return deserialize(str(identifier))
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\metrics.py:3345 deserialize
        return deserialize_keras_object(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\utils\generic_utils.py:392 deserialize_keras_object
        raise ValueError('Unknown ' + printable_module_name + ':' + object_name)

    ValueError: Unknown metric function:custom_metric_root_mean_squared_error()


15.Apr 2020 23:13:36 correct LSTM model creation and compilation

15.Apr 2020 23:14:09 model training error
in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:477 train_step  **
        self.compiled_metrics.update_state(y, y_pred, sample_weight)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:386 update_state
        self._build(y_pred, y_true)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:316 _build
        self._metrics = nest.map_structure_up_to(y_pred, self._get_metric_objects,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:1114 map_structure_up_to
        return map_structure_with_tuple_paths_up_to(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:1213 map_structure_with_tuple_paths_up_to
        results = [func(*args, **kwargs) for args in zip(flat_path_list,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:1213 <listcomp>
        results = [func(*args, **kwargs) for args in zip(flat_path_list,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:1116 <lambda>
        lambda _, *values: func(*values),  # Discards the path arg.
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:416 _get_metric_objects
        return [self._get_metric_object(m, y_t, y_p) for m in metrics]
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:416 <listcomp>
        return [self._get_metric_object(m, y_t, y_p) for m in metrics]
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:435 _get_metric_object
        metric_obj = metrics_mod.get(metric)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\metrics.py:3358 get
        return deserialize(str(identifier))
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\metrics.py:3345 deserialize
        return deserialize_keras_object(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\utils\generic_utils.py:392 deserialize_keras_object
        raise ValueError('Unknown ' + printable_module_name + ':' + object_name)

    ValueError: Unknown metric function:custom_metric_root_mean_squared_error
Traceback (most recent call last):
  File ".\_2_train.py", line 137, in train
    forecaster.fit(x_train, y_train, batch_size=batch_size, epochs=epochs, workers=workers)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 66, in _method_wrapper
    return method(self, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 785, in fit
    tmp_logs = train_function(iterator)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 580, in __call__
    result = self._call(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 627, in _call
    self._initialize(args, kwds, add_initializers_to=initializers)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 505, in _initialize
    self._stateful_fn._get_concrete_function_internal_garbage_collected(  # pylint: disable=protected-access
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2446, in _get_concrete_function_internal_garbage_collected
    graph_function, _, _ = self._maybe_define_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2777, in _maybe_define_function
    graph_function = self._create_graph_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2657, in _create_graph_function
    func_graph_module.func_graph_from_py_func(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 981, in func_graph_from_py_func
    func_outputs = python_func(*func_args, **func_kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 441, in wrapped_fn
    return weak_wrapped_fn().__wrapped__(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 968, in wrapper
    raise e.ag_error_metadata.to_exception(e)
ValueError: in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:477 train_step  **
        self.compiled_metrics.update_state(y, y_pred, sample_weight)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:386 update_state
        self._build(y_pred, y_true)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:316 _build
        self._metrics = nest.map_structure_up_to(y_pred, self._get_metric_objects,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:1114 map_structure_up_to
        return map_structure_with_tuple_paths_up_to(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:1213 map_structure_with_tuple_paths_up_to
        results = [func(*args, **kwargs) for args in zip(flat_path_list,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:1213 <listcomp>
        results = [func(*args, **kwargs) for args in zip(flat_path_list,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:1116 <lambda>
        lambda _, *values: func(*values),  # Discards the path arg.
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:416 _get_metric_objects
        return [self._get_metric_object(m, y_t, y_p) for m in metrics]
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:416 <listcomp>
        return [self._get_metric_object(m, y_t, y_p) for m in metrics]
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:435 _get_metric_object
        metric_obj = metrics_mod.get(metric)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\metrics.py:3358 get
        return deserialize(str(identifier))
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\metrics.py:3345 deserialize
        return deserialize_keras_object(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\utils\generic_utils.py:392 deserialize_keras_object
        raise ValueError('Unknown ' + printable_module_name + ':' + object_name)

    ValueError: Unknown metric function:custom_metric_root_mean_squared_error


15.Apr 2020 23:14:47 correct LSTM model creation and compilation

15.Apr 2020 23:15:21 model training error
in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:477 train_step  **
        self.compiled_metrics.update_state(y, y_pred, sample_weight)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:386 update_state
        self._build(y_pred, y_true)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:316 _build
        self._metrics = nest.map_structure_up_to(y_pred, self._get_metric_objects,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:1114 map_structure_up_to
        return map_structure_with_tuple_paths_up_to(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:1213 map_structure_with_tuple_paths_up_to
        results = [func(*args, **kwargs) for args in zip(flat_path_list,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:1213 <listcomp>
        results = [func(*args, **kwargs) for args in zip(flat_path_list,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:1116 <lambda>
        lambda _, *values: func(*values),  # Discards the path arg.
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:416 _get_metric_objects
        return [self._get_metric_object(m, y_t, y_p) for m in metrics]
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:416 <listcomp>
        return [self._get_metric_object(m, y_t, y_p) for m in metrics]
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:435 _get_metric_object
        metric_obj = metrics_mod.get(metric)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\metrics.py:3358 get
        return deserialize(str(identifier))
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\metrics.py:3345 deserialize
        return deserialize_keras_object(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\utils\generic_utils.py:392 deserialize_keras_object
        raise ValueError('Unknown ' + printable_module_name + ':' + object_name)

    ValueError: Unknown metric function:custom_metric_root_mean_squared_error
Traceback (most recent call last):
  File ".\_2_train.py", line 137, in train
    forecaster.fit(x_train, y_train, batch_size=batch_size, epochs=epochs, workers=workers)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 66, in _method_wrapper
    return method(self, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 785, in fit
    tmp_logs = train_function(iterator)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 580, in __call__
    result = self._call(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 627, in _call
    self._initialize(args, kwds, add_initializers_to=initializers)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 505, in _initialize
    self._stateful_fn._get_concrete_function_internal_garbage_collected(  # pylint: disable=protected-access
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2446, in _get_concrete_function_internal_garbage_collected
    graph_function, _, _ = self._maybe_define_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2777, in _maybe_define_function
    graph_function = self._create_graph_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2657, in _create_graph_function
    func_graph_module.func_graph_from_py_func(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 981, in func_graph_from_py_func
    func_outputs = python_func(*func_args, **func_kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 441, in wrapped_fn
    return weak_wrapped_fn().__wrapped__(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 968, in wrapper
    raise e.ag_error_metadata.to_exception(e)
ValueError: in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:477 train_step  **
        self.compiled_metrics.update_state(y, y_pred, sample_weight)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:386 update_state
        self._build(y_pred, y_true)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:316 _build
        self._metrics = nest.map_structure_up_to(y_pred, self._get_metric_objects,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:1114 map_structure_up_to
        return map_structure_with_tuple_paths_up_to(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:1213 map_structure_with_tuple_paths_up_to
        results = [func(*args, **kwargs) for args in zip(flat_path_list,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:1213 <listcomp>
        results = [func(*args, **kwargs) for args in zip(flat_path_list,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:1116 <lambda>
        lambda _, *values: func(*values),  # Discards the path arg.
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:416 _get_metric_objects
        return [self._get_metric_object(m, y_t, y_p) for m in metrics]
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:416 <listcomp>
        return [self._get_metric_object(m, y_t, y_p) for m in metrics]
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:435 _get_metric_object
        metric_obj = metrics_mod.get(metric)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\metrics.py:3358 get
        return deserialize(str(identifier))
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\metrics.py:3345 deserialize
        return deserialize_keras_object(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\utils\generic_utils.py:392 deserialize_keras_object
        raise ValueError('Unknown ' + printable_module_name + ':' + object_name)

    ValueError: Unknown metric function:custom_metric_root_mean_squared_error


15.Apr 2020 23:19:39 correct LSTM model creation and compilation

15.Apr 2020 23:20:13 model training error
in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:477 train_step  **
        self.compiled_metrics.update_state(y, y_pred, sample_weight)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:386 update_state
        self._build(y_pred, y_true)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:316 _build
        self._metrics = nest.map_structure_up_to(y_pred, self._get_metric_objects,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:1114 map_structure_up_to
        return map_structure_with_tuple_paths_up_to(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:1213 map_structure_with_tuple_paths_up_to
        results = [func(*args, **kwargs) for args in zip(flat_path_list,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:1213 <listcomp>
        results = [func(*args, **kwargs) for args in zip(flat_path_list,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:1116 <lambda>
        lambda _, *values: func(*values),  # Discards the path arg.
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:416 _get_metric_objects
        return [self._get_metric_object(m, y_t, y_p) for m in metrics]
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:416 <listcomp>
        return [self._get_metric_object(m, y_t, y_p) for m in metrics]
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:435 _get_metric_object
        metric_obj = metrics_mod.get(metric)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\metrics.py:3358 get
        return deserialize(str(identifier))
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\metrics.py:3345 deserialize
        return deserialize_keras_object(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\utils\generic_utils.py:392 deserialize_keras_object
        raise ValueError('Unknown ' + printable_module_name + ':' + object_name)

    ValueError: Unknown metric function:custom_metric_root_mean_squared_error
Traceback (most recent call last):
  File ".\_2_train.py", line 137, in train
    forecaster.fit(x_train, y_train, batch_size=batch_size, epochs=epochs, workers=workers)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 66, in _method_wrapper
    return method(self, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 785, in fit
    tmp_logs = train_function(iterator)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 580, in __call__
    result = self._call(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 627, in _call
    self._initialize(args, kwds, add_initializers_to=initializers)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 505, in _initialize
    self._stateful_fn._get_concrete_function_internal_garbage_collected(  # pylint: disable=protected-access
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2446, in _get_concrete_function_internal_garbage_collected
    graph_function, _, _ = self._maybe_define_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2777, in _maybe_define_function
    graph_function = self._create_graph_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2657, in _create_graph_function
    func_graph_module.func_graph_from_py_func(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 981, in func_graph_from_py_func
    func_outputs = python_func(*func_args, **func_kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 441, in wrapped_fn
    return weak_wrapped_fn().__wrapped__(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 968, in wrapper
    raise e.ag_error_metadata.to_exception(e)
ValueError: in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:477 train_step  **
        self.compiled_metrics.update_state(y, y_pred, sample_weight)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:386 update_state
        self._build(y_pred, y_true)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:316 _build
        self._metrics = nest.map_structure_up_to(y_pred, self._get_metric_objects,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:1114 map_structure_up_to
        return map_structure_with_tuple_paths_up_to(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:1213 map_structure_with_tuple_paths_up_to
        results = [func(*args, **kwargs) for args in zip(flat_path_list,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:1213 <listcomp>
        results = [func(*args, **kwargs) for args in zip(flat_path_list,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:1116 <lambda>
        lambda _, *values: func(*values),  # Discards the path arg.
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:416 _get_metric_objects
        return [self._get_metric_object(m, y_t, y_p) for m in metrics]
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:416 <listcomp>
        return [self._get_metric_object(m, y_t, y_p) for m in metrics]
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:435 _get_metric_object
        metric_obj = metrics_mod.get(metric)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\metrics.py:3358 get
        return deserialize(str(identifier))
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\metrics.py:3345 deserialize
        return deserialize_keras_object(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\utils\generic_utils.py:392 deserialize_keras_object
        raise ValueError('Unknown ' + printable_module_name + ':' + object_name)

    ValueError: Unknown metric function:custom_metric_root_mean_squared_error


15.Apr 2020 23:20:40 correct LSTM model creation and compilation

15.Apr 2020 23:21:14 model training error
in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:477 train_step  **
        self.compiled_metrics.update_state(y, y_pred, sample_weight)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:386 update_state
        self._build(y_pred, y_true)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:316 _build
        self._metrics = nest.map_structure_up_to(y_pred, self._get_metric_objects,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:1114 map_structure_up_to
        return map_structure_with_tuple_paths_up_to(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:1213 map_structure_with_tuple_paths_up_to
        results = [func(*args, **kwargs) for args in zip(flat_path_list,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:1213 <listcomp>
        results = [func(*args, **kwargs) for args in zip(flat_path_list,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:1116 <lambda>
        lambda _, *values: func(*values),  # Discards the path arg.
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:416 _get_metric_objects
        return [self._get_metric_object(m, y_t, y_p) for m in metrics]
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:416 <listcomp>
        return [self._get_metric_object(m, y_t, y_p) for m in metrics]
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:435 _get_metric_object
        metric_obj = metrics_mod.get(metric)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\metrics.py:3358 get
        return deserialize(str(identifier))
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\metrics.py:3345 deserialize
        return deserialize_keras_object(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\utils\generic_utils.py:392 deserialize_keras_object
        raise ValueError('Unknown ' + printable_module_name + ':' + object_name)

    ValueError: Unknown metric function:[custom_metric_root_mean_squared_error]
Traceback (most recent call last):
  File ".\_2_train.py", line 137, in train
    forecaster.fit(x_train, y_train, batch_size=batch_size, epochs=epochs, workers=workers)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 66, in _method_wrapper
    return method(self, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 785, in fit
    tmp_logs = train_function(iterator)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 580, in __call__
    result = self._call(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 627, in _call
    self._initialize(args, kwds, add_initializers_to=initializers)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 505, in _initialize
    self._stateful_fn._get_concrete_function_internal_garbage_collected(  # pylint: disable=protected-access
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2446, in _get_concrete_function_internal_garbage_collected
    graph_function, _, _ = self._maybe_define_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2777, in _maybe_define_function
    graph_function = self._create_graph_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2657, in _create_graph_function
    func_graph_module.func_graph_from_py_func(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 981, in func_graph_from_py_func
    func_outputs = python_func(*func_args, **func_kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 441, in wrapped_fn
    return weak_wrapped_fn().__wrapped__(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 968, in wrapper
    raise e.ag_error_metadata.to_exception(e)
ValueError: in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:477 train_step  **
        self.compiled_metrics.update_state(y, y_pred, sample_weight)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:386 update_state
        self._build(y_pred, y_true)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:316 _build
        self._metrics = nest.map_structure_up_to(y_pred, self._get_metric_objects,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:1114 map_structure_up_to
        return map_structure_with_tuple_paths_up_to(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:1213 map_structure_with_tuple_paths_up_to
        results = [func(*args, **kwargs) for args in zip(flat_path_list,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:1213 <listcomp>
        results = [func(*args, **kwargs) for args in zip(flat_path_list,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:1116 <lambda>
        lambda _, *values: func(*values),  # Discards the path arg.
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:416 _get_metric_objects
        return [self._get_metric_object(m, y_t, y_p) for m in metrics]
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:416 <listcomp>
        return [self._get_metric_object(m, y_t, y_p) for m in metrics]
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:435 _get_metric_object
        metric_obj = metrics_mod.get(metric)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\metrics.py:3358 get
        return deserialize(str(identifier))
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\metrics.py:3345 deserialize
        return deserialize_keras_object(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\utils\generic_utils.py:392 deserialize_keras_object
        raise ValueError('Unknown ' + printable_module_name + ':' + object_name)

    ValueError: Unknown metric function:[custom_metric_root_mean_squared_error]


15.Apr 2020 23:21:46 correct LSTM model creation and compilation

15.Apr 2020 23:22:20 model training error
in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:477 train_step  **
        self.compiled_metrics.update_state(y, y_pred, sample_weight)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:386 update_state
        self._build(y_pred, y_true)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:316 _build
        self._metrics = nest.map_structure_up_to(y_pred, self._get_metric_objects,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:1114 map_structure_up_to
        return map_structure_with_tuple_paths_up_to(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:1213 map_structure_with_tuple_paths_up_to
        results = [func(*args, **kwargs) for args in zip(flat_path_list,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:1213 <listcomp>
        results = [func(*args, **kwargs) for args in zip(flat_path_list,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:1116 <lambda>
        lambda _, *values: func(*values),  # Discards the path arg.
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:416 _get_metric_objects
        return [self._get_metric_object(m, y_t, y_p) for m in metrics]
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:416 <listcomp>
        return [self._get_metric_object(m, y_t, y_p) for m in metrics]
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:435 _get_metric_object
        metric_obj = metrics_mod.get(metric)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\metrics.py:3358 get
        return deserialize(str(identifier))
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\metrics.py:3345 deserialize
        return deserialize_keras_object(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\utils\generic_utils.py:392 deserialize_keras_object
        raise ValueError('Unknown ' + printable_module_name + ':' + object_name)

    ValueError: Unknown metric function:['custom_metric_root_mean_squared_error']
Traceback (most recent call last):
  File ".\_2_train.py", line 137, in train
    forecaster.fit(x_train, y_train, batch_size=batch_size, epochs=epochs, workers=workers)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 66, in _method_wrapper
    return method(self, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 785, in fit
    tmp_logs = train_function(iterator)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 580, in __call__
    result = self._call(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 627, in _call
    self._initialize(args, kwds, add_initializers_to=initializers)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 505, in _initialize
    self._stateful_fn._get_concrete_function_internal_garbage_collected(  # pylint: disable=protected-access
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2446, in _get_concrete_function_internal_garbage_collected
    graph_function, _, _ = self._maybe_define_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2777, in _maybe_define_function
    graph_function = self._create_graph_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2657, in _create_graph_function
    func_graph_module.func_graph_from_py_func(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 981, in func_graph_from_py_func
    func_outputs = python_func(*func_args, **func_kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 441, in wrapped_fn
    return weak_wrapped_fn().__wrapped__(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 968, in wrapper
    raise e.ag_error_metadata.to_exception(e)
ValueError: in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:477 train_step  **
        self.compiled_metrics.update_state(y, y_pred, sample_weight)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:386 update_state
        self._build(y_pred, y_true)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:316 _build
        self._metrics = nest.map_structure_up_to(y_pred, self._get_metric_objects,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:1114 map_structure_up_to
        return map_structure_with_tuple_paths_up_to(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:1213 map_structure_with_tuple_paths_up_to
        results = [func(*args, **kwargs) for args in zip(flat_path_list,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:1213 <listcomp>
        results = [func(*args, **kwargs) for args in zip(flat_path_list,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:1116 <lambda>
        lambda _, *values: func(*values),  # Discards the path arg.
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:416 _get_metric_objects
        return [self._get_metric_object(m, y_t, y_p) for m in metrics]
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:416 <listcomp>
        return [self._get_metric_object(m, y_t, y_p) for m in metrics]
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:435 _get_metric_object
        metric_obj = metrics_mod.get(metric)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\metrics.py:3358 get
        return deserialize(str(identifier))
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\metrics.py:3345 deserialize
        return deserialize_keras_object(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\utils\generic_utils.py:392 deserialize_keras_object
        raise ValueError('Unknown ' + printable_module_name + ':' + object_name)

    ValueError: Unknown metric function:['custom_metric_root_mean_squared_error']


15.Apr 2020 23:22:56 correct LSTM model creation and compilation

15.Apr 2020 23:23:30 model training error
in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:477 train_step  **
        self.compiled_metrics.update_state(y, y_pred, sample_weight)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:386 update_state
        self._build(y_pred, y_true)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:316 _build
        self._metrics = nest.map_structure_up_to(y_pred, self._get_metric_objects,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:1114 map_structure_up_to
        return map_structure_with_tuple_paths_up_to(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:1213 map_structure_with_tuple_paths_up_to
        results = [func(*args, **kwargs) for args in zip(flat_path_list,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:1213 <listcomp>
        results = [func(*args, **kwargs) for args in zip(flat_path_list,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:1116 <lambda>
        lambda _, *values: func(*values),  # Discards the path arg.
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:416 _get_metric_objects
        return [self._get_metric_object(m, y_t, y_p) for m in metrics]
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:416 <listcomp>
        return [self._get_metric_object(m, y_t, y_p) for m in metrics]
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:435 _get_metric_object
        metric_obj = metrics_mod.get(metric)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\metrics.py:3358 get
        return deserialize(str(identifier))
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\metrics.py:3345 deserialize
        return deserialize_keras_object(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\utils\generic_utils.py:392 deserialize_keras_object
        raise ValueError('Unknown ' + printable_module_name + ':' + object_name)

    ValueError: Unknown metric function:'custom_metric_root_mean_squared_error'
Traceback (most recent call last):
  File ".\_2_train.py", line 137, in train
    forecaster.fit(x_train, y_train, batch_size=batch_size, epochs=epochs, workers=workers)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 66, in _method_wrapper
    return method(self, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 785, in fit
    tmp_logs = train_function(iterator)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 580, in __call__
    result = self._call(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 627, in _call
    self._initialize(args, kwds, add_initializers_to=initializers)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 505, in _initialize
    self._stateful_fn._get_concrete_function_internal_garbage_collected(  # pylint: disable=protected-access
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2446, in _get_concrete_function_internal_garbage_collected
    graph_function, _, _ = self._maybe_define_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2777, in _maybe_define_function
    graph_function = self._create_graph_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2657, in _create_graph_function
    func_graph_module.func_graph_from_py_func(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 981, in func_graph_from_py_func
    func_outputs = python_func(*func_args, **func_kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 441, in wrapped_fn
    return weak_wrapped_fn().__wrapped__(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 968, in wrapper
    raise e.ag_error_metadata.to_exception(e)
ValueError: in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:477 train_step  **
        self.compiled_metrics.update_state(y, y_pred, sample_weight)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:386 update_state
        self._build(y_pred, y_true)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:316 _build
        self._metrics = nest.map_structure_up_to(y_pred, self._get_metric_objects,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:1114 map_structure_up_to
        return map_structure_with_tuple_paths_up_to(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:1213 map_structure_with_tuple_paths_up_to
        results = [func(*args, **kwargs) for args in zip(flat_path_list,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:1213 <listcomp>
        results = [func(*args, **kwargs) for args in zip(flat_path_list,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:1116 <lambda>
        lambda _, *values: func(*values),  # Discards the path arg.
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:416 _get_metric_objects
        return [self._get_metric_object(m, y_t, y_p) for m in metrics]
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:416 <listcomp>
        return [self._get_metric_object(m, y_t, y_p) for m in metrics]
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:435 _get_metric_object
        metric_obj = metrics_mod.get(metric)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\metrics.py:3358 get
        return deserialize(str(identifier))
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\metrics.py:3345 deserialize
        return deserialize_keras_object(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\utils\generic_utils.py:392 deserialize_keras_object
        raise ValueError('Unknown ' + printable_module_name + ':' + object_name)

    ValueError: Unknown metric function:'custom_metric_root_mean_squared_error'


15.Apr 2020 23:26:41 correct LSTM model creation and compilation

15.Apr 2020 23:27:15 model training error
in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:477 train_step  **
        self.compiled_metrics.update_state(y, y_pred, sample_weight)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:386 update_state
        self._build(y_pred, y_true)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:316 _build
        self._metrics = nest.map_structure_up_to(y_pred, self._get_metric_objects,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:1114 map_structure_up_to
        return map_structure_with_tuple_paths_up_to(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:1213 map_structure_with_tuple_paths_up_to
        results = [func(*args, **kwargs) for args in zip(flat_path_list,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:1213 <listcomp>
        results = [func(*args, **kwargs) for args in zip(flat_path_list,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:1116 <lambda>
        lambda _, *values: func(*values),  # Discards the path arg.
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:416 _get_metric_objects
        return [self._get_metric_object(m, y_t, y_p) for m in metrics]
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:416 <listcomp>
        return [self._get_metric_object(m, y_t, y_p) for m in metrics]
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:435 _get_metric_object
        metric_obj = metrics_mod.get(metric)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\metrics.py:3358 get
        return deserialize(str(identifier))
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\metrics.py:3345 deserialize
        return deserialize_keras_object(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\utils\generic_utils.py:392 deserialize_keras_object
        raise ValueError('Unknown ' + printable_module_name + ':' + object_name)

    ValueError: Unknown metric function:'mean_squared_error', 'mape'
Traceback (most recent call last):
  File ".\_2_train.py", line 137, in train
    forecaster.fit(x_train, y_train, batch_size=batch_size, epochs=epochs, workers=workers)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 66, in _method_wrapper
    return method(self, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 785, in fit
    tmp_logs = train_function(iterator)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 580, in __call__
    result = self._call(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 627, in _call
    self._initialize(args, kwds, add_initializers_to=initializers)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 505, in _initialize
    self._stateful_fn._get_concrete_function_internal_garbage_collected(  # pylint: disable=protected-access
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2446, in _get_concrete_function_internal_garbage_collected
    graph_function, _, _ = self._maybe_define_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2777, in _maybe_define_function
    graph_function = self._create_graph_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2657, in _create_graph_function
    func_graph_module.func_graph_from_py_func(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 981, in func_graph_from_py_func
    func_outputs = python_func(*func_args, **func_kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 441, in wrapped_fn
    return weak_wrapped_fn().__wrapped__(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 968, in wrapper
    raise e.ag_error_metadata.to_exception(e)
ValueError: in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:477 train_step  **
        self.compiled_metrics.update_state(y, y_pred, sample_weight)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:386 update_state
        self._build(y_pred, y_true)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:316 _build
        self._metrics = nest.map_structure_up_to(y_pred, self._get_metric_objects,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:1114 map_structure_up_to
        return map_structure_with_tuple_paths_up_to(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:1213 map_structure_with_tuple_paths_up_to
        results = [func(*args, **kwargs) for args in zip(flat_path_list,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:1213 <listcomp>
        results = [func(*args, **kwargs) for args in zip(flat_path_list,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:1116 <lambda>
        lambda _, *values: func(*values),  # Discards the path arg.
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:416 _get_metric_objects
        return [self._get_metric_object(m, y_t, y_p) for m in metrics]
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:416 <listcomp>
        return [self._get_metric_object(m, y_t, y_p) for m in metrics]
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:435 _get_metric_object
        metric_obj = metrics_mod.get(metric)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\metrics.py:3358 get
        return deserialize(str(identifier))
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\metrics.py:3345 deserialize
        return deserialize_keras_object(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\utils\generic_utils.py:392 deserialize_keras_object
        raise ValueError('Unknown ' + printable_module_name + ':' + object_name)

    ValueError: Unknown metric function:'mean_squared_error', 'mape'


15.Apr 2020 23:28:22 correct LSTM model creation and compilation

15.Apr 2020 23:33:48 correct LSTM model creation and compilation

15.Apr 2020 23:41:59 correct LSTM model creation and compilation

15.Apr 2020 23:42:32 model training error
'str' object has no attribute 'set_model'
Traceback (most recent call last):
  File ".\_2_train.py", line 141, in train
    forecaster.fit(x_train, y_train, batch_size=batch_size, epochs=epochs, workers=workers,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 66, in _method_wrapper
    return method(self, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 756, in fit
    callbacks = callbacks_module.CallbackList(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\callbacks.py", line 219, in __init__
    self.set_model(model)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\callbacks.py", line 281, in set_model
    callback.set_model(model)
AttributeError: 'str' object has no attribute 'set_model'

15.Apr 2020 23:47:01 correct LSTM model creation and compilation

15.Apr 2020 23:47:34 model training error
'str' object has no attribute 'set_model'
Traceback (most recent call last):
  File ".\_2_train.py", line 141, in train
    forecaster.fit(x_train, y_train, batch_size=batch_size, epochs=epochs, workers=workers,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 66, in _method_wrapper
    return method(self, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 756, in fit
    callbacks = callbacks_module.CallbackList(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\callbacks.py", line 219, in __init__
    self.set_model(model)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\callbacks.py", line 281, in set_model
    callback.set_model(model)
AttributeError: 'str' object has no attribute 'set_model'

15.Apr 2020 23:49:33 correct LSTM model creation and compilation

15.Apr 2020 23:50:06 model training error
'str' object has no attribute 'set_model'
Traceback (most recent call last):
  File ".\_2_train.py", line 141, in train
    forecaster.fit(x_train, y_train, batch_size=batch_size, epochs=epochs, workers=workers,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 66, in _method_wrapper
    return method(self, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 756, in fit
    callbacks = callbacks_module.CallbackList(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\callbacks.py", line 219, in __init__
    self.set_model(model)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\callbacks.py", line 281, in set_model
    callback.set_model(model)
AttributeError: 'str' object has no attribute 'set_model'
2020-04-15 23:51:44,289 DEBUG tensorflow Layer lstm will use cuDNN kernel when run on GPU.
2020-04-15 23:51:44,628 DEBUG tensorflow Layer lstm_1 will use cuDNN kernel when run on GPU.
2020-04-15 23:51:45,000 DEBUG tensorflow Layer lstm_2 will use cuDNN kernel when run on GPU.
2020-04-15 23:51:45,279 DEBUG tensorflow Layer lstm_3 will use cuDNN kernel when run on GPU.

15.Apr 2020 23:51:45 correct LSTM model creation and compilation
2020-04-15 23:51:45,584 INFO __main__ 
15.Apr 2020 23:51:45 correct LSTM model creation and compilation

16.Apr 2020 00:00:00 correct LSTM model creation and compilation

16.Apr 2020 00:05:37 correct model training, correct saving of model and weights

16.Apr 2020 00:13:10 correct LSTM model creation and compilation

16.Apr 2020 00:15:48 correct LSTM model creation and compilation

16.Apr 2020 00:16:22 model training error
in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:466 train_step  **
        loss = self.compiled_loss(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:187 __call__
        self._build(y_pred)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:140 _build
        self._losses = nest.map_structure(self._get_loss_object, self._losses)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:617 map_structure
        structure[0], [func(*x) for x in entries],
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:617 <listcomp>
        structure[0], [func(*x) for x in entries],
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:259 _get_loss_object
        loss = losses_mod.get(loss)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\losses.py:1857 get
        return deserialize(identifier)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\losses.py:1831 deserialize
        return deserialize_keras_object(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\utils\generic_utils.py:392 deserialize_keras_object
        raise ValueError('Unknown ' + printable_module_name + ':' + object_name)

    ValueError: Unknown loss function:mean_squared_error, mape
Traceback (most recent call last):
  File ".\_2_train.py", line 141, in train
    forecaster.fit(x_train, y_train, batch_size=batch_size, epochs=epochs, workers=workers)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 66, in _method_wrapper
    return method(self, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 785, in fit
    tmp_logs = train_function(iterator)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 580, in __call__
    result = self._call(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 627, in _call
    self._initialize(args, kwds, add_initializers_to=initializers)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 505, in _initialize
    self._stateful_fn._get_concrete_function_internal_garbage_collected(  # pylint: disable=protected-access
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2446, in _get_concrete_function_internal_garbage_collected
    graph_function, _, _ = self._maybe_define_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2777, in _maybe_define_function
    graph_function = self._create_graph_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2657, in _create_graph_function
    func_graph_module.func_graph_from_py_func(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 981, in func_graph_from_py_func
    func_outputs = python_func(*func_args, **func_kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 441, in wrapped_fn
    return weak_wrapped_fn().__wrapped__(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 968, in wrapper
    raise e.ag_error_metadata.to_exception(e)
ValueError: in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:466 train_step  **
        loss = self.compiled_loss(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:187 __call__
        self._build(y_pred)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:140 _build
        self._losses = nest.map_structure(self._get_loss_object, self._losses)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:617 map_structure
        structure[0], [func(*x) for x in entries],
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:617 <listcomp>
        structure[0], [func(*x) for x in entries],
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:259 _get_loss_object
        loss = losses_mod.get(loss)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\losses.py:1857 get
        return deserialize(identifier)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\losses.py:1831 deserialize
        return deserialize_keras_object(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\utils\generic_utils.py:392 deserialize_keras_object
        raise ValueError('Unknown ' + printable_module_name + ':' + object_name)

    ValueError: Unknown loss function:mean_squared_error, mape


16.Apr 2020 00:17:56 correct LSTM model creation and compilation

16.Apr 2020 00:18:31 model training error
in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:466 train_step  **
        loss = self.compiled_loss(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:187 __call__
        self._build(y_pred)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:140 _build
        self._losses = nest.map_structure(self._get_loss_object, self._losses)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:617 map_structure
        structure[0], [func(*x) for x in entries],
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:617 <listcomp>
        structure[0], [func(*x) for x in entries],
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:259 _get_loss_object
        loss = losses_mod.get(loss)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\losses.py:1857 get
        return deserialize(identifier)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\losses.py:1831 deserialize
        return deserialize_keras_object(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\utils\generic_utils.py:392 deserialize_keras_object
        raise ValueError('Unknown ' + printable_module_name + ':' + object_name)

    ValueError: Unknown loss function:'mean_squared_error', 'mape'
Traceback (most recent call last):
  File ".\_2_train.py", line 141, in train
    forecaster.fit(x_train, y_train, batch_size=batch_size, epochs=epochs, workers=workers)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 66, in _method_wrapper
    return method(self, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 785, in fit
    tmp_logs = train_function(iterator)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 580, in __call__
    result = self._call(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 627, in _call
    self._initialize(args, kwds, add_initializers_to=initializers)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 505, in _initialize
    self._stateful_fn._get_concrete_function_internal_garbage_collected(  # pylint: disable=protected-access
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2446, in _get_concrete_function_internal_garbage_collected
    graph_function, _, _ = self._maybe_define_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2777, in _maybe_define_function
    graph_function = self._create_graph_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2657, in _create_graph_function
    func_graph_module.func_graph_from_py_func(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 981, in func_graph_from_py_func
    func_outputs = python_func(*func_args, **func_kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 441, in wrapped_fn
    return weak_wrapped_fn().__wrapped__(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 968, in wrapper
    raise e.ag_error_metadata.to_exception(e)
ValueError: in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:466 train_step  **
        loss = self.compiled_loss(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:187 __call__
        self._build(y_pred)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:140 _build
        self._losses = nest.map_structure(self._get_loss_object, self._losses)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:617 map_structure
        structure[0], [func(*x) for x in entries],
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:617 <listcomp>
        structure[0], [func(*x) for x in entries],
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:259 _get_loss_object
        loss = losses_mod.get(loss)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\losses.py:1857 get
        return deserialize(identifier)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\losses.py:1831 deserialize
        return deserialize_keras_object(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\utils\generic_utils.py:392 deserialize_keras_object
        raise ValueError('Unknown ' + printable_module_name + ':' + object_name)

    ValueError: Unknown loss function:'mean_squared_error', 'mape'


16.Apr 2020 00:20:42 correct LSTM model creation and compilation

16.Apr 2020 00:21:16 model training error
in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:466 train_step  **
        loss = self.compiled_loss(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:187 __call__
        self._build(y_pred)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:140 _build
        self._losses = nest.map_structure(self._get_loss_object, self._losses)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:617 map_structure
        structure[0], [func(*x) for x in entries],
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:617 <listcomp>
        structure[0], [func(*x) for x in entries],
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:259 _get_loss_object
        loss = losses_mod.get(loss)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\losses.py:1857 get
        return deserialize(identifier)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\losses.py:1831 deserialize
        return deserialize_keras_object(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\utils\generic_utils.py:392 deserialize_keras_object
        raise ValueError('Unknown ' + printable_module_name + ':' + object_name)

    ValueError: Unknown loss function:mean_squared_error, mape
Traceback (most recent call last):
  File ".\_2_train.py", line 141, in train
    forecaster.fit(x_train, y_train, batch_size=batch_size, epochs=epochs, workers=workers)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 66, in _method_wrapper
    return method(self, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 785, in fit
    tmp_logs = train_function(iterator)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 580, in __call__
    result = self._call(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 627, in _call
    self._initialize(args, kwds, add_initializers_to=initializers)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 505, in _initialize
    self._stateful_fn._get_concrete_function_internal_garbage_collected(  # pylint: disable=protected-access
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2446, in _get_concrete_function_internal_garbage_collected
    graph_function, _, _ = self._maybe_define_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2777, in _maybe_define_function
    graph_function = self._create_graph_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2657, in _create_graph_function
    func_graph_module.func_graph_from_py_func(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 981, in func_graph_from_py_func
    func_outputs = python_func(*func_args, **func_kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 441, in wrapped_fn
    return weak_wrapped_fn().__wrapped__(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 968, in wrapper
    raise e.ag_error_metadata.to_exception(e)
ValueError: in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:466 train_step  **
        loss = self.compiled_loss(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:187 __call__
        self._build(y_pred)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:140 _build
        self._losses = nest.map_structure(self._get_loss_object, self._losses)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:617 map_structure
        structure[0], [func(*x) for x in entries],
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:617 <listcomp>
        structure[0], [func(*x) for x in entries],
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:259 _get_loss_object
        loss = losses_mod.get(loss)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\losses.py:1857 get
        return deserialize(identifier)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\losses.py:1831 deserialize
        return deserialize_keras_object(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\utils\generic_utils.py:392 deserialize_keras_object
        raise ValueError('Unknown ' + printable_module_name + ':' + object_name)

    ValueError: Unknown loss function:mean_squared_error, mape


16.Apr 2020 00:22:13 correct LSTM model creation and compilation

16.Apr 2020 00:26:49 correct LSTM model creation and compilation

16.Apr 2020 00:27:22 model training error
in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:466 train_step  **
        loss = self.compiled_loss(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:187 __call__
        self._build(y_pred)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:140 _build
        self._losses = nest.map_structure(self._get_loss_object, self._losses)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:617 map_structure
        structure[0], [func(*x) for x in entries],
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:617 <listcomp>
        structure[0], [func(*x) for x in entries],
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:259 _get_loss_object
        loss = losses_mod.get(loss)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\losses.py:1857 get
        return deserialize(identifier)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\losses.py:1831 deserialize
        return deserialize_keras_object(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\utils\generic_utils.py:392 deserialize_keras_object
        raise ValueError('Unknown ' + printable_module_name + ':' + object_name)

    ValueError: Unknown loss function:[mean_squared_error, mape]
Traceback (most recent call last):
  File ".\_2_train.py", line 141, in train
    forecaster.fit(x_train, y_train, batch_size=batch_size, epochs=epochs, workers=workers)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 66, in _method_wrapper
    return method(self, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 785, in fit
    tmp_logs = train_function(iterator)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 580, in __call__
    result = self._call(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 627, in _call
    self._initialize(args, kwds, add_initializers_to=initializers)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 505, in _initialize
    self._stateful_fn._get_concrete_function_internal_garbage_collected(  # pylint: disable=protected-access
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2446, in _get_concrete_function_internal_garbage_collected
    graph_function, _, _ = self._maybe_define_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2777, in _maybe_define_function
    graph_function = self._create_graph_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2657, in _create_graph_function
    func_graph_module.func_graph_from_py_func(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 981, in func_graph_from_py_func
    func_outputs = python_func(*func_args, **func_kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 441, in wrapped_fn
    return weak_wrapped_fn().__wrapped__(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 968, in wrapper
    raise e.ag_error_metadata.to_exception(e)
ValueError: in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:466 train_step  **
        loss = self.compiled_loss(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:187 __call__
        self._build(y_pred)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:140 _build
        self._losses = nest.map_structure(self._get_loss_object, self._losses)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:617 map_structure
        structure[0], [func(*x) for x in entries],
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:617 <listcomp>
        structure[0], [func(*x) for x in entries],
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:259 _get_loss_object
        loss = losses_mod.get(loss)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\losses.py:1857 get
        return deserialize(identifier)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\losses.py:1831 deserialize
        return deserialize_keras_object(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\utils\generic_utils.py:392 deserialize_keras_object
        raise ValueError('Unknown ' + printable_module_name + ':' + object_name)

    ValueError: Unknown loss function:[mean_squared_error, mape]


16.Apr 2020 00:30:51 error at loading model (LTSM) hyperparameters
Expecting value: line 19 column 12 (char 489)
Traceback (most recent call last):
  File ".\_2_train.py", line 42, in <module>
    model_hyperparameters = json.loads(local_json_file.read())
  File "C:\Users\Demo Windows 10\AppData\Local\Programs\Python\Python38\lib\json\__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "C:\Users\Demo Windows 10\AppData\Local\Programs\Python\Python38\lib\json\decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "C:\Users\Demo Windows 10\AppData\Local\Programs\Python\Python38\lib\json\decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 19 column 12 (char 489)

16.Apr 2020 00:30:51 LSTM model creation or compile error
name 'model_hyperparameters' is not defined
Traceback (most recent call last):
  File ".\_2_train.py", line 64, in <module>
    forecaster.add(layers.LSTM(units=int(model_hyperparameters['units_layer_1']),
NameError: name 'model_hyperparameters' is not defined

16.Apr 2020 00:31:43 correct LSTM model creation and compilation

16.Apr 2020 00:34:24 correct LSTM model creation and compilation

16.Apr 2020 00:34:58 model training error
in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:466 train_step  **
        loss = self.compiled_loss(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:187 __call__
        self._build(y_pred)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:140 _build
        self._losses = nest.map_structure(self._get_loss_object, self._losses)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:617 map_structure
        structure[0], [func(*x) for x in entries],
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:617 <listcomp>
        structure[0], [func(*x) for x in entries],
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:259 _get_loss_object
        loss = losses_mod.get(loss)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\losses.py:1857 get
        return deserialize(identifier)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\losses.py:1831 deserialize
        return deserialize_keras_object(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\utils\generic_utils.py:392 deserialize_keras_object
        raise ValueError('Unknown ' + printable_module_name + ':' + object_name)

    ValueError: Unknown loss function:None
Traceback (most recent call last):
  File ".\_2_train.py", line 142, in train
    forecaster.fit(x_train, y_train, batch_size=batch_size, epochs=epochs, workers=workers)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 66, in _method_wrapper
    return method(self, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 785, in fit
    tmp_logs = train_function(iterator)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 580, in __call__
    result = self._call(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 627, in _call
    self._initialize(args, kwds, add_initializers_to=initializers)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 505, in _initialize
    self._stateful_fn._get_concrete_function_internal_garbage_collected(  # pylint: disable=protected-access
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2446, in _get_concrete_function_internal_garbage_collected
    graph_function, _, _ = self._maybe_define_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2777, in _maybe_define_function
    graph_function = self._create_graph_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2657, in _create_graph_function
    func_graph_module.func_graph_from_py_func(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 981, in func_graph_from_py_func
    func_outputs = python_func(*func_args, **func_kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 441, in wrapped_fn
    return weak_wrapped_fn().__wrapped__(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 968, in wrapper
    raise e.ag_error_metadata.to_exception(e)
ValueError: in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:466 train_step  **
        loss = self.compiled_loss(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:187 __call__
        self._build(y_pred)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:140 _build
        self._losses = nest.map_structure(self._get_loss_object, self._losses)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:617 map_structure
        structure[0], [func(*x) for x in entries],
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:617 <listcomp>
        structure[0], [func(*x) for x in entries],
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:259 _get_loss_object
        loss = losses_mod.get(loss)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\losses.py:1857 get
        return deserialize(identifier)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\losses.py:1831 deserialize
        return deserialize_keras_object(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\utils\generic_utils.py:392 deserialize_keras_object
        raise ValueError('Unknown ' + printable_module_name + ':' + object_name)

    ValueError: Unknown loss function:None


16.Apr 2020 00:43:00 correct LSTM model creation and compilation

16.Apr 2020 00:43:34 model training error
in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:477 train_step  **
        self.compiled_metrics.update_state(y, y_pred, sample_weight)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:406 update_state
        metric_obj.update_state(y_t, y_p)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\utils\metrics_utils.py:90 decorated
        update_op = update_state_fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\metrics.py:603 update_state
        matches = self._fn(y_true, y_pred, **self._fn_kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\metrics.py:3181 accuracy
        y_pred.shape.assert_is_compatible_with(y_true.shape)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\tensor_shape.py:1117 assert_is_compatible_with
        raise ValueError("Shapes %s and %s are incompatible" % (self, other))

    ValueError: Shapes (None, 28) and (None, 1) are incompatible
Traceback (most recent call last):
  File ".\_2_train.py", line 142, in train
    forecaster.fit(x_train, y_train, batch_size=batch_size, epochs=epochs, workers=workers)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 66, in _method_wrapper
    return method(self, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 785, in fit
    tmp_logs = train_function(iterator)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 580, in __call__
    result = self._call(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 627, in _call
    self._initialize(args, kwds, add_initializers_to=initializers)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 505, in _initialize
    self._stateful_fn._get_concrete_function_internal_garbage_collected(  # pylint: disable=protected-access
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2446, in _get_concrete_function_internal_garbage_collected
    graph_function, _, _ = self._maybe_define_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2777, in _maybe_define_function
    graph_function = self._create_graph_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2657, in _create_graph_function
    func_graph_module.func_graph_from_py_func(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 981, in func_graph_from_py_func
    func_outputs = python_func(*func_args, **func_kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 441, in wrapped_fn
    return weak_wrapped_fn().__wrapped__(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 968, in wrapper
    raise e.ag_error_metadata.to_exception(e)
ValueError: in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:477 train_step  **
        self.compiled_metrics.update_state(y, y_pred, sample_weight)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:406 update_state
        metric_obj.update_state(y_t, y_p)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\utils\metrics_utils.py:90 decorated
        update_op = update_state_fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\metrics.py:603 update_state
        matches = self._fn(y_true, y_pred, **self._fn_kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\metrics.py:3181 accuracy
        y_pred.shape.assert_is_compatible_with(y_true.shape)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\tensor_shape.py:1117 assert_is_compatible_with
        raise ValueError("Shapes %s and %s are incompatible" % (self, other))

    ValueError: Shapes (None, 28) and (None, 1) are incompatible


16.Apr 2020 00:52:03 correct LSTM model creation and compilation

16.Apr 2020 00:52:39 model training error
in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:477 train_step  **
        self.compiled_metrics.update_state(y, y_pred, sample_weight)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:406 update_state
        metric_obj.update_state(y_t, y_p)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\utils\metrics_utils.py:90 decorated
        update_op = update_state_fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\metrics.py:603 update_state
        matches = self._fn(y_true, y_pred, **self._fn_kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\metrics.py:3181 accuracy
        y_pred.shape.assert_is_compatible_with(y_true.shape)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\tensor_shape.py:1117 assert_is_compatible_with
        raise ValueError("Shapes %s and %s are incompatible" % (self, other))

    ValueError: Shapes (None, 28) and (None, 1) are incompatible
Traceback (most recent call last):
  File ".\_2_train.py", line 142, in train
    forecaster.fit(x_train, y_train, batch_size=batch_size, epochs=epochs, workers=workers)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 66, in _method_wrapper
    return method(self, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 785, in fit
    tmp_logs = train_function(iterator)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 580, in __call__
    result = self._call(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 627, in _call
    self._initialize(args, kwds, add_initializers_to=initializers)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 505, in _initialize
    self._stateful_fn._get_concrete_function_internal_garbage_collected(  # pylint: disable=protected-access
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2446, in _get_concrete_function_internal_garbage_collected
    graph_function, _, _ = self._maybe_define_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2777, in _maybe_define_function
    graph_function = self._create_graph_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2657, in _create_graph_function
    func_graph_module.func_graph_from_py_func(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 981, in func_graph_from_py_func
    func_outputs = python_func(*func_args, **func_kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 441, in wrapped_fn
    return weak_wrapped_fn().__wrapped__(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 968, in wrapper
    raise e.ag_error_metadata.to_exception(e)
ValueError: in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:477 train_step  **
        self.compiled_metrics.update_state(y, y_pred, sample_weight)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:406 update_state
        metric_obj.update_state(y_t, y_p)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\utils\metrics_utils.py:90 decorated
        update_op = update_state_fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\metrics.py:603 update_state
        matches = self._fn(y_true, y_pred, **self._fn_kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\metrics.py:3181 accuracy
        y_pred.shape.assert_is_compatible_with(y_true.shape)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\tensor_shape.py:1117 assert_is_compatible_with
        raise ValueError("Shapes %s and %s are incompatible" % (self, other))

    ValueError: Shapes (None, 28) and (None, 1) are incompatible


16.Apr 2020 00:54:03 correct LSTM model creation and compilation

16.Apr 2020 00:54:36 model training error
'str' object has no attribute 'set_model'
Traceback (most recent call last):
  File ".\_2_train.py", line 142, in train
    forecaster.fit(x_train, y_train, batch_size=batch_size, epochs=epochs, workers=workers,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 66, in _method_wrapper
    return method(self, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 756, in fit
    callbacks = callbacks_module.CallbackList(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\callbacks.py", line 219, in __init__
    self.set_model(model)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\callbacks.py", line 281, in set_model
    callback.set_model(model)
AttributeError: 'str' object has no attribute 'set_model'

16.Apr 2020 00:56:16 correct LSTM model creation and compilation

16.Apr 2020 00:56:52 model training error
in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:477 train_step  **
        self.compiled_metrics.update_state(y, y_pred, sample_weight)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:406 update_state
        metric_obj.update_state(y_t, y_p)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\utils\metrics_utils.py:90 decorated
        update_op = update_state_fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\metrics.py:2067 update_state
        return metrics_utils.update_confusion_matrix_variables(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\utils\metrics_utils.py:351 update_confusion_matrix_variables
        y_pred.shape.assert_is_compatible_with(y_true.shape)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\tensor_shape.py:1117 assert_is_compatible_with
        raise ValueError("Shapes %s and %s are incompatible" % (self, other))

    ValueError: Shapes (None, 28) and (None, 1) are incompatible
Traceback (most recent call last):
  File ".\_2_train.py", line 142, in train
    forecaster.fit(x_train, y_train, batch_size=batch_size, epochs=epochs, workers=workers,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 66, in _method_wrapper
    return method(self, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 785, in fit
    tmp_logs = train_function(iterator)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 580, in __call__
    result = self._call(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 627, in _call
    self._initialize(args, kwds, add_initializers_to=initializers)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 505, in _initialize
    self._stateful_fn._get_concrete_function_internal_garbage_collected(  # pylint: disable=protected-access
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2446, in _get_concrete_function_internal_garbage_collected
    graph_function, _, _ = self._maybe_define_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2777, in _maybe_define_function
    graph_function = self._create_graph_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2657, in _create_graph_function
    func_graph_module.func_graph_from_py_func(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 981, in func_graph_from_py_func
    func_outputs = python_func(*func_args, **func_kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 441, in wrapped_fn
    return weak_wrapped_fn().__wrapped__(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 968, in wrapper
    raise e.ag_error_metadata.to_exception(e)
ValueError: in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:477 train_step  **
        self.compiled_metrics.update_state(y, y_pred, sample_weight)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:406 update_state
        metric_obj.update_state(y_t, y_p)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\utils\metrics_utils.py:90 decorated
        update_op = update_state_fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\metrics.py:2067 update_state
        return metrics_utils.update_confusion_matrix_variables(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\utils\metrics_utils.py:351 update_confusion_matrix_variables
        y_pred.shape.assert_is_compatible_with(y_true.shape)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\tensor_shape.py:1117 assert_is_compatible_with
        raise ValueError("Shapes %s and %s are incompatible" % (self, other))

    ValueError: Shapes (None, 28) and (None, 1) are incompatible


16.Apr 2020 00:57:54 correct LSTM model creation and compilation

16.Apr 2020 00:58:30 model training error
in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:477 train_step  **
        self.compiled_metrics.update_state(y, y_pred, sample_weight)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:406 update_state
        metric_obj.update_state(y_t, y_p)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\utils\metrics_utils.py:90 decorated
        update_op = update_state_fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\metrics.py:2067 update_state
        return metrics_utils.update_confusion_matrix_variables(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\utils\metrics_utils.py:351 update_confusion_matrix_variables
        y_pred.shape.assert_is_compatible_with(y_true.shape)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\tensor_shape.py:1117 assert_is_compatible_with
        raise ValueError("Shapes %s and %s are incompatible" % (self, other))

    ValueError: Shapes (None, 28) and (None, 1) are incompatible
Traceback (most recent call last):
  File ".\_2_train.py", line 142, in train
    forecaster.fit(x_train, y_train, batch_size=batch_size, epochs=epochs, workers=workers)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 66, in _method_wrapper
    return method(self, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 785, in fit
    tmp_logs = train_function(iterator)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 580, in __call__
    result = self._call(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 627, in _call
    self._initialize(args, kwds, add_initializers_to=initializers)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 505, in _initialize
    self._stateful_fn._get_concrete_function_internal_garbage_collected(  # pylint: disable=protected-access
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2446, in _get_concrete_function_internal_garbage_collected
    graph_function, _, _ = self._maybe_define_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2777, in _maybe_define_function
    graph_function = self._create_graph_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2657, in _create_graph_function
    func_graph_module.func_graph_from_py_func(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 981, in func_graph_from_py_func
    func_outputs = python_func(*func_args, **func_kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 441, in wrapped_fn
    return weak_wrapped_fn().__wrapped__(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 968, in wrapper
    raise e.ag_error_metadata.to_exception(e)
ValueError: in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:477 train_step  **
        self.compiled_metrics.update_state(y, y_pred, sample_weight)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:406 update_state
        metric_obj.update_state(y_t, y_p)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\utils\metrics_utils.py:90 decorated
        update_op = update_state_fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\metrics.py:2067 update_state
        return metrics_utils.update_confusion_matrix_variables(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\utils\metrics_utils.py:351 update_confusion_matrix_variables
        y_pred.shape.assert_is_compatible_with(y_true.shape)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\tensor_shape.py:1117 assert_is_compatible_with
        raise ValueError("Shapes %s and %s are incompatible" % (self, other))

    ValueError: Shapes (None, 28) and (None, 1) are incompatible


16.Apr 2020 01:00:45 correct LSTM model creation and compilation

16.Apr 2020 01:01:23 model training error
in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:477 train_step  **
        self.compiled_metrics.update_state(y, y_pred, sample_weight)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:406 update_state
        metric_obj.update_state(y_t, y_p)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\utils\metrics_utils.py:90 decorated
        update_op = update_state_fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\metrics.py:2067 update_state
        return metrics_utils.update_confusion_matrix_variables(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\utils\metrics_utils.py:351 update_confusion_matrix_variables
        y_pred.shape.assert_is_compatible_with(y_true.shape)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\tensor_shape.py:1117 assert_is_compatible_with
        raise ValueError("Shapes %s and %s are incompatible" % (self, other))

    ValueError: Shapes (None, 28) and (None, 1) are incompatible
Traceback (most recent call last):
  File ".\_2_train.py", line 143, in train
    forecaster.fit(x_train, y_train, batch_size=batch_size, epochs=epochs, workers=workers)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 66, in _method_wrapper
    return method(self, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 785, in fit
    tmp_logs = train_function(iterator)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 580, in __call__
    result = self._call(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 627, in _call
    self._initialize(args, kwds, add_initializers_to=initializers)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 505, in _initialize
    self._stateful_fn._get_concrete_function_internal_garbage_collected(  # pylint: disable=protected-access
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2446, in _get_concrete_function_internal_garbage_collected
    graph_function, _, _ = self._maybe_define_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2777, in _maybe_define_function
    graph_function = self._create_graph_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2657, in _create_graph_function
    func_graph_module.func_graph_from_py_func(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 981, in func_graph_from_py_func
    func_outputs = python_func(*func_args, **func_kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 441, in wrapped_fn
    return weak_wrapped_fn().__wrapped__(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 968, in wrapper
    raise e.ag_error_metadata.to_exception(e)
ValueError: in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:477 train_step  **
        self.compiled_metrics.update_state(y, y_pred, sample_weight)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:406 update_state
        metric_obj.update_state(y_t, y_p)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\utils\metrics_utils.py:90 decorated
        update_op = update_state_fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\metrics.py:2067 update_state
        return metrics_utils.update_confusion_matrix_variables(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\utils\metrics_utils.py:351 update_confusion_matrix_variables
        y_pred.shape.assert_is_compatible_with(y_true.shape)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\tensor_shape.py:1117 assert_is_compatible_with
        raise ValueError("Shapes %s and %s are incompatible" % (self, other))

    ValueError: Shapes (None, 28) and (None, 1) are incompatible


16.Apr 2020 01:04:30 correct LSTM model creation and compilation

16.Apr 2020 01:05:06 model training error
in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:477 train_step  **
        self.compiled_metrics.update_state(y, y_pred, sample_weight)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:386 update_state
        self._build(y_pred, y_true)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:316 _build
        self._metrics = nest.map_structure_up_to(y_pred, self._get_metric_objects,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:1114 map_structure_up_to
        return map_structure_with_tuple_paths_up_to(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:1213 map_structure_with_tuple_paths_up_to
        results = [func(*args, **kwargs) for args in zip(flat_path_list,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:1213 <listcomp>
        results = [func(*args, **kwargs) for args in zip(flat_path_list,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:1116 <lambda>
        lambda _, *values: func(*values),  # Discards the path arg.
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:416 _get_metric_objects
        return [self._get_metric_object(m, y_t, y_p) for m in metrics]
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:416 <listcomp>
        return [self._get_metric_object(m, y_t, y_p) for m in metrics]
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:435 _get_metric_object
        metric_obj = metrics_mod.get(metric)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\metrics.py:3358 get
        return deserialize(str(identifier))
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\metrics.py:3345 deserialize
        return deserialize_keras_object(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\utils\generic_utils.py:392 deserialize_keras_object
        raise ValueError('Unknown ' + printable_module_name + ':' + object_name)

    ValueError: Unknown metric function:metrics.RootMeanSquaredError()
Traceback (most recent call last):
  File ".\_2_train.py", line 143, in train
    forecaster.fit(x_train, y_train, batch_size=batch_size, epochs=epochs, workers=workers)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 66, in _method_wrapper
    return method(self, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 785, in fit
    tmp_logs = train_function(iterator)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 580, in __call__
    result = self._call(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 627, in _call
    self._initialize(args, kwds, add_initializers_to=initializers)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 505, in _initialize
    self._stateful_fn._get_concrete_function_internal_garbage_collected(  # pylint: disable=protected-access
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2446, in _get_concrete_function_internal_garbage_collected
    graph_function, _, _ = self._maybe_define_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2777, in _maybe_define_function
    graph_function = self._create_graph_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2657, in _create_graph_function
    func_graph_module.func_graph_from_py_func(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 981, in func_graph_from_py_func
    func_outputs = python_func(*func_args, **func_kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 441, in wrapped_fn
    return weak_wrapped_fn().__wrapped__(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 968, in wrapper
    raise e.ag_error_metadata.to_exception(e)
ValueError: in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:477 train_step  **
        self.compiled_metrics.update_state(y, y_pred, sample_weight)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:386 update_state
        self._build(y_pred, y_true)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:316 _build
        self._metrics = nest.map_structure_up_to(y_pred, self._get_metric_objects,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:1114 map_structure_up_to
        return map_structure_with_tuple_paths_up_to(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:1213 map_structure_with_tuple_paths_up_to
        results = [func(*args, **kwargs) for args in zip(flat_path_list,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:1213 <listcomp>
        results = [func(*args, **kwargs) for args in zip(flat_path_list,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:1116 <lambda>
        lambda _, *values: func(*values),  # Discards the path arg.
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:416 _get_metric_objects
        return [self._get_metric_object(m, y_t, y_p) for m in metrics]
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:416 <listcomp>
        return [self._get_metric_object(m, y_t, y_p) for m in metrics]
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:435 _get_metric_object
        metric_obj = metrics_mod.get(metric)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\metrics.py:3358 get
        return deserialize(str(identifier))
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\metrics.py:3345 deserialize
        return deserialize_keras_object(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\utils\generic_utils.py:392 deserialize_keras_object
        raise ValueError('Unknown ' + printable_module_name + ':' + object_name)

    ValueError: Unknown metric function:metrics.RootMeanSquaredError()


16.Apr 2020 01:07:51 correct LSTM model creation and compilation

16.Apr 2020 01:08:27 model training error
in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:477 train_step  **
        self.compiled_metrics.update_state(y, y_pred, sample_weight)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:386 update_state
        self._build(y_pred, y_true)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:316 _build
        self._metrics = nest.map_structure_up_to(y_pred, self._get_metric_objects,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:1114 map_structure_up_to
        return map_structure_with_tuple_paths_up_to(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:1213 map_structure_with_tuple_paths_up_to
        results = [func(*args, **kwargs) for args in zip(flat_path_list,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:1213 <listcomp>
        results = [func(*args, **kwargs) for args in zip(flat_path_list,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:1116 <lambda>
        lambda _, *values: func(*values),  # Discards the path arg.
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:416 _get_metric_objects
        return [self._get_metric_object(m, y_t, y_p) for m in metrics]
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:416 <listcomp>
        return [self._get_metric_object(m, y_t, y_p) for m in metrics]
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:435 _get_metric_object
        metric_obj = metrics_mod.get(metric)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\metrics.py:3358 get
        return deserialize(str(identifier))
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\metrics.py:3345 deserialize
        return deserialize_keras_object(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\utils\generic_utils.py:392 deserialize_keras_object
        raise ValueError('Unknown ' + printable_module_name + ':' + object_name)

    ValueError: Unknown metric function:'metrics.RootMeanSquaredError()'
Traceback (most recent call last):
  File ".\_2_train.py", line 143, in train
    forecaster.fit(x_train, y_train, batch_size=batch_size, epochs=epochs, workers=workers)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 66, in _method_wrapper
    return method(self, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 785, in fit
    tmp_logs = train_function(iterator)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 580, in __call__
    result = self._call(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 627, in _call
    self._initialize(args, kwds, add_initializers_to=initializers)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 505, in _initialize
    self._stateful_fn._get_concrete_function_internal_garbage_collected(  # pylint: disable=protected-access
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2446, in _get_concrete_function_internal_garbage_collected
    graph_function, _, _ = self._maybe_define_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2777, in _maybe_define_function
    graph_function = self._create_graph_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2657, in _create_graph_function
    func_graph_module.func_graph_from_py_func(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 981, in func_graph_from_py_func
    func_outputs = python_func(*func_args, **func_kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 441, in wrapped_fn
    return weak_wrapped_fn().__wrapped__(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 968, in wrapper
    raise e.ag_error_metadata.to_exception(e)
ValueError: in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:477 train_step  **
        self.compiled_metrics.update_state(y, y_pred, sample_weight)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:386 update_state
        self._build(y_pred, y_true)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:316 _build
        self._metrics = nest.map_structure_up_to(y_pred, self._get_metric_objects,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:1114 map_structure_up_to
        return map_structure_with_tuple_paths_up_to(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:1213 map_structure_with_tuple_paths_up_to
        results = [func(*args, **kwargs) for args in zip(flat_path_list,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:1213 <listcomp>
        results = [func(*args, **kwargs) for args in zip(flat_path_list,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:1116 <lambda>
        lambda _, *values: func(*values),  # Discards the path arg.
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:416 _get_metric_objects
        return [self._get_metric_object(m, y_t, y_p) for m in metrics]
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:416 <listcomp>
        return [self._get_metric_object(m, y_t, y_p) for m in metrics]
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:435 _get_metric_object
        metric_obj = metrics_mod.get(metric)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\metrics.py:3358 get
        return deserialize(str(identifier))
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\metrics.py:3345 deserialize
        return deserialize_keras_object(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\utils\generic_utils.py:392 deserialize_keras_object
        raise ValueError('Unknown ' + printable_module_name + ':' + object_name)

    ValueError: Unknown metric function:'metrics.RootMeanSquaredError()'


16.Apr 2020 01:09:44 correct LSTM model creation and compilation

16.Apr 2020 01:10:21 model training error
in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:477 train_step  **
        self.compiled_metrics.update_state(y, y_pred, sample_weight)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:386 update_state
        self._build(y_pred, y_true)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:316 _build
        self._metrics = nest.map_structure_up_to(y_pred, self._get_metric_objects,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:1114 map_structure_up_to
        return map_structure_with_tuple_paths_up_to(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:1213 map_structure_with_tuple_paths_up_to
        results = [func(*args, **kwargs) for args in zip(flat_path_list,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:1213 <listcomp>
        results = [func(*args, **kwargs) for args in zip(flat_path_list,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:1116 <lambda>
        lambda _, *values: func(*values),  # Discards the path arg.
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:416 _get_metric_objects
        return [self._get_metric_object(m, y_t, y_p) for m in metrics]
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:416 <listcomp>
        return [self._get_metric_object(m, y_t, y_p) for m in metrics]
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:435 _get_metric_object
        metric_obj = metrics_mod.get(metric)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\metrics.py:3358 get
        return deserialize(str(identifier))
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\metrics.py:3345 deserialize
        return deserialize_keras_object(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\utils\generic_utils.py:392 deserialize_keras_object
        raise ValueError('Unknown ' + printable_module_name + ':' + object_name)

    ValueError: Unknown metric function:[metrics.RootMeanSquaredError()]
Traceback (most recent call last):
  File ".\_2_train.py", line 143, in train
    forecaster.fit(x_train, y_train, batch_size=batch_size, epochs=epochs, workers=workers)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 66, in _method_wrapper
    return method(self, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 785, in fit
    tmp_logs = train_function(iterator)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 580, in __call__
    result = self._call(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 627, in _call
    self._initialize(args, kwds, add_initializers_to=initializers)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 505, in _initialize
    self._stateful_fn._get_concrete_function_internal_garbage_collected(  # pylint: disable=protected-access
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2446, in _get_concrete_function_internal_garbage_collected
    graph_function, _, _ = self._maybe_define_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2777, in _maybe_define_function
    graph_function = self._create_graph_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2657, in _create_graph_function
    func_graph_module.func_graph_from_py_func(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 981, in func_graph_from_py_func
    func_outputs = python_func(*func_args, **func_kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 441, in wrapped_fn
    return weak_wrapped_fn().__wrapped__(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 968, in wrapper
    raise e.ag_error_metadata.to_exception(e)
ValueError: in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:477 train_step  **
        self.compiled_metrics.update_state(y, y_pred, sample_weight)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:386 update_state
        self._build(y_pred, y_true)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:316 _build
        self._metrics = nest.map_structure_up_to(y_pred, self._get_metric_objects,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:1114 map_structure_up_to
        return map_structure_with_tuple_paths_up_to(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:1213 map_structure_with_tuple_paths_up_to
        results = [func(*args, **kwargs) for args in zip(flat_path_list,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:1213 <listcomp>
        results = [func(*args, **kwargs) for args in zip(flat_path_list,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:1116 <lambda>
        lambda _, *values: func(*values),  # Discards the path arg.
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:416 _get_metric_objects
        return [self._get_metric_object(m, y_t, y_p) for m in metrics]
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:416 <listcomp>
        return [self._get_metric_object(m, y_t, y_p) for m in metrics]
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:435 _get_metric_object
        metric_obj = metrics_mod.get(metric)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\metrics.py:3358 get
        return deserialize(str(identifier))
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\metrics.py:3345 deserialize
        return deserialize_keras_object(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\utils\generic_utils.py:392 deserialize_keras_object
        raise ValueError('Unknown ' + printable_module_name + ':' + object_name)

    ValueError: Unknown metric function:[metrics.RootMeanSquaredError()]


16.Apr 2020 01:10:35 correct LSTM model creation and compilation

16.Apr 2020 01:16:17 correct model training, correct saving of model and weights

16.Apr 2020 01:19:24 correct LSTM model creation and compilation

16.Apr 2020 01:21:52 correct LSTM model creation and compilation

16.Apr 2020 01:22:26 model training error
'str' object has no attribute 'set_model'
Traceback (most recent call last):
  File ".\_2_train.py", line 143, in train
    forecaster.fit(x_train, y_train, batch_size=batch_size, epochs=epochs, workers=workers,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 66, in _method_wrapper
    return method(self, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 756, in fit
    callbacks = callbacks_module.CallbackList(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\callbacks.py", line 219, in __init__
    self.set_model(model)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\callbacks.py", line 281, in set_model
    callback.set_model(model)
AttributeError: 'str' object has no attribute 'set_model'

16.Apr 2020 01:28:49 correct LSTM model creation and compilation

16.Apr 2020 01:49:06 LSTM model creation or compile error
name 'custom_loss' is not defined
Traceback (most recent call last):
  File ".\_2_train.py", line 89, in <module>
    loss=custom_loss(),
NameError: name 'custom_loss' is not defined

16.Apr 2020 01:49:38 model training error
You must compile your model before training/testing. Use `model.compile(optimizer, loss)`.
Traceback (most recent call last):
  File ".\_2_train.py", line 153, in train
    forecaster.fit(x_train, y_train, batch_size=batch_size, epochs=epochs, workers=workers,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 66, in _method_wrapper
    return method(self, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 725, in fit
    self._assert_compile_was_called()
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 1572, in _assert_compile_was_called
    raise RuntimeError('You must compile your model before '
RuntimeError: You must compile your model before training/testing. Use `model.compile(optimizer, loss)`.

16.Apr 2020 02:03:54 model training error
'losses.mean_squared_error()'
Traceback (most recent call last):
  File ".\_2_train.py", line 99, in train
    custom_losses = custom_loss()
  File ".\_2_train.py", line 62, in custom_loss
    loss1 = locals()[model_hyperparameters['loss1']]()
KeyError: 'losses.mean_squared_error()'

16.Apr 2020 02:05:19 model training error
'losses.MeanSquaredError()'
Traceback (most recent call last):
  File ".\_2_train.py", line 99, in train
    custom_losses = custom_loss()
  File ".\_2_train.py", line 62, in custom_loss
    loss1 = locals()[model_hyperparameters['loss1']]()
KeyError: 'losses.MeanSquaredError()'

16.Apr 2020 02:13:43 model training error
"model_hyperparameters['loss1']"
Traceback (most recent call last):
  File ".\_2_train.py", line 99, in train
    custom_losses = custom_loss()
  File ".\_2_train.py", line 62, in custom_loss
    loss1 = locals()["model_hyperparameters['loss1']"]()
KeyError: "model_hyperparameters['loss1']"

16.Apr 2020 02:15:23 model training error
"model_hyperparameters['loss1']"
Traceback (most recent call last):
  File ".\_2_train.py", line 99, in train
    custom_losses = custom_loss()
  File ".\_2_train.py", line 62, in custom_loss
    loss1 = globals()["model_hyperparameters['loss1']"]()
KeyError: "model_hyperparameters['loss1']"

16.Apr 2020 02:16:47 model training error
'losses.MeanSquaredError()'
Traceback (most recent call last):
  File ".\_2_train.py", line 99, in train
    custom_losses = custom_loss()
  File ".\_2_train.py", line 62, in custom_loss
    loss1 = globals()[model_hyperparameters['loss1']]()
KeyError: 'losses.MeanSquaredError()'

16.Apr 2020 02:20:55 model training error
'losses.MeanSquaredError()'
Traceback (most recent call last):
  File ".\_2_train.py", line 99, in train
    custom_losses = custom_loss()
  File ".\_2_train.py", line 62, in custom_loss
    loss1 = globals()[model_hyperparameters['loss1']]()
KeyError: 'losses.MeanSquaredError()'

16.Apr 2020 02:22:08 model training error
'losses.MeanSquaredError()'
Traceback (most recent call last):
  File ".\_2_train.py", line 99, in train
    custom_losses = custom_loss()
  File ".\_2_train.py", line 62, in custom_loss
    loss1 = locals()[model_hyperparameters['loss1']]()
KeyError: 'losses.MeanSquaredError()'

16.Apr 2020 02:25:31 model training error
unsupported operand type(s) for *: 'MeanSquaredError' and 'MeanAbsolutePercentageError'
Traceback (most recent call last):
  File ".\_2_train.py", line 99, in train
    custom_losses = custom_loss()
  File ".\_2_train.py", line 65, in custom_loss
    return loss1 * loss2 * loss3
TypeError: unsupported operand type(s) for *: 'MeanSquaredError' and 'MeanAbsolutePercentageError'

16.Apr 2020 02:29:00 model training error
unsupported operand type(s) for *: 'MeanSquaredError' and 'MeanAbsolutePercentageError'
Traceback (most recent call last):
  File ".\_2_train.py", line 99, in train
    custom_losses = custom_loss()
  File ".\_2_train.py", line 65, in custom_loss
    return tf.keras.losses.Loss(loss1 * loss2 * loss3)
TypeError: unsupported operand type(s) for *: 'MeanSquaredError' and 'MeanAbsolutePercentageError'

16.Apr 2020 02:33:59 correct LSTM model creation and compilation

16.Apr 2020 02:34:00 model training error
in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:466 train_step  **
        loss = self.compiled_loss(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:187 __call__
        self._build(y_pred)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:140 _build
        self._losses = nest.map_structure(self._get_loss_object, self._losses)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:617 map_structure
        structure[0], [func(*x) for x in entries],
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:617 <listcomp>
        structure[0], [func(*x) for x in entries],
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:259 _get_loss_object
        loss = losses_mod.get(loss)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\losses.py:1857 get
        return deserialize(identifier)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\losses.py:1831 deserialize
        return deserialize_keras_object(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\utils\generic_utils.py:392 deserialize_keras_object
        raise ValueError('Unknown ' + printable_module_name + ':' + object_name)

    ValueError: Unknown loss function:MeanSquaredError()
Traceback (most recent call last):
  File ".\_2_train.py", line 157, in train
    forecaster.fit(x_train, y_train, batch_size=batch_size, epochs=epochs, workers=workers,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 66, in _method_wrapper
    return method(self, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 785, in fit
    tmp_logs = train_function(iterator)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 580, in __call__
    result = self._call(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 627, in _call
    self._initialize(args, kwds, add_initializers_to=initializers)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 505, in _initialize
    self._stateful_fn._get_concrete_function_internal_garbage_collected(  # pylint: disable=protected-access
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2446, in _get_concrete_function_internal_garbage_collected
    graph_function, _, _ = self._maybe_define_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2777, in _maybe_define_function
    graph_function = self._create_graph_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2657, in _create_graph_function
    func_graph_module.func_graph_from_py_func(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 981, in func_graph_from_py_func
    func_outputs = python_func(*func_args, **func_kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 441, in wrapped_fn
    return weak_wrapped_fn().__wrapped__(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 968, in wrapper
    raise e.ag_error_metadata.to_exception(e)
ValueError: in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:466 train_step  **
        loss = self.compiled_loss(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:187 __call__
        self._build(y_pred)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:140 _build
        self._losses = nest.map_structure(self._get_loss_object, self._losses)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:617 map_structure
        structure[0], [func(*x) for x in entries],
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:617 <listcomp>
        structure[0], [func(*x) for x in entries],
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:259 _get_loss_object
        loss = losses_mod.get(loss)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\losses.py:1857 get
        return deserialize(identifier)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\losses.py:1831 deserialize
        return deserialize_keras_object(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\utils\generic_utils.py:392 deserialize_keras_object
        raise ValueError('Unknown ' + printable_module_name + ':' + object_name)

    ValueError: Unknown loss function:MeanSquaredError()


16.Apr 2020 02:56:59 LSTM model creation or compile error
can't multiply sequence by non-int of type 'str'
Traceback (most recent call last):
  File ".\_2_train.py", line 125, in train
    loss=custom_losses(loss1, loss2, loss3),
  File ".\_2_train.py", line 63, in loss_multiply
    return local_loss1 * local_loss2 * local_loss3
TypeError: can't multiply sequence by non-int of type 'str'

16.Apr 2020 02:56:59 model training error
'NoneType' object has no attribute 'fit'
Traceback (most recent call last):
  File ".\_2_train.py", line 160, in train
    forecaster.fit(x_train, y_train, batch_size=batch_size, epochs=epochs, workers=workers,
AttributeError: 'NoneType' object has no attribute 'fit'

16.Apr 2020 02:59:30 correct LSTM model creation and compilation

16.Apr 2020 02:59:31 model training error
in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:466 train_step  **
        loss = self.compiled_loss(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:187 __call__
        self._build(y_pred)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:140 _build
        self._losses = nest.map_structure(self._get_loss_object, self._losses)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:617 map_structure
        structure[0], [func(*x) for x in entries],
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:617 <listcomp>
        structure[0], [func(*x) for x in entries],
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:259 _get_loss_object
        loss = losses_mod.get(loss)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\losses.py:1857 get
        return deserialize(identifier)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\losses.py:1831 deserialize
        return deserialize_keras_object(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\utils\generic_utils.py:392 deserialize_keras_object
        raise ValueError('Unknown ' + printable_module_name + ':' + object_name)

    ValueError: Unknown loss function:losses.MeanSquaredError()
Traceback (most recent call last):
  File ".\_2_train.py", line 147, in train
    forecaster.fit(x_train, y_train, batch_size=batch_size, epochs=epochs, workers=workers,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 66, in _method_wrapper
    return method(self, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 785, in fit
    tmp_logs = train_function(iterator)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 580, in __call__
    result = self._call(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 627, in _call
    self._initialize(args, kwds, add_initializers_to=initializers)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 505, in _initialize
    self._stateful_fn._get_concrete_function_internal_garbage_collected(  # pylint: disable=protected-access
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2446, in _get_concrete_function_internal_garbage_collected
    graph_function, _, _ = self._maybe_define_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2777, in _maybe_define_function
    graph_function = self._create_graph_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2657, in _create_graph_function
    func_graph_module.func_graph_from_py_func(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 981, in func_graph_from_py_func
    func_outputs = python_func(*func_args, **func_kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 441, in wrapped_fn
    return weak_wrapped_fn().__wrapped__(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 968, in wrapper
    raise e.ag_error_metadata.to_exception(e)
ValueError: in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:466 train_step  **
        loss = self.compiled_loss(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:187 __call__
        self._build(y_pred)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:140 _build
        self._losses = nest.map_structure(self._get_loss_object, self._losses)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:617 map_structure
        structure[0], [func(*x) for x in entries],
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:617 <listcomp>
        structure[0], [func(*x) for x in entries],
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:259 _get_loss_object
        loss = losses_mod.get(loss)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\losses.py:1857 get
        return deserialize(identifier)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\losses.py:1831 deserialize
        return deserialize_keras_object(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\utils\generic_utils.py:392 deserialize_keras_object
        raise ValueError('Unknown ' + printable_module_name + ':' + object_name)

    ValueError: Unknown loss function:losses.MeanSquaredError()


16.Apr 2020 03:02:12 correct LSTM model creation and compilation

16.Apr 2020 03:02:13 model training error
in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:466 train_step  **
        loss = self.compiled_loss(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:187 __call__
        self._build(y_pred)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:140 _build
        self._losses = nest.map_structure(self._get_loss_object, self._losses)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:617 map_structure
        structure[0], [func(*x) for x in entries],
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:617 <listcomp>
        structure[0], [func(*x) for x in entries],
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:259 _get_loss_object
        loss = losses_mod.get(loss)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\losses.py:1857 get
        return deserialize(identifier)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\losses.py:1831 deserialize
        return deserialize_keras_object(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\utils\generic_utils.py:392 deserialize_keras_object
        raise ValueError('Unknown ' + printable_module_name + ':' + object_name)

    ValueError: Unknown loss function:MeanSquaredError()
Traceback (most recent call last):
  File ".\_2_train.py", line 147, in train
    forecaster.fit(x_train, y_train, batch_size=batch_size, epochs=epochs, workers=workers,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 66, in _method_wrapper
    return method(self, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 785, in fit
    tmp_logs = train_function(iterator)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 580, in __call__
    result = self._call(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 627, in _call
    self._initialize(args, kwds, add_initializers_to=initializers)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 505, in _initialize
    self._stateful_fn._get_concrete_function_internal_garbage_collected(  # pylint: disable=protected-access
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2446, in _get_concrete_function_internal_garbage_collected
    graph_function, _, _ = self._maybe_define_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2777, in _maybe_define_function
    graph_function = self._create_graph_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2657, in _create_graph_function
    func_graph_module.func_graph_from_py_func(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 981, in func_graph_from_py_func
    func_outputs = python_func(*func_args, **func_kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 441, in wrapped_fn
    return weak_wrapped_fn().__wrapped__(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 968, in wrapper
    raise e.ag_error_metadata.to_exception(e)
ValueError: in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:466 train_step  **
        loss = self.compiled_loss(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:187 __call__
        self._build(y_pred)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:140 _build
        self._losses = nest.map_structure(self._get_loss_object, self._losses)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:617 map_structure
        structure[0], [func(*x) for x in entries],
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:617 <listcomp>
        structure[0], [func(*x) for x in entries],
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:259 _get_loss_object
        loss = losses_mod.get(loss)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\losses.py:1857 get
        return deserialize(identifier)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\losses.py:1831 deserialize
        return deserialize_keras_object(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\utils\generic_utils.py:392 deserialize_keras_object
        raise ValueError('Unknown ' + printable_module_name + ':' + object_name)

    ValueError: Unknown loss function:MeanSquaredError()


16.Apr 2020 03:21:04 correct LSTM model creation and compilation

16.Apr 2020 03:21:06 model training error
in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:466 train_step  **
        loss = self.compiled_loss(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:187 __call__
        self._build(y_pred)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:140 _build
        self._losses = nest.map_structure(self._get_loss_object, self._losses)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:617 map_structure
        structure[0], [func(*x) for x in entries],
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:617 <listcomp>
        structure[0], [func(*x) for x in entries],
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:259 _get_loss_object
        loss = losses_mod.get(loss)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\losses.py:1857 get
        return deserialize(identifier)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\losses.py:1831 deserialize
        return deserialize_keras_object(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\utils\generic_utils.py:392 deserialize_keras_object
        raise ValueError('Unknown ' + printable_module_name + ':' + object_name)

    ValueError: Unknown loss function:MeanSquaredError(),MeanAbsolutePercentageError(),MeanAbsoluteError()
Traceback (most recent call last):
  File ".\_2_train.py", line 147, in train
    forecaster.fit(x_train, y_train, batch_size=batch_size, epochs=epochs, workers=workers,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 66, in _method_wrapper
    return method(self, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 785, in fit
    tmp_logs = train_function(iterator)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 580, in __call__
    result = self._call(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 627, in _call
    self._initialize(args, kwds, add_initializers_to=initializers)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 505, in _initialize
    self._stateful_fn._get_concrete_function_internal_garbage_collected(  # pylint: disable=protected-access
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2446, in _get_concrete_function_internal_garbage_collected
    graph_function, _, _ = self._maybe_define_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2777, in _maybe_define_function
    graph_function = self._create_graph_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2657, in _create_graph_function
    func_graph_module.func_graph_from_py_func(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 981, in func_graph_from_py_func
    func_outputs = python_func(*func_args, **func_kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 441, in wrapped_fn
    return weak_wrapped_fn().__wrapped__(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 968, in wrapper
    raise e.ag_error_metadata.to_exception(e)
ValueError: in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:466 train_step  **
        loss = self.compiled_loss(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:187 __call__
        self._build(y_pred)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:140 _build
        self._losses = nest.map_structure(self._get_loss_object, self._losses)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:617 map_structure
        structure[0], [func(*x) for x in entries],
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:617 <listcomp>
        structure[0], [func(*x) for x in entries],
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:259 _get_loss_object
        loss = losses_mod.get(loss)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\losses.py:1857 get
        return deserialize(identifier)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\losses.py:1831 deserialize
        return deserialize_keras_object(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\utils\generic_utils.py:392 deserialize_keras_object
        raise ValueError('Unknown ' + printable_module_name + ':' + object_name)

    ValueError: Unknown loss function:MeanSquaredError(),MeanAbsolutePercentageError(),MeanAbsoluteError()


16.Apr 2020 03:31:14 correct LSTM model creation and compilation

16.Apr 2020 03:31:15 model training error
in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:466 train_step  **
        loss = self.compiled_loss(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:187 __call__
        self._build(y_pred)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:140 _build
        self._losses = nest.map_structure(self._get_loss_object, self._losses)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:617 map_structure
        structure[0], [func(*x) for x in entries],
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:617 <listcomp>
        structure[0], [func(*x) for x in entries],
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:259 _get_loss_object
        loss = losses_mod.get(loss)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\losses.py:1857 get
        return deserialize(identifier)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\losses.py:1831 deserialize
        return deserialize_keras_object(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\utils\generic_utils.py:392 deserialize_keras_object
        raise ValueError('Unknown ' + printable_module_name + ':' + object_name)

    ValueError: Unknown loss function:MeanSquaredError(),MeanAbsolutePercentageError(),MeanAbsoluteError()
Traceback (most recent call last):
  File ".\_2_train.py", line 147, in train
    forecaster.fit(x_train, y_train, batch_size=batch_size, epochs=epochs, workers=workers,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 66, in _method_wrapper
    return method(self, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 785, in fit
    tmp_logs = train_function(iterator)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 580, in __call__
    result = self._call(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 627, in _call
    self._initialize(args, kwds, add_initializers_to=initializers)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 505, in _initialize
    self._stateful_fn._get_concrete_function_internal_garbage_collected(  # pylint: disable=protected-access
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2446, in _get_concrete_function_internal_garbage_collected
    graph_function, _, _ = self._maybe_define_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2777, in _maybe_define_function
    graph_function = self._create_graph_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2657, in _create_graph_function
    func_graph_module.func_graph_from_py_func(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 981, in func_graph_from_py_func
    func_outputs = python_func(*func_args, **func_kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 441, in wrapped_fn
    return weak_wrapped_fn().__wrapped__(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 968, in wrapper
    raise e.ag_error_metadata.to_exception(e)
ValueError: in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:466 train_step  **
        loss = self.compiled_loss(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:187 __call__
        self._build(y_pred)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:140 _build
        self._losses = nest.map_structure(self._get_loss_object, self._losses)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:617 map_structure
        structure[0], [func(*x) for x in entries],
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:617 <listcomp>
        structure[0], [func(*x) for x in entries],
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:259 _get_loss_object
        loss = losses_mod.get(loss)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\losses.py:1857 get
        return deserialize(identifier)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\losses.py:1831 deserialize
        return deserialize_keras_object(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\utils\generic_utils.py:392 deserialize_keras_object
        raise ValueError('Unknown ' + printable_module_name + ':' + object_name)

    ValueError: Unknown loss function:MeanSquaredError(),MeanAbsolutePercentageError(),MeanAbsoluteError()


16.Apr 2020 03:33:16 correct LSTM model creation and compilation

16.Apr 2020 03:33:18 model training error
in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:466 train_step  **
        loss = self.compiled_loss(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:187 __call__
        self._build(y_pred)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:140 _build
        self._losses = nest.map_structure(self._get_loss_object, self._losses)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:617 map_structure
        structure[0], [func(*x) for x in entries],
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:617 <listcomp>
        structure[0], [func(*x) for x in entries],
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:261 _get_loss_object
        loss_name = loss.__name__

    AttributeError: 'MeanAbsoluteError' object has no attribute '__name__'
Traceback (most recent call last):
  File ".\_2_train.py", line 147, in train
    forecaster.fit(x_train, y_train, batch_size=batch_size, epochs=epochs, workers=workers,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 66, in _method_wrapper
    return method(self, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 785, in fit
    tmp_logs = train_function(iterator)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 580, in __call__
    result = self._call(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 627, in _call
    self._initialize(args, kwds, add_initializers_to=initializers)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 505, in _initialize
    self._stateful_fn._get_concrete_function_internal_garbage_collected(  # pylint: disable=protected-access
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2446, in _get_concrete_function_internal_garbage_collected
    graph_function, _, _ = self._maybe_define_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2777, in _maybe_define_function
    graph_function = self._create_graph_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2657, in _create_graph_function
    func_graph_module.func_graph_from_py_func(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 981, in func_graph_from_py_func
    func_outputs = python_func(*func_args, **func_kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 441, in wrapped_fn
    return weak_wrapped_fn().__wrapped__(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 968, in wrapper
    raise e.ag_error_metadata.to_exception(e)
AttributeError: in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:466 train_step  **
        loss = self.compiled_loss(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:187 __call__
        self._build(y_pred)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:140 _build
        self._losses = nest.map_structure(self._get_loss_object, self._losses)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:617 map_structure
        structure[0], [func(*x) for x in entries],
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:617 <listcomp>
        structure[0], [func(*x) for x in entries],
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:261 _get_loss_object
        loss_name = loss.__name__

    AttributeError: 'MeanAbsoluteError' object has no attribute '__name__'


16.Apr 2020 03:36:26 correct LSTM model creation and compilation

16.Apr 2020 03:36:27 model training error
in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:466 train_step  **
        loss = self.compiled_loss(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:187 __call__
        self._build(y_pred)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:140 _build
        self._losses = nest.map_structure(self._get_loss_object, self._losses)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:617 map_structure
        structure[0], [func(*x) for x in entries],
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:617 <listcomp>
        structure[0], [func(*x) for x in entries],
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:261 _get_loss_object
        loss_name = loss.__name__

    AttributeError: 'MeanAbsoluteError' object has no attribute '__name__'
Traceback (most recent call last):
  File ".\_2_train.py", line 147, in train
    forecaster.fit(x_train, y_train, batch_size=batch_size, epochs=epochs, workers=workers,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 66, in _method_wrapper
    return method(self, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 785, in fit
    tmp_logs = train_function(iterator)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 580, in __call__
    result = self._call(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 627, in _call
    self._initialize(args, kwds, add_initializers_to=initializers)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 505, in _initialize
    self._stateful_fn._get_concrete_function_internal_garbage_collected(  # pylint: disable=protected-access
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2446, in _get_concrete_function_internal_garbage_collected
    graph_function, _, _ = self._maybe_define_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2777, in _maybe_define_function
    graph_function = self._create_graph_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2657, in _create_graph_function
    func_graph_module.func_graph_from_py_func(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 981, in func_graph_from_py_func
    func_outputs = python_func(*func_args, **func_kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 441, in wrapped_fn
    return weak_wrapped_fn().__wrapped__(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 968, in wrapper
    raise e.ag_error_metadata.to_exception(e)
AttributeError: in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:466 train_step  **
        loss = self.compiled_loss(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:187 __call__
        self._build(y_pred)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:140 _build
        self._losses = nest.map_structure(self._get_loss_object, self._losses)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:617 map_structure
        structure[0], [func(*x) for x in entries],
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:617 <listcomp>
        structure[0], [func(*x) for x in entries],
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:261 _get_loss_object
        loss_name = loss.__name__

    AttributeError: 'MeanAbsoluteError' object has no attribute '__name__'


16.Apr 2020 03:40:23 correct LSTM model creation and compilation

16.Apr 2020 03:40:24 model training error
in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:466 train_step  **
        loss = self.compiled_loss(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:187 __call__
        self._build(y_pred)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:140 _build
        self._losses = nest.map_structure(self._get_loss_object, self._losses)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:617 map_structure
        structure[0], [func(*x) for x in entries],
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:617 <listcomp>
        structure[0], [func(*x) for x in entries],
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:261 _get_loss_object
        loss_name = loss.__name__

    AttributeError: 'MeanAbsoluteError' object has no attribute '__name__'
Traceback (most recent call last):
  File ".\_2_train.py", line 145, in train
    forecaster.fit(x_train, y_train, batch_size=batch_size, epochs=epochs, workers=workers,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 66, in _method_wrapper
    return method(self, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 785, in fit
    tmp_logs = train_function(iterator)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 580, in __call__
    result = self._call(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 627, in _call
    self._initialize(args, kwds, add_initializers_to=initializers)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 505, in _initialize
    self._stateful_fn._get_concrete_function_internal_garbage_collected(  # pylint: disable=protected-access
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2446, in _get_concrete_function_internal_garbage_collected
    graph_function, _, _ = self._maybe_define_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2777, in _maybe_define_function
    graph_function = self._create_graph_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2657, in _create_graph_function
    func_graph_module.func_graph_from_py_func(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 981, in func_graph_from_py_func
    func_outputs = python_func(*func_args, **func_kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 441, in wrapped_fn
    return weak_wrapped_fn().__wrapped__(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 968, in wrapper
    raise e.ag_error_metadata.to_exception(e)
AttributeError: in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:466 train_step  **
        loss = self.compiled_loss(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:187 __call__
        self._build(y_pred)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:140 _build
        self._losses = nest.map_structure(self._get_loss_object, self._losses)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:617 map_structure
        structure[0], [func(*x) for x in entries],
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:617 <listcomp>
        structure[0], [func(*x) for x in entries],
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:261 _get_loss_object
        loss_name = loss.__name__

    AttributeError: 'MeanAbsoluteError' object has no attribute '__name__'


16.Apr 2020 03:42:46 correct LSTM model creation and compilation

16.Apr 2020 03:42:47 model training error
in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:466 train_step  **
        loss = self.compiled_loss(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:187 __call__
        self._build(y_pred)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:140 _build
        self._losses = nest.map_structure(self._get_loss_object, self._losses)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:617 map_structure
        structure[0], [func(*x) for x in entries],
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:617 <listcomp>
        structure[0], [func(*x) for x in entries],
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:261 _get_loss_object
        loss_name = loss.__name__

    AttributeError: 'MeanAbsoluteError' object has no attribute '__name__'
Traceback (most recent call last):
  File ".\_2_train.py", line 145, in train
    forecaster.fit(x_train, y_train, batch_size=batch_size, epochs=epochs, workers=workers)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 66, in _method_wrapper
    return method(self, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 785, in fit
    tmp_logs = train_function(iterator)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 580, in __call__
    result = self._call(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 627, in _call
    self._initialize(args, kwds, add_initializers_to=initializers)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 505, in _initialize
    self._stateful_fn._get_concrete_function_internal_garbage_collected(  # pylint: disable=protected-access
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2446, in _get_concrete_function_internal_garbage_collected
    graph_function, _, _ = self._maybe_define_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2777, in _maybe_define_function
    graph_function = self._create_graph_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2657, in _create_graph_function
    func_graph_module.func_graph_from_py_func(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 981, in func_graph_from_py_func
    func_outputs = python_func(*func_args, **func_kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 441, in wrapped_fn
    return weak_wrapped_fn().__wrapped__(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 968, in wrapper
    raise e.ag_error_metadata.to_exception(e)
AttributeError: in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:466 train_step  **
        loss = self.compiled_loss(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:187 __call__
        self._build(y_pred)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:140 _build
        self._losses = nest.map_structure(self._get_loss_object, self._losses)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:617 map_structure
        structure[0], [func(*x) for x in entries],
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:617 <listcomp>
        structure[0], [func(*x) for x in entries],
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:261 _get_loss_object
        loss_name = loss.__name__

    AttributeError: 'MeanAbsoluteError' object has no attribute '__name__'


16.Apr 2020 10:45:41 correct LSTM model creation and compilation

16.Apr 2020 10:45:42 model training error
in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:466 train_step  **
        loss = self.compiled_loss(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:187 __call__
        self._build(y_pred)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:140 _build
        self._losses = nest.map_structure(self._get_loss_object, self._losses)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:617 map_structure
        structure[0], [func(*x) for x in entries],
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:617 <listcomp>
        structure[0], [func(*x) for x in entries],
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:261 _get_loss_object
        loss_name = loss.__name__

    AttributeError: 'MeanAbsoluteError' object has no attribute '__name__'
Traceback (most recent call last):
  File ".\_2_train.py", line 145, in train
    forecaster.fit(x_train, y_train, batch_size=batch_size, epochs=epochs, workers=workers,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 66, in _method_wrapper
    return method(self, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 785, in fit
    tmp_logs = train_function(iterator)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 580, in __call__
    result = self._call(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 627, in _call
    self._initialize(args, kwds, add_initializers_to=initializers)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 505, in _initialize
    self._stateful_fn._get_concrete_function_internal_garbage_collected(  # pylint: disable=protected-access
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2446, in _get_concrete_function_internal_garbage_collected
    graph_function, _, _ = self._maybe_define_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2777, in _maybe_define_function
    graph_function = self._create_graph_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2657, in _create_graph_function
    func_graph_module.func_graph_from_py_func(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 981, in func_graph_from_py_func
    func_outputs = python_func(*func_args, **func_kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 441, in wrapped_fn
    return weak_wrapped_fn().__wrapped__(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 968, in wrapper
    raise e.ag_error_metadata.to_exception(e)
AttributeError: in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:466 train_step  **
        loss = self.compiled_loss(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:187 __call__
        self._build(y_pred)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:140 _build
        self._losses = nest.map_structure(self._get_loss_object, self._losses)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:617 map_structure
        structure[0], [func(*x) for x in entries],
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:617 <listcomp>
        structure[0], [func(*x) for x in entries],
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:261 _get_loss_object
        loss_name = loss.__name__

    AttributeError: 'MeanAbsoluteError' object has no attribute '__name__'


16.Apr 2020 11:05:15 correct LSTM model creation and compilation

16.Apr 2020 11:10:04 correct model training, correct saving of model and weights

16.Apr 2020 11:25:43 correct LSTM model creation and compilation

16.Apr 2020 11:30:35 correct model training, correct saving of model and weights

16.Apr 2020 12:39:45 LSTM model creation or compile error
Unknown optimizer: tf.keras.optimizers.Adam(learning_rate=0.00001)
Traceback (most recent call last):
  File ".\_2_train.py", line 111, in train
    forecaster.compile(optimizer=model_hyperparameters['optimizer'],
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 328, in compile
    self.optimizer = self._get_optimizer(optimizer)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 350, in _get_optimizer
    return nest.map_structure(_get_single_optimizer, optimizer)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py", line 617, in map_structure
    structure[0], [func(*x) for x in entries],
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py", line 617, in <listcomp>
    structure[0], [func(*x) for x in entries],
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 344, in _get_single_optimizer
    opt = optimizers.get(opt)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\optimizers.py", line 859, in get
    return deserialize(config)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\optimizers.py", line 824, in deserialize
    return deserialize_keras_object(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\utils\generic_utils.py", line 361, in deserialize_keras_object
    (cls, cls_config) = class_and_config_for_serialized_keras_object(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\utils\generic_utils.py", line 321, in class_and_config_for_serialized_keras_object
    raise ValueError('Unknown ' + printable_module_name + ': ' + class_name)
ValueError: Unknown optimizer: tf.keras.optimizers.Adam(learning_rate=0.00001)

16.Apr 2020 12:39:45 model training error
'NoneType' object has no attribute 'fit'
Traceback (most recent call last):
  File ".\_2_train.py", line 147, in train
    forecaster.fit(x_train, y_train, batch_size=batch_size, epochs=epochs, workers=workers,
AttributeError: 'NoneType' object has no attribute 'fit'

16.Apr 2020 12:41:27 LSTM model creation or compile error
Unknown optimizer: tf.keras.optimizers.Adam(learning_rate=0.00001)
Traceback (most recent call last):
  File ".\_2_train.py", line 112, in train
    forecaster.compile(optimizer=[model_hyperparameters['optimizer']],
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 328, in compile
    self.optimizer = self._get_optimizer(optimizer)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 350, in _get_optimizer
    return nest.map_structure(_get_single_optimizer, optimizer)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py", line 617, in map_structure
    structure[0], [func(*x) for x in entries],
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py", line 617, in <listcomp>
    structure[0], [func(*x) for x in entries],
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 344, in _get_single_optimizer
    opt = optimizers.get(opt)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\optimizers.py", line 859, in get
    return deserialize(config)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\optimizers.py", line 824, in deserialize
    return deserialize_keras_object(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\utils\generic_utils.py", line 361, in deserialize_keras_object
    (cls, cls_config) = class_and_config_for_serialized_keras_object(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\utils\generic_utils.py", line 321, in class_and_config_for_serialized_keras_object
    raise ValueError('Unknown ' + printable_module_name + ': ' + class_name)
ValueError: Unknown optimizer: tf.keras.optimizers.Adam(learning_rate=0.00001)

16.Apr 2020 12:41:27 model training error
'NoneType' object has no attribute 'fit'
Traceback (most recent call last):
  File ".\_2_train.py", line 148, in train
    forecaster.fit(x_train, y_train, batch_size=batch_size, epochs=epochs, workers=workers,
AttributeError: 'NoneType' object has no attribute 'fit'

16.Apr 2020 12:47:24 LSTM model creation or compile error
Unknown optimizer: optimizers.Adam(learning_rate=0.00001)
Traceback (most recent call last):
  File ".\_2_train.py", line 112, in train
    forecaster.compile(optimizer=[model_hyperparameters['optimizer']],
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 328, in compile
    self.optimizer = self._get_optimizer(optimizer)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 350, in _get_optimizer
    return nest.map_structure(_get_single_optimizer, optimizer)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py", line 617, in map_structure
    structure[0], [func(*x) for x in entries],
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py", line 617, in <listcomp>
    structure[0], [func(*x) for x in entries],
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 344, in _get_single_optimizer
    opt = optimizers.get(opt)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\optimizers.py", line 859, in get
    return deserialize(config)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\optimizers.py", line 824, in deserialize
    return deserialize_keras_object(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\utils\generic_utils.py", line 361, in deserialize_keras_object
    (cls, cls_config) = class_and_config_for_serialized_keras_object(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\utils\generic_utils.py", line 321, in class_and_config_for_serialized_keras_object
    raise ValueError('Unknown ' + printable_module_name + ': ' + class_name)
ValueError: Unknown optimizer: optimizers.Adam(learning_rate=0.00001)

16.Apr 2020 12:47:24 model training error
'NoneType' object has no attribute 'fit'
Traceback (most recent call last):
  File ".\_2_train.py", line 148, in train
    forecaster.fit(x_train, y_train, batch_size=batch_size, epochs=epochs, workers=workers,
AttributeError: 'NoneType' object has no attribute 'fit'

16.Apr 2020 12:51:12 LSTM model creation or compile error
Unknown optimizer: optimizers.Adam(learning_rate=0.00001)
Traceback (most recent call last):
  File ".\_2_train.py", line 112, in train
    forecaster.compile(optimizer=model_hyperparameters['optimizer'],
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 328, in compile
    self.optimizer = self._get_optimizer(optimizer)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 350, in _get_optimizer
    return nest.map_structure(_get_single_optimizer, optimizer)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py", line 617, in map_structure
    structure[0], [func(*x) for x in entries],
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py", line 617, in <listcomp>
    structure[0], [func(*x) for x in entries],
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 344, in _get_single_optimizer
    opt = optimizers.get(opt)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\optimizers.py", line 859, in get
    return deserialize(config)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\optimizers.py", line 824, in deserialize
    return deserialize_keras_object(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\utils\generic_utils.py", line 361, in deserialize_keras_object
    (cls, cls_config) = class_and_config_for_serialized_keras_object(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\utils\generic_utils.py", line 321, in class_and_config_for_serialized_keras_object
    raise ValueError('Unknown ' + printable_module_name + ': ' + class_name)
ValueError: Unknown optimizer: optimizers.Adam(learning_rate=0.00001)

16.Apr 2020 12:51:12 model training error
'NoneType' object has no attribute 'fit'
Traceback (most recent call last):
  File ".\_2_train.py", line 148, in train
    forecaster.fit(x_train, y_train, batch_size=batch_size, epochs=epochs, workers=workers,
AttributeError: 'NoneType' object has no attribute 'fit'

16.Apr 2020 12:53:12 correct LSTM model creation and compilation

16.Apr 2020 12:57:54 correct model training, correct saving of model and weights

16.Apr 2020 13:34:06 correct LSTM model creation and compilation

16.Apr 2020 13:38:49 correct model training, correct saving of model and weights

16.Apr 2020 13:44:13 correct LSTM model creation and compilation

16.Apr 2020 13:48:51 correct model training, correct saving of model and weights

16.Apr 2020 16:08:20 model training error
'optimizers'
Traceback (most recent call last):
  File ".\_2_train.py", line 88, in train
    optimizer_function = model_hyperparameters['optimizers']
KeyError: 'optimizers'

16.Apr 2020 16:10:07 LSTM model creation or compile error
Unknown optimizer: optimizers.Adam(learning_rate=0.0015)
Traceback (most recent call last):
  File ".\_2_train.py", line 118, in train
    forecaster.compile(optimizer=optimizer_function,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 328, in compile
    self.optimizer = self._get_optimizer(optimizer)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 350, in _get_optimizer
    return nest.map_structure(_get_single_optimizer, optimizer)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py", line 617, in map_structure
    structure[0], [func(*x) for x in entries],
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py", line 617, in <listcomp>
    structure[0], [func(*x) for x in entries],
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 344, in _get_single_optimizer
    opt = optimizers.get(opt)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\optimizers.py", line 859, in get
    return deserialize(config)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\optimizers.py", line 824, in deserialize
    return deserialize_keras_object(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\utils\generic_utils.py", line 361, in deserialize_keras_object
    (cls, cls_config) = class_and_config_for_serialized_keras_object(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\utils\generic_utils.py", line 321, in class_and_config_for_serialized_keras_object
    raise ValueError('Unknown ' + printable_module_name + ': ' + class_name)
ValueError: Unknown optimizer: optimizers.Adam(learning_rate=0.0015)

16.Apr 2020 16:10:07 model training error
'NoneType' object has no attribute 'fit'
Traceback (most recent call last):
  File ".\_2_train.py", line 154, in train
    forecaster.fit(x_train, y_train, batch_size=batch_size, epochs=epochs, workers=workers,
AttributeError: 'NoneType' object has no attribute 'fit'

16.Apr 2020 16:12:13 LSTM model creation or compile error
Unknown optimizer: optimizers.Adam(learning_rate=0.0015)
Traceback (most recent call last):
  File ".\_2_train.py", line 120, in train
    forecaster.compile(optimizer=optimizer_function,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 328, in compile
    self.optimizer = self._get_optimizer(optimizer)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 350, in _get_optimizer
    return nest.map_structure(_get_single_optimizer, optimizer)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py", line 617, in map_structure
    structure[0], [func(*x) for x in entries],
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py", line 617, in <listcomp>
    structure[0], [func(*x) for x in entries],
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 344, in _get_single_optimizer
    opt = optimizers.get(opt)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\optimizers.py", line 859, in get
    return deserialize(config)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\optimizers.py", line 824, in deserialize
    return deserialize_keras_object(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\utils\generic_utils.py", line 361, in deserialize_keras_object
    (cls, cls_config) = class_and_config_for_serialized_keras_object(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\utils\generic_utils.py", line 321, in class_and_config_for_serialized_keras_object
    raise ValueError('Unknown ' + printable_module_name + ': ' + class_name)
ValueError: Unknown optimizer: optimizers.Adam(learning_rate=0.0015)

16.Apr 2020 16:12:13 model training error
'NoneType' object has no attribute 'fit'
Traceback (most recent call last):
  File ".\_2_train.py", line 156, in train
    forecaster.fit(x_train, y_train, batch_size=batch_size, epochs=epochs, workers=workers,
AttributeError: 'NoneType' object has no attribute 'fit'

16.Apr 2020 16:19:58 LSTM model creation or compile error
Unknown optimizer: optimizers.Adam(learning_rate=0.0015)
Traceback (most recent call last):
  File ".\_2_train.py", line 120, in train
    forecaster.compile(optimizer=optimizer_function,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 328, in compile
    self.optimizer = self._get_optimizer(optimizer)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 350, in _get_optimizer
    return nest.map_structure(_get_single_optimizer, optimizer)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py", line 617, in map_structure
    structure[0], [func(*x) for x in entries],
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py", line 617, in <listcomp>
    structure[0], [func(*x) for x in entries],
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 344, in _get_single_optimizer
    opt = optimizers.get(opt)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\optimizers.py", line 859, in get
    return deserialize(config)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\optimizers.py", line 824, in deserialize
    return deserialize_keras_object(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\utils\generic_utils.py", line 361, in deserialize_keras_object
    (cls, cls_config) = class_and_config_for_serialized_keras_object(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\utils\generic_utils.py", line 321, in class_and_config_for_serialized_keras_object
    raise ValueError('Unknown ' + printable_module_name + ': ' + class_name)
ValueError: Unknown optimizer: optimizers.Adam(learning_rate=0.0015)

16.Apr 2020 16:19:58 model training error
'NoneType' object has no attribute 'fit'
Traceback (most recent call last):
  File ".\_2_train.py", line 156, in train
    forecaster.fit(x_train, y_train, batch_size=batch_size, epochs=epochs, workers=workers,
AttributeError: 'NoneType' object has no attribute 'fit'

16.Apr 2020 16:21:14 LSTM model creation or compile error
Unknown optimizer: optimizers.Adam(learning_rate=0.0015)
Traceback (most recent call last):
  File ".\_2_train.py", line 119, in train
    forecaster.compile(optimizer=optimizer_function,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 328, in compile
    self.optimizer = self._get_optimizer(optimizer)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 350, in _get_optimizer
    return nest.map_structure(_get_single_optimizer, optimizer)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py", line 617, in map_structure
    structure[0], [func(*x) for x in entries],
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py", line 617, in <listcomp>
    structure[0], [func(*x) for x in entries],
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 344, in _get_single_optimizer
    opt = optimizers.get(opt)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\optimizers.py", line 859, in get
    return deserialize(config)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\optimizers.py", line 824, in deserialize
    return deserialize_keras_object(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\utils\generic_utils.py", line 361, in deserialize_keras_object
    (cls, cls_config) = class_and_config_for_serialized_keras_object(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\utils\generic_utils.py", line 321, in class_and_config_for_serialized_keras_object
    raise ValueError('Unknown ' + printable_module_name + ': ' + class_name)
ValueError: Unknown optimizer: optimizers.Adam(learning_rate=0.0015)

16.Apr 2020 16:21:14 model training error
'NoneType' object has no attribute 'fit'
Traceback (most recent call last):
  File ".\_2_train.py", line 155, in train
    forecaster.fit(x_train, y_train, batch_size=batch_size, epochs=epochs, workers=workers,
AttributeError: 'NoneType' object has no attribute 'fit'

16.Apr 2020 16:22:56 LSTM model creation or compile error
Unknown optimizer: optimizers.Adam(learning_rate=0.0015)
Traceback (most recent call last):
  File ".\_2_train.py", line 119, in train
    forecaster.compile(optimizer=optimizer_function,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 328, in compile
    self.optimizer = self._get_optimizer(optimizer)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 350, in _get_optimizer
    return nest.map_structure(_get_single_optimizer, optimizer)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py", line 617, in map_structure
    structure[0], [func(*x) for x in entries],
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py", line 617, in <listcomp>
    structure[0], [func(*x) for x in entries],
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 344, in _get_single_optimizer
    opt = optimizers.get(opt)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\optimizers.py", line 859, in get
    return deserialize(config)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\optimizers.py", line 824, in deserialize
    return deserialize_keras_object(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\utils\generic_utils.py", line 361, in deserialize_keras_object
    (cls, cls_config) = class_and_config_for_serialized_keras_object(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\utils\generic_utils.py", line 321, in class_and_config_for_serialized_keras_object
    raise ValueError('Unknown ' + printable_module_name + ': ' + class_name)
ValueError: Unknown optimizer: optimizers.Adam(learning_rate=0.0015)

16.Apr 2020 16:22:56 model training error
'NoneType' object has no attribute 'fit'
Traceback (most recent call last):
  File ".\_2_train.py", line 155, in train
    forecaster.fit(x_train, y_train, batch_size=batch_size, epochs=epochs, workers=workers,
AttributeError: 'NoneType' object has no attribute 'fit'

16.Apr 2020 16:24:13 LSTM model creation or compile error
Unknown optimizer: optimizers.Adam(learning_rate=0.0015)
Traceback (most recent call last):
  File ".\_2_train.py", line 120, in train
    forecaster.compile(optimizer=optimizer_function,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 328, in compile
    self.optimizer = self._get_optimizer(optimizer)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 350, in _get_optimizer
    return nest.map_structure(_get_single_optimizer, optimizer)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py", line 617, in map_structure
    structure[0], [func(*x) for x in entries],
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py", line 617, in <listcomp>
    structure[0], [func(*x) for x in entries],
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 344, in _get_single_optimizer
    opt = optimizers.get(opt)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\optimizers.py", line 859, in get
    return deserialize(config)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\optimizers.py", line 824, in deserialize
    return deserialize_keras_object(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\utils\generic_utils.py", line 361, in deserialize_keras_object
    (cls, cls_config) = class_and_config_for_serialized_keras_object(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\utils\generic_utils.py", line 321, in class_and_config_for_serialized_keras_object
    raise ValueError('Unknown ' + printable_module_name + ': ' + class_name)
ValueError: Unknown optimizer: optimizers.Adam(learning_rate=0.0015)

16.Apr 2020 16:24:13 model training error
'NoneType' object has no attribute 'fit'
Traceback (most recent call last):
  File ".\_2_train.py", line 156, in train
    forecaster.fit(x_train, y_train, batch_size=batch_size, epochs=epochs, workers=workers,
AttributeError: 'NoneType' object has no attribute 'fit'

16.Apr 2020 16:24:57 LSTM model creation or compile error
Unknown optimizer: optimizers.Adam(learning_rate=0.0015)
Traceback (most recent call last):
  File ".\_2_train.py", line 120, in train
    forecaster.compile(optimizer=optimizer_function,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 328, in compile
    self.optimizer = self._get_optimizer(optimizer)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 350, in _get_optimizer
    return nest.map_structure(_get_single_optimizer, optimizer)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py", line 617, in map_structure
    structure[0], [func(*x) for x in entries],
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py", line 617, in <listcomp>
    structure[0], [func(*x) for x in entries],
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 344, in _get_single_optimizer
    opt = optimizers.get(opt)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\optimizers.py", line 859, in get
    return deserialize(config)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\optimizers.py", line 824, in deserialize
    return deserialize_keras_object(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\utils\generic_utils.py", line 361, in deserialize_keras_object
    (cls, cls_config) = class_and_config_for_serialized_keras_object(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\utils\generic_utils.py", line 321, in class_and_config_for_serialized_keras_object
    raise ValueError('Unknown ' + printable_module_name + ': ' + class_name)
ValueError: Unknown optimizer: optimizers.Adam(learning_rate=0.0015)

16.Apr 2020 16:24:57 model training error
'NoneType' object has no attribute 'fit'
Traceback (most recent call last):
  File ".\_2_train.py", line 156, in train
    forecaster.fit(x_train, y_train, batch_size=batch_size, epochs=epochs, workers=workers,
AttributeError: 'NoneType' object has no attribute 'fit'

16.Apr 2020 16:30:53 LSTM model creation or compile error
Unknown optimizer: optimizers.Adam(learning_rate=0.0015)
Traceback (most recent call last):
  File ".\_2_train.py", line 120, in train
    forecaster.compile(optimizer=optimizer_function,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 328, in compile
    self.optimizer = self._get_optimizer(optimizer)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 350, in _get_optimizer
    return nest.map_structure(_get_single_optimizer, optimizer)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py", line 617, in map_structure
    structure[0], [func(*x) for x in entries],
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py", line 617, in <listcomp>
    structure[0], [func(*x) for x in entries],
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 344, in _get_single_optimizer
    opt = optimizers.get(opt)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\optimizers.py", line 859, in get
    return deserialize(config)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\optimizers.py", line 824, in deserialize
    return deserialize_keras_object(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\utils\generic_utils.py", line 361, in deserialize_keras_object
    (cls, cls_config) = class_and_config_for_serialized_keras_object(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\utils\generic_utils.py", line 321, in class_and_config_for_serialized_keras_object
    raise ValueError('Unknown ' + printable_module_name + ': ' + class_name)
ValueError: Unknown optimizer: optimizers.Adam(learning_rate=0.0015)

16.Apr 2020 16:30:53 model training error
'NoneType' object has no attribute 'fit'
Traceback (most recent call last):
  File ".\_2_train.py", line 156, in train
    forecaster.fit(x_train, y_train, batch_size=batch_size, epochs=epochs, workers=workers,
AttributeError: 'NoneType' object has no attribute 'fit'

16.Apr 2020 16:31:37 LSTM model creation or compile error
('Could not interpret optimizer identifier:', None)
Traceback (most recent call last):
  File ".\_2_train.py", line 120, in train
    forecaster.compile(optimizer=optimizer_function,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 328, in compile
    self.optimizer = self._get_optimizer(optimizer)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 350, in _get_optimizer
    return nest.map_structure(_get_single_optimizer, optimizer)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py", line 617, in map_structure
    structure[0], [func(*x) for x in entries],
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py", line 617, in <listcomp>
    structure[0], [func(*x) for x in entries],
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 344, in _get_single_optimizer
    opt = optimizers.get(opt)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\optimizers.py", line 861, in get
    raise ValueError('Could not interpret optimizer identifier:', identifier)
ValueError: ('Could not interpret optimizer identifier:', None)

16.Apr 2020 16:31:37 model training error
'NoneType' object has no attribute 'fit'
Traceback (most recent call last):
  File ".\_2_train.py", line 156, in train
    forecaster.fit(x_train, y_train, batch_size=batch_size, epochs=epochs, workers=workers,
AttributeError: 'NoneType' object has no attribute 'fit'

16.Apr 2020 16:52:19 correct LSTM model creation and compilation

16.Apr 2020 16:56:55 correct model training, correct saving of model and weights

16.Apr 2020 17:00:58 correct LSTM model creation and compilation

16.Apr 2020 17:03:35 correct LSTM model creation and compilation

16.Apr 2020 17:08:28 correct model training, correct saving of model and weights

16.Apr 2020 17:10:26 correct LSTM model creation and compilation

16.Apr 2020 17:15:17 correct model training, correct saving of model and weights

16.Apr 2020 19:41:34 correct LSTM model creation and compilation

16.Apr 2020 19:46:25 correct model training, correct saving of model and weights

16.Apr 2020 19:57:11 model training error
'checkpoints_path'
Traceback (most recent call last):
  File ".\_2_train.py", line 86, in train
    model_weights = ''.join([model_hyperparameters['checkpoints_path'],
KeyError: 'checkpoints_path'

16.Apr 2020 20:00:48 correct LSTM model creation and compilation

16.Apr 2020 20:02:44 correct LSTM model creation and compilation

16.Apr 2020 20:04:05 correct LSTM model creation and compilation

16.Apr 2020 20:04:58 correct model training, correct saving of model and weights

16.Apr 2020 20:13:48 correct LSTM model creation and compilation

16.Apr 2020 20:14:56 correct model training, correct saving of model and weights

16.Apr 2020 20:19:39 correct LSTM model creation and compilation

16.Apr 2020 20:22:03 correct model training, correct saving of model and weights

16.Apr 2020 20:26:48 correct LSTM model creation and compilation

16.Apr 2020 20:33:18 correct model training, correct saving of model and weights

16.Apr 2020 21:01:43 correct LSTM model creation and compilation

16.Apr 2020 21:05:30 correct model training, correct saving of model and weights

16.Apr 2020 22:38:40 correct LSTM model creation and compilation

16.Apr 2020 22:43:16 correct model training, correct saving of model and weights

16.Apr 2020 22:56:59 correct LSTM model creation and compilation

16.Apr 2020 23:01:35 correct LSTM model creation and compilation

16.Apr 2020 23:05:35 correct model training, correct saving of model and weights

16.Apr 2020 23:07:36 correct LSTM model creation and compilation

16.Apr 2020 23:08:24 correct LSTM model creation and compilation

16.Apr 2020 23:23:25 correct LSTM model creation and compilation

16.Apr 2020 23:26:46 correct LSTM model creation and compilation

16.Apr 2020 23:32:17 correct LSTM model creation and compilation

16.Apr 2020 23:48:31 correct LSTM model creation and compilation

16.Apr 2020 23:53:50 correct LSTM model creation and compilation

16.Apr 2020 23:54:33 correct LSTM model creation and compilation

17.Apr 2020 00:36:10 correct LSTM model creation and compilation

17.Apr 2020 00:39:23 correct model training, correct saving of model and weights

17.Apr 2020 00:49:36 correct LSTM model creation and compilation

17.Apr 2020 01:22:44 correct LSTM model creation and compilation

17.Apr 2020 01:25:37 correct LSTM model creation and compilation

17.Apr 2020 01:31:26 correct LSTM model creation and compilation

17.Apr 2020 01:38:53 correct LSTM model creation and compilation

17.Apr 2020 01:45:33 correct LSTM model creation and compilation

17.Apr 2020 01:55:08 correct LSTM model creation and compilation

17.Apr 2020 02:52:33 correct LSTM model creation and compilation

17.Apr 2020 02:56:55 correct model training, correct saving of model and weights

17.Apr 2020 03:06:23 correct LSTM model creation and compilation

17.Apr 2020 03:10:45 correct model training, correct saving of model and weights

17.Apr 2020 03:18:17 correct LSTM model creation and compilation

17.Apr 2020 03:22:53 correct model training, correct saving of model and weights

17.Apr 2020 03:32:43 correct LSTM model creation and compilation

17.Apr 2020 03:37:10 correct model training, correct saving of model and weights

17.Apr 2020 04:06:32 correct LSTM model creation and compilation

17.Apr 2020 04:12:48 correct LSTM model creation and compilation

17.Apr 2020 04:17:38 correct model training, correct saving of model and weights

17.Apr 2020 04:24:07 correct LSTM model creation and compilation

17.Apr 2020 04:30:19 correct LSTM model creation and compilation

17.Apr 2020 04:36:35 correct LSTM model creation and compilation

17.Apr 2020 04:46:31 correct LSTM model creation and compilation

17.Apr 2020 04:50:55 correct model training, correct saving of model and weights

17.Apr 2020 05:09:14 correct LSTM model creation and compilation

17.Apr 2020 05:27:53 correct LSTM model creation and compilation

17.Apr 2020 05:28:59 correct LSTM model creation and compilation

17.Apr 2020 05:43:18 correct LSTM model creation and compilation

17.Apr 2020 05:44:08 correct LSTM model creation and compilation

17.Apr 2020 05:46:38 correct LSTM model creation and compilation

17.Apr 2020 05:49:41 correct LSTM model creation and compilation

17.Apr 2020 05:53:52 correct LSTM model creation and compilation

17.Apr 2020 05:58:48 correct LSTM model creation and compilation

17.Apr 2020 05:59:35 correct LSTM model creation and compilation

17.Apr 2020 10:07:08 correct LSTM model creation and compilation

17.Apr 2020 10:09:45 correct LSTM model creation and compilation

17.Apr 2020 10:10:41 correct LSTM model creation and compilation

17.Apr 2020 10:13:13 correct LSTM model creation and compilation

17.Apr 2020 10:39:44 correct LSTM model creation and compilation

17.Apr 2020 10:42:16 correct LSTM model creation and compilation

17.Apr 2020 10:45:05 correct LSTM model creation and compilation

17.Apr 2020 10:51:48 correct LSTM model creation and compilation

17.Apr 2020 11:02:13 correct LSTM model creation and compilation

17.Apr 2020 11:05:23 correct model training, correct saving of model and weights

17.Apr 2020 11:07:01 correct LSTM model creation and compilation

17.Apr 2020 11:10:39 correct model training, correct saving of model and weights

17.Apr 2020 12:04:28 correct LSTM model creation and compilation

17.Apr 2020 12:08:11 correct model training, correct saving of model and weights

17.Apr 2020 15:23:31 correct LSTM model creation and compilation

17.Apr 2020 15:27:18 correct model training, correct saving of model and weights

17.Apr 2020 15:36:51 correct LSTM model creation and compilation

17.Apr 2020 15:38:50 correct LSTM model creation and compilation

17.Apr 2020 15:42:54 correct model training, correct saving of model and weights

17.Apr 2020 15:52:48 correct LSTM model creation and compilation

17.Apr 2020 15:56:09 correct model training, correct saving of model and weights

17.Apr 2020 15:59:36 correct LSTM model creation and compilation

17.Apr 2020 16:00:10 correct model training, correct saving of model and weights

17.Apr 2020 16:16:08 correct LSTM model creation and compilation

17.Apr 2020 16:16:38 correct model training, correct saving of model and weights

17.Apr 2020 16:19:50 correct LSTM model creation and compilation

17.Apr 2020 16:20:21 correct model training, correct saving of model and weights

17.Apr 2020 16:22:07 correct LSTM model creation and compilation

17.Apr 2020 16:23:12 correct model training, correct saving of model and weights

17.Apr 2020 16:24:50 correct LSTM model creation and compilation

17.Apr 2020 16:25:27 correct model training, correct saving of model and weights

17.Apr 2020 16:27:01 correct LSTM model creation and compilation

17.Apr 2020 16:27:42 correct model training, correct saving of model and weights

17.Apr 2020 16:31:50 correct LSTM model creation and compilation

17.Apr 2020 16:32:31 correct model training, correct saving of model and weights

17.Apr 2020 16:34:29 correct LSTM model creation and compilation

17.Apr 2020 16:38:37 correct model training, correct saving of model and weights

17.Apr 2020 18:35:21 correct LSTM model creation and compilation

17.Apr 2020 18:38:30 correct model training, correct saving of model and weights

17.Apr 2020 18:42:17 correct LSTM model creation and compilation

17.Apr 2020 18:45:42 correct model training, correct saving of model and weights

17.Apr 2020 18:53:25 correct LSTM model creation and compilation

17.Apr 2020 18:57:54 correct model training, correct saving of model and weights

17.Apr 2020 19:25:11 correct LSTM model creation and compilation

17.Apr 2020 19:44:53 data dimensions does not match settings

17.Apr 2020 21:03:46 data dimensions does not match settings

17.Apr 2020 21:11:03 data dimensions does not match settings

17.Apr 2020 21:16:30 data dimensions does not match settings

17.Apr 2020 21:27:16 correct LSTM model creation and compilation

17.Apr 2020 21:30:01 correct model training, correct saving of model and weights

17.Apr 2020 21:30:01 settings modified and saved

17.Apr 2020 21:43:21 correct LSTM model creation and compilation

17.Apr 2020 21:46:22 correct model training, correct saving of model and weights

17.Apr 2020 21:46:22 settings modified and saved

18.Apr 2020 00:45:25 correct LSTM model creation and compilation

18.Apr 2020 00:48:55 correct model training, correct saving of model and weights

18.Apr 2020 00:48:55 settings modified and saved

18.Apr 2020 01:06:47 correct LSTM model creation and compilation

18.Apr 2020 01:09:43 correct model training, correct saving of model and weights

18.Apr 2020 01:09:43 settings modified and saved

18.Apr 2020 01:44:08 correct LSTM model creation and compilation

18.Apr 2020 01:46:16 correct model training, correct saving of model and weights

18.Apr 2020 01:46:16 settings modified and saved

18.Apr 2020 01:55:16 correct LSTM model creation and compilation

18.Apr 2020 01:58:40 correct model training, correct saving of model and weights

18.Apr 2020 01:58:40 settings modified and saved

18.Apr 2020 02:06:07 correct LSTM model creation and compilation

19.Apr 2020 00:30:36 correct LSTM model creation and compilation

19.Apr 2020 01:02:57 correct model training, correct saving of model and weights

19.Apr 2020 01:02:57 settings modified and saved

19.Apr 2020 05:08:13 correct LSTM model creation and compilation

19.Apr 2020 05:08:53 correct model training, correct saving of model and weights

19.Apr 2020 05:08:53 settings modified and saved

19.Apr 2020 05:32:20 model training error
Object arrays cannot be loaded when allow_pickle=False
Traceback (most recent call last):
  File ".\_2_train.py", line 76, in train
    scaled_unit_sales = np.load(''.join([local_script_settings['train_data_path'], 'x_train_source.npy']))
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\numpy\lib\npyio.py", line 452, in load
    return format.read_array(fid, allow_pickle=allow_pickle,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\numpy\lib\format.py", line 739, in read_array
    raise ValueError("Object arrays cannot be loaded when "
ValueError: Object arrays cannot be loaded when allow_pickle=False

19.Apr 2020 05:59:30 model training error
Object arrays cannot be loaded when allow_pickle=False
Traceback (most recent call last):
  File ".\_2_train.py", line 76, in train
    scaled_unit_sales = np.load(''.join([local_script_settings['train_data_path'], 'x_train_source.npy']))
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\numpy\lib\npyio.py", line 452, in load
    return format.read_array(fid, allow_pickle=allow_pickle,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\numpy\lib\format.py", line 739, in read_array
    raise ValueError("Object arrays cannot be loaded when "
ValueError: Object arrays cannot be loaded when allow_pickle=False

19.Apr 2020 10:43:24 model training error
Object arrays cannot be loaded when allow_pickle=False
Traceback (most recent call last):
  File ".\_2_train.py", line 76, in train
    scaled_unit_sales = np.load(''.join([local_script_settings['train_data_path'], 'x_train_source.npy']))
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\numpy\lib\npyio.py", line 452, in load
    return format.read_array(fid, allow_pickle=allow_pickle,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\numpy\lib\format.py", line 739, in read_array
    raise ValueError("Object arrays cannot be loaded when "
ValueError: Object arrays cannot be loaded when allow_pickle=False

19.Apr 2020 11:25:48 correct LSTM model creation and compilation

19.Apr 2020 11:26:46 correct model training, correct saving of model and weights

19.Apr 2020 11:26:46 settings modified and saved

19.Apr 2020 13:04:30 correct LSTM model creation and compilation

19.Apr 2020 13:19:24 correct model training, correct saving of model and weights

19.Apr 2020 13:19:24 settings modified and saved

19.Apr 2020 18:16:59 error at loading model (LTSM) hyperparameters
I/O operation on closed file.
Traceback (most recent call last):
  File ".\_2_train.py", line 51, in <module>
    local_script_settings = json.loads(local_json_file.read())
ValueError: I/O operation on closed file.

19.Apr 2020 18:33:13 correct LSTM model creation and compilation

19.Apr 2020 18:38:10 correct LSTM model creation and compilation

19.Apr 2020 19:03:57 correct LSTM model creation and compilation

19.Apr 2020 19:08:37 correct LSTM model creation and compilation

19.Apr 2020 19:12:53 correct LSTM model creation and compilation

19.Apr 2020 19:15:12 correct LSTM model creation and compilation

19.Apr 2020 19:19:09 correct LSTM model creation and compilation

19.Apr 2020 19:23:19 correct LSTM model creation and compilation

19.Apr 2020 19:51:00 correct model training, correct saving of model and weights

19.Apr 2020 19:51:00 settings modified and saved

19.Apr 2020 19:59:02 correct LSTM model creation and compilation

19.Apr 2020 20:16:24 correct model training, correct saving of model and weights

19.Apr 2020 20:16:24 settings modified and saved

19.Apr 2020 21:47:59 correct LSTM model creation and compilation

19.Apr 2020 21:54:21 correct model training, correct saving of model and weights

19.Apr 2020 21:54:21 settings modified and saved

19.Apr 2020 22:17:06 correct LSTM model creation and compilation

19.Apr 2020 22:34:02 correct model training, correct saving of model and weights

19.Apr 2020 22:34:02 settings modified and saved

19.Apr 2020 22:53:09 correct LSTM model creation and compilation

19.Apr 2020 23:06:42 correct model training, correct saving of model and weights

19.Apr 2020 23:06:42 settings modified and saved

19.Apr 2020 23:50:55 correct LSTM model creation and compilation

19.Apr 2020 23:59:08 correct LSTM model creation and compilation

20.Apr 2020 00:13:54 correct model training, correct saving of model and weights

20.Apr 2020 00:13:54 settings modified and saved

20.Apr 2020 20:12:25 correct LSTM model creation and compilation

20.Apr 2020 20:25:14 correct model training, correct saving of model and weights

20.Apr 2020 20:25:14 settings modified and saved

20.Apr 2020 20:39:54 correct LSTM model creation and compilation

20.Apr 2020 20:54:47 correct model training, correct saving of model and weights

20.Apr 2020 20:54:47 settings modified and saved

20.Apr 2020 21:22:26 correct LSTM model creation and compilation

20.Apr 2020 21:34:24 correct model training, correct saving of model and weights

20.Apr 2020 21:34:24 settings modified and saved

20.Apr 2020 21:47:11 correct LSTM model creation and compilation

20.Apr 2020 22:01:50 correct model training, correct saving of model and weights

20.Apr 2020 22:01:50 settings modified and saved

20.Apr 2020 22:31:46 correct LSTM model creation and compilation

20.Apr 2020 22:35:58 correct LSTM model creation and compilation

20.Apr 2020 22:51:09 correct model training, correct saving of model and weights

20.Apr 2020 22:51:09 settings modified and saved

20.Apr 2020 23:36:03 correct LSTM model creation and compilation

20.Apr 2020 23:53:07 correct LSTM model creation and compilation

21.Apr 2020 00:09:12 correct model training, correct saving of model and weights

21.Apr 2020 00:09:12 settings modified and saved

21.Apr 2020 00:20:53 correct LSTM model creation and compilation

21.Apr 2020 00:49:30 correct model training, correct saving of model and weights

21.Apr 2020 00:49:30 settings modified and saved

21.Apr 2020 01:27:42 correct LSTM model creation and compilation

21.Apr 2020 01:46:26 correct model training, correct saving of model and weights

21.Apr 2020 01:46:26 settings modified and saved

21.Apr 2020 02:29:47 correct LSTM model creation and compilation

21.Apr 2020 02:43:36 correct model training, correct saving of model and weights

21.Apr 2020 02:43:36 settings modified and saved

21.Apr 2020 03:10:27 correct LSTM model creation and compilation

21.Apr 2020 03:30:21 correct model training, correct saving of model and weights

21.Apr 2020 03:30:21 settings modified and saved

21.Apr 2020 06:34:39 correct LSTM model creation and compilation

21.Apr 2020 06:48:40 correct model training, correct saving of model and weights

21.Apr 2020 06:48:40 settings modified and saved

21.Apr 2020 07:01:57 correct LSTM model creation and compilation

21.Apr 2020 07:25:28 correct model training, correct saving of model and weights

21.Apr 2020 07:25:28 settings modified and saved

21.Apr 2020 07:48:09 model training error
'dict' object has no attribute 'json'
Traceback (most recent call last):
  File ".\_2_train.py", line 136, in train
    if model_hyperparameters.json['regularizers_L1L2'] == 'True':
AttributeError: 'dict' object has no attribute 'json'

21.Apr 2020 13:14:13 LSTM model creation or compile error
('Keyword argument not understood:', 'regularizers')
Traceback (most recent call last):
  File ".\_2_train.py", line 143, in train
    forecaster.add(layers.Bidirectional(layers.LSTM(units=int(model_hyperparameters['units_layer_1']),
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\layers\recurrent_v2.py", line 1061, in __init__
    super(LSTM, self).__init__(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\layers\recurrent.py", line 1099, in __init__
    super(DropoutRNNCellMixin, self).__init__(*args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\layers\recurrent.py", line 2708, in __init__
    super(LSTM, self).__init__(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\layers\recurrent.py", line 417, in __init__
    super(RNN, self).__init__(**kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\training\tracking\base.py", line 456, in _method_wrapper
    result = method(self, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py", line 294, in __init__
    generic_utils.validate_kwargs(kwargs, allowed_kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\utils\generic_utils.py", line 792, in validate_kwargs
    raise TypeError(error_message, kwarg)
TypeError: ('Keyword argument not understood:', 'regularizers')

21.Apr 2020 13:14:13 model training error
'NoneType' object has no attribute 'fit'
Traceback (most recent call last):
  File ".\_2_train.py", line 234, in train
    forecaster.fit(x_train, y_train, batch_size=batch_size, epochs=epochs, workers=workers,
AttributeError: 'NoneType' object has no attribute 'fit'

21.Apr 2020 13:23:14 LSTM model creation or compile error
('Keyword argument not understood:', 'regularizers')
Traceback (most recent call last):
  File ".\_2_train.py", line 143, in train
    forecaster.add(layers.Bidirectional(layers.LSTM(units=int(model_hyperparameters['units_layer_1']),
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\layers\recurrent_v2.py", line 1061, in __init__
    super(LSTM, self).__init__(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\layers\recurrent.py", line 1099, in __init__
    super(DropoutRNNCellMixin, self).__init__(*args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\layers\recurrent.py", line 2708, in __init__
    super(LSTM, self).__init__(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\layers\recurrent.py", line 417, in __init__
    super(RNN, self).__init__(**kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\training\tracking\base.py", line 456, in _method_wrapper
    result = method(self, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py", line 294, in __init__
    generic_utils.validate_kwargs(kwargs, allowed_kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\utils\generic_utils.py", line 792, in validate_kwargs
    raise TypeError(error_message, kwarg)
TypeError: ('Keyword argument not understood:', 'regularizers')

21.Apr 2020 13:23:14 model training error
'NoneType' object has no attribute 'fit'
Traceback (most recent call last):
  File ".\_2_train.py", line 234, in train
    forecaster.fit(x_train, y_train, batch_size=batch_size, epochs=epochs, workers=workers,
AttributeError: 'NoneType' object has no attribute 'fit'

21.Apr 2020 13:27:32 model training error
module 'tensorflow.keras.regularizers' has no attribute 'l1l2'
Traceback (most recent call last):
  File ".\_2_train.py", line 137, in train
    regularizers_list.append([regularizers.l1l2(l1=0.01, l2=0.01)])
AttributeError: module 'tensorflow.keras.regularizers' has no attribute 'l1l2'

21.Apr 2020 13:29:16 LSTM model creation or compile error
('Keyword argument not understood:', 'regularizers')
Traceback (most recent call last):
  File ".\_2_train.py", line 144, in train
    forecaster.add(layers.Bidirectional(layers.LSTM(units=int(model_hyperparameters['units_layer_1']),
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\layers\recurrent_v2.py", line 1061, in __init__
    super(LSTM, self).__init__(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\layers\recurrent.py", line 1099, in __init__
    super(DropoutRNNCellMixin, self).__init__(*args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\layers\recurrent.py", line 2708, in __init__
    super(LSTM, self).__init__(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\layers\recurrent.py", line 417, in __init__
    super(RNN, self).__init__(**kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\training\tracking\base.py", line 456, in _method_wrapper
    result = method(self, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py", line 294, in __init__
    generic_utils.validate_kwargs(kwargs, allowed_kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\utils\generic_utils.py", line 792, in validate_kwargs
    raise TypeError(error_message, kwarg)
TypeError: ('Keyword argument not understood:', 'regularizers')

21.Apr 2020 13:29:16 model training error
'NoneType' object has no attribute 'fit'
Traceback (most recent call last):
  File ".\_2_train.py", line 235, in train
    forecaster.fit(x_train, y_train, batch_size=batch_size, epochs=epochs, workers=workers,
AttributeError: 'NoneType' object has no attribute 'fit'

21.Apr 2020 14:39:22 LSTM model creation or compile error
('Keyword argument not understood:', 'regularizers')
Traceback (most recent call last):
  File ".\_2_train.py", line 145, in train
    forecaster.add(layers.Bidirectional(layers.LSTM(units=int(model_hyperparameters['units_layer_1']),
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\layers\recurrent_v2.py", line 1061, in __init__
    super(LSTM, self).__init__(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\layers\recurrent.py", line 1099, in __init__
    super(DropoutRNNCellMixin, self).__init__(*args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\layers\recurrent.py", line 2708, in __init__
    super(LSTM, self).__init__(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\layers\recurrent.py", line 417, in __init__
    super(RNN, self).__init__(**kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\training\tracking\base.py", line 456, in _method_wrapper
    result = method(self, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py", line 294, in __init__
    generic_utils.validate_kwargs(kwargs, allowed_kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\utils\generic_utils.py", line 792, in validate_kwargs
    raise TypeError(error_message, kwarg)
TypeError: ('Keyword argument not understood:', 'regularizers')

21.Apr 2020 14:39:22 model training error
'NoneType' object has no attribute 'fit'
Traceback (most recent call last):
  File ".\_2_train.py", line 236, in train
    forecaster.fit(x_train, y_train, batch_size=batch_size, epochs=epochs, workers=workers,
AttributeError: 'NoneType' object has no attribute 'fit'

21.Apr 2020 14:43:29 LSTM model creation or compile error
('Could not interpret regularizer identifier:', [[<tensorflow.python.keras.regularizers.L1L2 object at 0x000002B1B614D9D0>]])
Traceback (most recent call last):
  File ".\_2_train.py", line 145, in train
    forecaster.add(layers.Bidirectional(layers.LSTM(units=int(model_hyperparameters['units_layer_1']),
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\layers\recurrent_v2.py", line 1061, in __init__
    super(LSTM, self).__init__(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\layers\recurrent.py", line 1099, in __init__
    super(DropoutRNNCellMixin, self).__init__(*args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\layers\recurrent.py", line 2716, in __init__
    self.activity_regularizer = regularizers.get(activity_regularizer)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\regularizers.py", line 315, in get
    raise ValueError('Could not interpret regularizer identifier:', identifier)
ValueError: ('Could not interpret regularizer identifier:', [[<tensorflow.python.keras.regularizers.L1L2 object at 0x000002B1B614D9D0>]])

21.Apr 2020 14:43:29 model training error
'NoneType' object has no attribute 'fit'
Traceback (most recent call last):
  File ".\_2_train.py", line 236, in train
    forecaster.fit(x_train, y_train, batch_size=batch_size, epochs=epochs, workers=workers,
AttributeError: 'NoneType' object has no attribute 'fit'

21.Apr 2020 14:46:53 correct LSTM model creation and compilation

21.Apr 2020 14:54:05 correct LSTM model creation and compilation

21.Apr 2020 14:59:27 correct LSTM model creation and compilation

21.Apr 2020 15:09:52 correct model training, correct saving of model and weights

21.Apr 2020 15:09:52 settings modified and saved

21.Apr 2020 15:14:55 correct LSTM model creation and compilation

21.Apr 2020 15:28:50 correct model training, correct saving of model and weights

21.Apr 2020 15:28:50 settings modified and saved

21.Apr 2020 15:44:21 correct LSTM model creation and compilation

21.Apr 2020 16:09:05 correct model training, correct saving of model and weights

21.Apr 2020 16:09:05 settings modified and saved

21.Apr 2020 16:33:35 correct LSTM model creation and compilation

21.Apr 2020 16:43:12 correct model training, correct saving of model and weights

21.Apr 2020 16:43:12 settings modified and saved

21.Apr 2020 16:48:03 correct LSTM model creation and compilation

21.Apr 2020 17:06:36 correct model training, correct saving of model and weights

21.Apr 2020 17:06:36 settings modified and saved

21.Apr 2020 17:09:23 correct LSTM model creation and compilation

21.Apr 2020 17:18:21 correct LSTM model creation and compilation

21.Apr 2020 17:24:26 correct model training, correct saving of model and weights

21.Apr 2020 17:24:26 settings modified and saved

21.Apr 2020 18:00:04 correct LSTM model creation and compilation

21.Apr 2020 18:06:50 correct model training, correct saving of model and weights

21.Apr 2020 18:06:50 settings modified and saved

21.Apr 2020 18:20:03 correct LSTM model creation and compilation

21.Apr 2020 18:37:59 correct model training, correct saving of model and weights

21.Apr 2020 18:37:59 settings modified and saved

21.Apr 2020 19:07:17 correct LSTM model creation and compilation

21.Apr 2020 19:13:14 correct model training, correct saving of model and weights

21.Apr 2020 19:13:14 settings modified and saved

21.Apr 2020 19:43:30 correct LSTM model creation and compilation

21.Apr 2020 19:54:05 correct model training, correct saving of model and weights

21.Apr 2020 19:54:05 settings modified and saved

21.Apr 2020 20:12:58 correct LSTM model creation and compilation

21.Apr 2020 20:18:23 correct model training, correct saving of model and weights

21.Apr 2020 20:18:23 settings modified and saved

23.Apr 2020 10:11:07 correct LSTM model creation and compilation

23.Apr 2020 10:42:19 correct LSTM model creation and compilation

23.Apr 2020 10:44:51 correct LSTM model creation and compilation

23.Apr 2020 10:49:29 correct LSTM model creation and compilation

23.Apr 2020 10:49:59 correct LSTM model creation and compilation

23.Apr 2020 11:01:42 correct LSTM model creation and compilation

23.Apr 2020 11:06:07 correct LSTM model creation and compilation

23.Apr 2020 11:11:41 correct LSTM model creation and compilation

23.Apr 2020 11:22:24 correct LSTM model creation and compilation

23.Apr 2020 11:29:48 correct LSTM model creation and compilation

23.Apr 2020 11:54:01 correct LSTM model creation and compilation

23.Apr 2020 12:25:15 correct LSTM model creation and compilation

23.Apr 2020 12:27:54 correct LSTM model creation and compilation

23.Apr 2020 12:32:23 correct LSTM model creation and compilation

23.Apr 2020 12:35:50 correct LSTM model creation and compilation

23.Apr 2020 12:36:54 data dimensions does not match settings

23.Apr 2020 12:38:40 correct LSTM model creation and compilation

23.Apr 2020 12:51:43 correct LSTM model creation and compilation

23.Apr 2020 13:00:35 correct model training, correct saving of model and weights

23.Apr 2020 13:00:35 settings modified and saved

23.Apr 2020 13:08:49 correct LSTM model creation and compilation

23.Apr 2020 13:19:06 correct LSTM model creation and compilation

23.Apr 2020 13:19:09 model training error
in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:466 train_step  **
        loss = self.compiled_loss(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:204 __call__
        loss_value = loss_obj(y_t, y_p, sample_weight=sw)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\losses.py:143 __call__
        losses = self.call(y_true, y_pred)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\losses.py:246 call
        return self.fn(y_true, y_pred, **self._fn_kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\losses.py:1198 mean_squared_error
        return K.mean(math_ops.squared_difference(y_pred, y_true), axis=-1)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\gen_math_ops.py:10037 squared_difference
        _, _, _op, _outputs = _op_def_library._apply_op_helper(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\op_def_library.py:742 _apply_op_helper
        op = g._create_op_internal(op_type_name, inputs, dtypes=None,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py:593 _create_op_internal
        return super(FuncGraph, self)._create_op_internal(  # pylint: disable=protected-access
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py:3319 _create_op_internal
        ret = Operation(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py:1816 __init__
        self._c_op = _create_c_op(self._graph, node_def, inputs,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py:1657 _create_c_op
        raise ValueError(str(e))

    ValueError: Dimensions must be equal, but are 35 and 28 for '{{node mean_squared_error/SquaredDifference}} = SquaredDifference[T=DT_FLOAT](mean_squared_error/remove_squeezable_dimensions/Squeeze, IteratorGetNext:1)' with input shapes: [?,35], [?,28].
Traceback (most recent call last):
  File ".\_2_train.py", line 253, in train
    forecaster.fit(x_train, y_train, batch_size=batch_size, epochs=epochs, workers=workers,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 66, in _method_wrapper
    return method(self, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 785, in fit
    tmp_logs = train_function(iterator)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 580, in __call__
    result = self._call(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 627, in _call
    self._initialize(args, kwds, add_initializers_to=initializers)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 505, in _initialize
    self._stateful_fn._get_concrete_function_internal_garbage_collected(  # pylint: disable=protected-access
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2446, in _get_concrete_function_internal_garbage_collected
    graph_function, _, _ = self._maybe_define_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2777, in _maybe_define_function
    graph_function = self._create_graph_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2657, in _create_graph_function
    func_graph_module.func_graph_from_py_func(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 981, in func_graph_from_py_func
    func_outputs = python_func(*func_args, **func_kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 441, in wrapped_fn
    return weak_wrapped_fn().__wrapped__(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 968, in wrapper
    raise e.ag_error_metadata.to_exception(e)
ValueError: in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:466 train_step  **
        loss = self.compiled_loss(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:204 __call__
        loss_value = loss_obj(y_t, y_p, sample_weight=sw)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\losses.py:143 __call__
        losses = self.call(y_true, y_pred)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\losses.py:246 call
        return self.fn(y_true, y_pred, **self._fn_kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\losses.py:1198 mean_squared_error
        return K.mean(math_ops.squared_difference(y_pred, y_true), axis=-1)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\gen_math_ops.py:10037 squared_difference
        _, _, _op, _outputs = _op_def_library._apply_op_helper(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\op_def_library.py:742 _apply_op_helper
        op = g._create_op_internal(op_type_name, inputs, dtypes=None,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py:593 _create_op_internal
        return super(FuncGraph, self)._create_op_internal(  # pylint: disable=protected-access
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py:3319 _create_op_internal
        ret = Operation(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py:1816 __init__
        self._c_op = _create_c_op(self._graph, node_def, inputs,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py:1657 _create_c_op
        raise ValueError(str(e))

    ValueError: Dimensions must be equal, but are 35 and 28 for '{{node mean_squared_error/SquaredDifference}} = SquaredDifference[T=DT_FLOAT](mean_squared_error/remove_squeezable_dimensions/Squeeze, IteratorGetNext:1)' with input shapes: [?,35], [?,28].


23.Apr 2020 13:25:01 correct LSTM model creation and compilation

23.Apr 2020 13:30:55 correct model training, correct saving of model and weights

23.Apr 2020 13:30:55 settings modified and saved

23.Apr 2020 14:15:19 correct LSTM model creation and compilation

23.Apr 2020 14:21:07 correct model training, correct saving of model and weights

23.Apr 2020 14:21:07 settings modified and saved

23.Apr 2020 23:06:58 LSTM model creation or compile error
('Keyword argument not understood:', 'activation')
Traceback (most recent call last):
  File ".\_2_train.py", line 147, in train
    forecaster.add(layers.Bidirectional(layers.RNN(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\layers\recurrent.py", line 417, in __init__
    super(RNN, self).__init__(**kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\training\tracking\base.py", line 456, in _method_wrapper
    result = method(self, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py", line 294, in __init__
    generic_utils.validate_kwargs(kwargs, allowed_kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\utils\generic_utils.py", line 792, in validate_kwargs
    raise TypeError(error_message, kwarg)
TypeError: ('Keyword argument not understood:', 'activation')

23.Apr 2020 23:06:58 model training error
'NoneType' object has no attribute 'fit'
Traceback (most recent call last):
  File ".\_2_train.py", line 262, in train
    forecaster.fit(x_train, y_train, batch_size=batch_size, epochs=epochs, workers=workers,
AttributeError: 'NoneType' object has no attribute 'fit'

23.Apr 2020 23:27:13 LSTM model creation or compile error
('Keyword argument not understood:', 'return_sequences')
Traceback (most recent call last):
  File ".\_2_train.py", line 148, in train
    PeepholeLSTMCell(units=int(model_hyperparameters['units_layer_1']),
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\layers\recurrent.py", line 2279, in __init__
    super(LSTMCell, self).__init__(**kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\layers\recurrent.py", line 1099, in __init__
    super(DropoutRNNCellMixin, self).__init__(*args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\training\tracking\base.py", line 456, in _method_wrapper
    result = method(self, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py", line 294, in __init__
    generic_utils.validate_kwargs(kwargs, allowed_kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\utils\generic_utils.py", line 792, in validate_kwargs
    raise TypeError(error_message, kwarg)
TypeError: ('Keyword argument not understood:', 'return_sequences')

23.Apr 2020 23:27:13 model training error
'NoneType' object has no attribute 'fit'
Traceback (most recent call last):
  File ".\_2_train.py", line 262, in train
    forecaster.fit(x_train, y_train, batch_size=batch_size, epochs=epochs, workers=workers,
AttributeError: 'NoneType' object has no attribute 'fit'

23.Apr 2020 23:48:19 LSTM model creation or compile error
('Keyword argument not understood:', 'return_sequences')
Traceback (most recent call last):
  File ".\_2_train.py", line 156, in train
    PeepholeLSTMCell(units=int(model_hyperparameters['units_layer_1']),
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\layers\recurrent.py", line 2279, in __init__
    super(LSTMCell, self).__init__(**kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\layers\recurrent.py", line 1099, in __init__
    super(DropoutRNNCellMixin, self).__init__(*args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\training\tracking\base.py", line 456, in _method_wrapper
    result = method(self, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py", line 294, in __init__
    generic_utils.validate_kwargs(kwargs, allowed_kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\utils\generic_utils.py", line 792, in validate_kwargs
    raise TypeError(error_message, kwarg)
TypeError: ('Keyword argument not understood:', 'return_sequences')

23.Apr 2020 23:48:19 model training error
'NoneType' object has no attribute 'fit'
Traceback (most recent call last):
  File ".\_2_train.py", line 262, in train
    forecaster.fit(x_train, y_train, batch_size=batch_size, epochs=epochs, workers=workers,
AttributeError: 'NoneType' object has no attribute 'fit'

23.Apr 2020 23:56:05 LSTM model creation or compile error
('Keyword argument not understood:', 'return_sequences')
Traceback (most recent call last):
  File ".\_2_train.py", line 155, in train
    forecaster.add(layers.Bidirectional(layers.RNN(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\layers\wrappers.py", line 414, in __init__
    super(Bidirectional, self).__init__(layer, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\layers\wrappers.py", line 54, in __init__
    super(Wrapper, self).__init__(**kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\training\tracking\base.py", line 456, in _method_wrapper
    result = method(self, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py", line 294, in __init__
    generic_utils.validate_kwargs(kwargs, allowed_kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\utils\generic_utils.py", line 792, in validate_kwargs
    raise TypeError(error_message, kwarg)
TypeError: ('Keyword argument not understood:', 'return_sequences')

23.Apr 2020 23:56:05 model training error
'NoneType' object has no attribute 'fit'
Traceback (most recent call last):
  File ".\_2_train.py", line 262, in train
    forecaster.fit(x_train, y_train, batch_size=batch_size, epochs=epochs, workers=workers,
AttributeError: 'NoneType' object has no attribute 'fit'

24.Apr 2020 00:02:37 correct LSTM model creation and compilation

24.Apr 2020 00:31:29 correct LSTM model creation and compilation

24.Apr 2020 07:00:28 correct model training, correct saving of model and weights

24.Apr 2020 07:00:28 settings modified and saved

24.Apr 2020 08:19:52 correct LSTM model creation and compilation

24.Apr 2020 09:14:33 correct model training, correct saving of model and weights

24.Apr 2020 09:14:33 settings modified and saved

24.Apr 2020 09:28:05 correct LSTM model creation and compilation

24.Apr 2020 09:28:05 model training error
'early_stopping_patience'
Traceback (most recent call last):
  File ".\_2_train.py", line 277, in train
    callback1 = cb.EarlyStopping(monitor='loss', patience=local_script_settings['early_stopping_patience'])
KeyError: 'early_stopping_patience'

24.Apr 2020 09:29:15 correct LSTM model creation and compilation

24.Apr 2020 10:16:32 correct model training, correct saving of model and weights

24.Apr 2020 10:16:32 settings modified and saved

24.Apr 2020 10:22:19 correct LSTM model creation and compilation

24.Apr 2020 10:22:20 model training error
in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:465 train_step  **
        y_pred = self(x, training=True)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py:927 __call__
        outputs = call_fn(cast_inputs, *args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\sequential.py:291 call
        outputs = layer(inputs, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\layers\recurrent.py:654 __call__
        return super(RNN, self).__call__(inputs, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py:927 __call__
        outputs = call_fn(cast_inputs, *args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\layers\recurrent.py:784 call
        last_output, outputs, states = K.rnn(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\backend.py:4236 rnn
        final_outputs = control_flow_ops.while_loop(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\control_flow_ops.py:2679 while_loop
        return while_v2.while_loop(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\while_v2.py:188 while_loop
        body_graph = func_graph_module.func_graph_from_py_func(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py:981 func_graph_from_py_func
        func_outputs = python_func(*func_args, **func_kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\while_v2.py:174 wrapped_body
        outputs = body(*_pack_sequence_as(orig_loop_vars, args))
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\backend.py:4222 _step
        output, new_states = step_function(current_input,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\layers\recurrent.py:780 step
        output, new_states = cell_call_fn(inputs, states, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py:955 __call__
        self._handle_activity_regularization(inputs, outputs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py:2214 _handle_activity_regularization
        base_layer_utils.check_graph_consistency(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer_utils.py:546 check_graph_consistency
        raise RuntimeError(

    RuntimeError: You are using a layer with `activity_regularizer` in a control flow branch, e.g.:
    
          class TestModel(tf.keras.Model):
    
            def __init__(self):
              super(TestModel, self).__init__(name='test_model')
              self.dense = tf.keras.layers.Dense(2, activity_regularizer='l2')
    
            def call(self, x, training=None):
              if training:
                return self.dense(x)
              else:
                return self.dense(x)
          
    This is currently not supported. Please move your call to the layer with `activity_regularizer` out of the control flow branch, e.g.:
    
          class TestModel(tf.keras.Model):
    
            def __init__(self):
              super(TestModel, self).__init__(name='test_model')
              self.dense = tf.keras.layers.Dense(2, activity_regularizer='l2')
    
            def call(self, x, training=None):
              return self.dense(x)
          
    You can also resolve this by marking your outer model/layer dynamic (eager-only) by passing `dynamic=True` to the layer constructor. Any kind of control flow is supported with dynamic layers. Note that using `dynamic=True` requires you to implement static shape inference in the `compute_output_shape(input_shape)` method.
Traceback (most recent call last):
  File ".\_2_train.py", line 282, in train
    forecaster.fit(x_train, y_train, batch_size=batch_size, epochs=epochs, workers=workers,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 66, in _method_wrapper
    return method(self, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 785, in fit
    tmp_logs = train_function(iterator)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 580, in __call__
    result = self._call(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 627, in _call
    self._initialize(args, kwds, add_initializers_to=initializers)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 505, in _initialize
    self._stateful_fn._get_concrete_function_internal_garbage_collected(  # pylint: disable=protected-access
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2446, in _get_concrete_function_internal_garbage_collected
    graph_function, _, _ = self._maybe_define_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2777, in _maybe_define_function
    graph_function = self._create_graph_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2657, in _create_graph_function
    func_graph_module.func_graph_from_py_func(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 981, in func_graph_from_py_func
    func_outputs = python_func(*func_args, **func_kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 441, in wrapped_fn
    return weak_wrapped_fn().__wrapped__(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 968, in wrapper
    raise e.ag_error_metadata.to_exception(e)
RuntimeError: in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:465 train_step  **
        y_pred = self(x, training=True)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py:927 __call__
        outputs = call_fn(cast_inputs, *args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\sequential.py:291 call
        outputs = layer(inputs, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\layers\recurrent.py:654 __call__
        return super(RNN, self).__call__(inputs, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py:927 __call__
        outputs = call_fn(cast_inputs, *args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\layers\recurrent.py:784 call
        last_output, outputs, states = K.rnn(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\backend.py:4236 rnn
        final_outputs = control_flow_ops.while_loop(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\control_flow_ops.py:2679 while_loop
        return while_v2.while_loop(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\while_v2.py:188 while_loop
        body_graph = func_graph_module.func_graph_from_py_func(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py:981 func_graph_from_py_func
        func_outputs = python_func(*func_args, **func_kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\while_v2.py:174 wrapped_body
        outputs = body(*_pack_sequence_as(orig_loop_vars, args))
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\backend.py:4222 _step
        output, new_states = step_function(current_input,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\layers\recurrent.py:780 step
        output, new_states = cell_call_fn(inputs, states, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py:955 __call__
        self._handle_activity_regularization(inputs, outputs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py:2214 _handle_activity_regularization
        base_layer_utils.check_graph_consistency(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer_utils.py:546 check_graph_consistency
        raise RuntimeError(

    RuntimeError: You are using a layer with `activity_regularizer` in a control flow branch, e.g.:
    
          class TestModel(tf.keras.Model):
    
            def __init__(self):
              super(TestModel, self).__init__(name='test_model')
              self.dense = tf.keras.layers.Dense(2, activity_regularizer='l2')
    
            def call(self, x, training=None):
              if training:
                return self.dense(x)
              else:
                return self.dense(x)
          
    This is currently not supported. Please move your call to the layer with `activity_regularizer` out of the control flow branch, e.g.:
    
          class TestModel(tf.keras.Model):
    
            def __init__(self):
              super(TestModel, self).__init__(name='test_model')
              self.dense = tf.keras.layers.Dense(2, activity_regularizer='l2')
    
            def call(self, x, training=None):
              return self.dense(x)
          
    You can also resolve this by marking your outer model/layer dynamic (eager-only) by passing `dynamic=True` to the layer constructor. Any kind of control flow is supported with dynamic layers. Note that using `dynamic=True` requires you to implement static shape inference in the `compute_output_shape(input_shape)` method.


24.Apr 2020 10:25:11 correct LSTM model creation and compilation

24.Apr 2020 11:38:28 correct model training, correct saving of model and weights

24.Apr 2020 11:38:28 settings modified and saved

24.Apr 2020 11:41:18 correct LSTM model creation and compilation

24.Apr 2020 12:44:07 correct model training, correct saving of model and weights

24.Apr 2020 12:44:07 settings modified and saved

24.Apr 2020 14:30:27 correct LSTM model creation and compilation

24.Apr 2020 14:58:16 correct model training, correct saving of model and weights

24.Apr 2020 14:58:16 settings modified and saved

24.Apr 2020 15:22:01 correct LSTM model creation and compilation

24.Apr 2020 16:35:52 correct model training, correct saving of model and weights

24.Apr 2020 16:35:52 settings modified and saved

24.Apr 2020 16:52:35 correct LSTM model creation and compilation

24.Apr 2020 16:56:03 correct LSTM model creation and compilation

24.Apr 2020 18:33:31 correct model training, correct saving of model and weights

24.Apr 2020 18:33:31 settings modified and saved

24.Apr 2020 18:39:34 correct LSTM model creation and compilation

24.Apr 2020 19:28:36 correct model training, correct saving of model and weights

24.Apr 2020 19:28:36 settings modified and saved

24.Apr 2020 19:52:50 correct LSTM model creation and compilation

24.Apr 2020 21:19:34 correct model training, correct saving of model and weights

24.Apr 2020 21:19:34 settings modified and saved

24.Apr 2020 21:25:36 correct LSTM model creation and compilation

25.Apr 2020 05:33:24 correct model training, correct saving of model and weights

25.Apr 2020 05:33:24 settings modified and saved

25.Apr 2020 06:55:47 correct LSTM model creation and compilation

25.Apr 2020 07:04:29 correct LSTM model creation and compilation

25.Apr 2020 07:11:59 correct LSTM model creation and compilation

25.Apr 2020 09:07:57 correct model training, correct saving of model and weights

25.Apr 2020 09:07:57 settings modified and saved

25.Apr 2020 09:34:58 correct LSTM model creation and compilation

25.Apr 2020 11:20:24 correct model training, correct saving of model and weights

25.Apr 2020 11:20:24 settings modified and saved

25.Apr 2020 11:33:03 LSTM model creation or compile error
'property' object is not iterable
Traceback (most recent call last):
  File ".\_2_train.py", line 237, in train
    forecaster.compile(optimizer=optimizer_function,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 325, in compile
    self._validate_compile(optimizer, metrics, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 1535, in _validate_compile
    for v in getattr(metric, 'variables', []):
TypeError: 'property' object is not iterable

25.Apr 2020 11:33:03 model training error
'NoneType' object has no attribute 'fit'
Traceback (most recent call last):
  File ".\_2_train.py", line 296, in train
    forecaster.fit(x_train, y_train, batch_size=batch_size, epochs=epochs, workers=workers,
AttributeError: 'NoneType' object has no attribute 'fit'

25.Apr 2020 11:34:18 LSTM model creation or compile error
'property' object is not iterable
Traceback (most recent call last):
  File ".\_2_train.py", line 238, in train
    forecaster.compile(optimizer=optimizer_function,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 325, in compile
    self._validate_compile(optimizer, metrics, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 1535, in _validate_compile
    for v in getattr(metric, 'variables', []):
TypeError: 'property' object is not iterable

25.Apr 2020 11:34:18 model training error
'NoneType' object has no attribute 'fit'
Traceback (most recent call last):
  File ".\_2_train.py", line 297, in train
    forecaster.fit(x_train, y_train, batch_size=batch_size, epochs=epochs, workers=workers,
AttributeError: 'NoneType' object has no attribute 'fit'

25.Apr 2020 11:35:36 LSTM model creation or compile error
'property' object is not iterable
Traceback (most recent call last):
  File ".\_2_train.py", line 238, in train
    forecaster.compile(optimizer=optimizer_function,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 325, in compile
    self._validate_compile(optimizer, metrics, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 1535, in _validate_compile
    for v in getattr(metric, 'variables', []):
TypeError: 'property' object is not iterable

25.Apr 2020 11:35:36 model training error
'NoneType' object has no attribute 'fit'
Traceback (most recent call last):
  File ".\_2_train.py", line 297, in train
    forecaster.fit(x_train, y_train, batch_size=batch_size, epochs=epochs, workers=workers,
AttributeError: 'NoneType' object has no attribute 'fit'

25.Apr 2020 11:39:24 LSTM model creation or compile error
'property' object is not iterable
Traceback (most recent call last):
  File ".\_2_train.py", line 237, in train
    forecaster.compile(optimizer=optimizer_function,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 325, in compile
    self._validate_compile(optimizer, metrics, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 1535, in _validate_compile
    for v in getattr(metric, 'variables', []):
TypeError: 'property' object is not iterable

25.Apr 2020 11:39:24 model training error
'NoneType' object has no attribute 'fit'
Traceback (most recent call last):
  File ".\_2_train.py", line 296, in train
    forecaster.fit(x_train, y_train, batch_size=batch_size, epochs=epochs, workers=workers,
AttributeError: 'NoneType' object has no attribute 'fit'

25.Apr 2020 11:41:58 LSTM model creation or compile error
'property' object is not iterable
Traceback (most recent call last):
  File ".\_2_train.py", line 237, in train
    forecaster.compile(optimizer=optimizer_function,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 325, in compile
    self._validate_compile(optimizer, metrics, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 1535, in _validate_compile
    for v in getattr(metric, 'variables', []):
TypeError: 'property' object is not iterable

25.Apr 2020 11:41:58 model training error
'NoneType' object has no attribute 'fit'
Traceback (most recent call last):
  File ".\_2_train.py", line 296, in train
    forecaster.fit(x_train, y_train, batch_size=batch_size, epochs=epochs, workers=workers,
AttributeError: 'NoneType' object has no attribute 'fit'

25.Apr 2020 11:48:23 correct LSTM model creation and compilation

25.Apr 2020 14:00:08 correct model training, correct saving of model and weights

25.Apr 2020 14:00:08 settings modified and saved

25.Apr 2020 14:35:36 correct LSTM model creation and compilation

25.Apr 2020 14:37:53 correct model training, correct saving of model and weights

25.Apr 2020 14:37:53 settings modified and saved

25.Apr 2020 14:43:12 correct LSTM model creation and compilation

25.Apr 2020 14:45:27 correct model training, correct saving of model and weights

25.Apr 2020 14:45:27 settings modified and saved

25.Apr 2020 14:46:42 correct LSTM model creation and compilation

25.Apr 2020 14:48:37 correct LSTM model creation and compilation

25.Apr 2020 14:50:54 correct LSTM model creation and compilation

25.Apr 2020 14:53:56 correct model training, correct saving of model and weights

25.Apr 2020 14:53:56 settings modified and saved

25.Apr 2020 14:55:42 correct LSTM model creation and compilation

25.Apr 2020 14:58:08 correct model training, correct saving of model and weights

25.Apr 2020 14:58:08 settings modified and saved

25.Apr 2020 14:59:07 correct LSTM model creation and compilation

25.Apr 2020 15:01:31 correct model training, correct saving of model and weights

25.Apr 2020 15:01:31 settings modified and saved

25.Apr 2020 15:03:43 correct LSTM model creation and compilation

25.Apr 2020 15:06:06 correct model training, correct saving of model and weights

25.Apr 2020 15:06:06 settings modified and saved

25.Apr 2020 15:07:41 correct LSTM model creation and compilation

25.Apr 2020 15:10:01 correct model training, correct saving of model and weights

25.Apr 2020 15:10:01 settings modified and saved

25.Apr 2020 15:10:59 correct LSTM model creation and compilation

25.Apr 2020 15:13:06 correct model training, correct saving of model and weights

25.Apr 2020 15:13:06 settings modified and saved

25.Apr 2020 15:14:01 correct LSTM model creation and compilation

25.Apr 2020 15:16:08 correct model training, correct saving of model and weights

25.Apr 2020 15:16:08 settings modified and saved

25.Apr 2020 15:18:00 correct LSTM model creation and compilation

25.Apr 2020 15:33:12 correct model training, correct saving of model and weights

25.Apr 2020 15:33:12 settings modified and saved

25.Apr 2020 16:07:56 correct LSTM model creation and compilation

27.Apr 2020 13:59:32 correct model training, correct saving of model and weights

27.Apr 2020 13:59:32 settings modified and saved

02.May 2020 13:21:53 correct LSTM model creation and compilation

02.May 2020 13:28:20 correct LSTM model creation and compilation

02.May 2020 13:37:00 model training error
list index out of range
Traceback (most recent call last):
  File ".\_2_train.py", line 312, in train
    time_serie = nof_time_series_list[group_iterator]
IndexError: list index out of range

02.May 2020 13:56:17 correct LSTM model creation and compilation

02.May 2020 14:25:11 correct model training, correct saving of model and weights

02.May 2020 14:25:11 settings modified and saved

02.May 2020 15:23:09 correct LSTM model creation and compilation

02.May 2020 15:51:14 correct model training, correct saving of model and weights

02.May 2020 15:51:14 settings modified and saved

02.May 2020 20:08:12 correct LSTM model creation and compilation

02.May 2020 20:38:54 correct model training, correct saving of model and weights

02.May 2020 20:38:54 settings modified and saved

03.May 2020 00:02:11 correct LSTM model creation and compilation

03.May 2020 00:30:01 correct model training, correct saving of model and weights

03.May 2020 00:30:01 settings modified and saved

03.May 2020 01:23:18 correct LSTM model creation and compilation

03.May 2020 01:51:15 correct model training, correct saving of model and weights

03.May 2020 01:51:15 settings modified and saved

03.May 2020 08:31:50 correct LSTM model creation and compilation

03.May 2020 09:01:32 correct model training, correct saving of model and weights

03.May 2020 09:01:32 settings modified and saved

03.May 2020 20:44:47 LSTM model creation or compile error
'model_type'
Traceback (most recent call last):
  File ".\_2_train.py", line 203, in train
    elif local_script_settings['model_type'] == 'PeepHole_Encode_Decode':
KeyError: 'model_type'

03.May 2020 20:44:47 model training error
'NoneType' object has no attribute 'fit'
Traceback (most recent call last):
  File ".\_2_train.py", line 310, in train
    forecaster.fit(x_train, y_train, batch_size=batch_size, epochs=epochs, workers=workers,
AttributeError: 'NoneType' object has no attribute 'fit'

03.May 2020 20:54:06 correct LSTM model creation and compilation

03.May 2020 20:54:06 model training error
in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:465 train_step  **
        y_pred = self(x, training=True)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py:927 __call__
        outputs = call_fn(cast_inputs, *args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\sequential.py:291 call
        outputs = layer(inputs, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\layers\recurrent.py:654 __call__
        return super(RNN, self).__call__(inputs, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py:927 __call__
        outputs = call_fn(cast_inputs, *args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\layers\recurrent.py:784 call
        last_output, outputs, states = K.rnn(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\backend.py:4236 rnn
        final_outputs = control_flow_ops.while_loop(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\control_flow_ops.py:2679 while_loop
        return while_v2.while_loop(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\while_v2.py:188 while_loop
        body_graph = func_graph_module.func_graph_from_py_func(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py:981 func_graph_from_py_func
        func_outputs = python_func(*func_args, **func_kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\while_v2.py:174 wrapped_body
        outputs = body(*_pack_sequence_as(orig_loop_vars, args))
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\backend.py:4222 _step
        output, new_states = step_function(current_input,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\layers\recurrent.py:780 step
        output, new_states = cell_call_fn(inputs, states, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py:955 __call__
        self._handle_activity_regularization(inputs, outputs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py:2214 _handle_activity_regularization
        base_layer_utils.check_graph_consistency(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer_utils.py:546 check_graph_consistency
        raise RuntimeError(

    RuntimeError: You are using a layer with `activity_regularizer` in a control flow branch, e.g.:
    
          class TestModel(tf.keras.Model):
    
            def __init__(self):
              super(TestModel, self).__init__(name='test_model')
              self.dense = tf.keras.layers.Dense(2, activity_regularizer='l2')
    
            def call(self, x, training=None):
              if training:
                return self.dense(x)
              else:
                return self.dense(x)
          
    This is currently not supported. Please move your call to the layer with `activity_regularizer` out of the control flow branch, e.g.:
    
          class TestModel(tf.keras.Model):
    
            def __init__(self):
              super(TestModel, self).__init__(name='test_model')
              self.dense = tf.keras.layers.Dense(2, activity_regularizer='l2')
    
            def call(self, x, training=None):
              return self.dense(x)
          
    You can also resolve this by marking your outer model/layer dynamic (eager-only) by passing `dynamic=True` to the layer constructor. Any kind of control flow is supported with dynamic layers. Note that using `dynamic=True` requires you to implement static shape inference in the `compute_output_shape(input_shape)` method.
Traceback (most recent call last):
  File ".\_2_train.py", line 352, in train
    forecaster.fit(x_train, y_train, batch_size=batch_size, epochs=epochs, workers=workers,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 66, in _method_wrapper
    return method(self, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 785, in fit
    tmp_logs = train_function(iterator)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 580, in __call__
    result = self._call(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 627, in _call
    self._initialize(args, kwds, add_initializers_to=initializers)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 505, in _initialize
    self._stateful_fn._get_concrete_function_internal_garbage_collected(  # pylint: disable=protected-access
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2446, in _get_concrete_function_internal_garbage_collected
    graph_function, _, _ = self._maybe_define_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2777, in _maybe_define_function
    graph_function = self._create_graph_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2657, in _create_graph_function
    func_graph_module.func_graph_from_py_func(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 981, in func_graph_from_py_func
    func_outputs = python_func(*func_args, **func_kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 441, in wrapped_fn
    return weak_wrapped_fn().__wrapped__(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 968, in wrapper
    raise e.ag_error_metadata.to_exception(e)
RuntimeError: in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:465 train_step  **
        y_pred = self(x, training=True)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py:927 __call__
        outputs = call_fn(cast_inputs, *args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\sequential.py:291 call
        outputs = layer(inputs, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\layers\recurrent.py:654 __call__
        return super(RNN, self).__call__(inputs, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py:927 __call__
        outputs = call_fn(cast_inputs, *args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\layers\recurrent.py:784 call
        last_output, outputs, states = K.rnn(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\backend.py:4236 rnn
        final_outputs = control_flow_ops.while_loop(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\control_flow_ops.py:2679 while_loop
        return while_v2.while_loop(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\while_v2.py:188 while_loop
        body_graph = func_graph_module.func_graph_from_py_func(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py:981 func_graph_from_py_func
        func_outputs = python_func(*func_args, **func_kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\while_v2.py:174 wrapped_body
        outputs = body(*_pack_sequence_as(orig_loop_vars, args))
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\backend.py:4222 _step
        output, new_states = step_function(current_input,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\layers\recurrent.py:780 step
        output, new_states = cell_call_fn(inputs, states, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py:955 __call__
        self._handle_activity_regularization(inputs, outputs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py:2214 _handle_activity_regularization
        base_layer_utils.check_graph_consistency(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer_utils.py:546 check_graph_consistency
        raise RuntimeError(

    RuntimeError: You are using a layer with `activity_regularizer` in a control flow branch, e.g.:
    
          class TestModel(tf.keras.Model):
    
            def __init__(self):
              super(TestModel, self).__init__(name='test_model')
              self.dense = tf.keras.layers.Dense(2, activity_regularizer='l2')
    
            def call(self, x, training=None):
              if training:
                return self.dense(x)
              else:
                return self.dense(x)
          
    This is currently not supported. Please move your call to the layer with `activity_regularizer` out of the control flow branch, e.g.:
    
          class TestModel(tf.keras.Model):
    
            def __init__(self):
              super(TestModel, self).__init__(name='test_model')
              self.dense = tf.keras.layers.Dense(2, activity_regularizer='l2')
    
            def call(self, x, training=None):
              return self.dense(x)
          
    You can also resolve this by marking your outer model/layer dynamic (eager-only) by passing `dynamic=True` to the layer constructor. Any kind of control flow is supported with dynamic layers. Note that using `dynamic=True` requires you to implement static shape inference in the `compute_output_shape(input_shape)` method.


03.May 2020 20:55:03 correct LSTM model creation and compilation

03.May 2020 20:55:03 model training error
in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:465 train_step  **
        y_pred = self(x, training=True)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py:927 __call__
        outputs = call_fn(cast_inputs, *args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\sequential.py:291 call
        outputs = layer(inputs, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py:885 __call__
        input_spec.assert_input_compatibility(self.input_spec, inputs,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\input_spec.py:176 assert_input_compatibility
        raise ValueError('Input ' + str(input_index) + ' of layer ' +

    ValueError: Input 0 of layer repeat_vector is incompatible with the layer: expected ndim=2, found ndim=3. Full shape received: [None, 28, 48]
Traceback (most recent call last):
  File ".\_2_train.py", line 348, in train
    forecaster.fit(x_train, y_train, batch_size=batch_size, epochs=epochs, workers=workers,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 66, in _method_wrapper
    return method(self, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 785, in fit
    tmp_logs = train_function(iterator)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 580, in __call__
    result = self._call(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 627, in _call
    self._initialize(args, kwds, add_initializers_to=initializers)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 505, in _initialize
    self._stateful_fn._get_concrete_function_internal_garbage_collected(  # pylint: disable=protected-access
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2446, in _get_concrete_function_internal_garbage_collected
    graph_function, _, _ = self._maybe_define_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2777, in _maybe_define_function
    graph_function = self._create_graph_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2657, in _create_graph_function
    func_graph_module.func_graph_from_py_func(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 981, in func_graph_from_py_func
    func_outputs = python_func(*func_args, **func_kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 441, in wrapped_fn
    return weak_wrapped_fn().__wrapped__(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 968, in wrapper
    raise e.ag_error_metadata.to_exception(e)
ValueError: in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:465 train_step  **
        y_pred = self(x, training=True)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py:927 __call__
        outputs = call_fn(cast_inputs, *args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\sequential.py:291 call
        outputs = layer(inputs, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py:885 __call__
        input_spec.assert_input_compatibility(self.input_spec, inputs,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\input_spec.py:176 assert_input_compatibility
        raise ValueError('Input ' + str(input_index) + ' of layer ' +

    ValueError: Input 0 of layer repeat_vector is incompatible with the layer: expected ndim=2, found ndim=3. Full shape received: [None, 28, 48]


03.May 2020 20:57:02 correct LSTM model creation and compilation

03.May 2020 20:57:02 model training error
in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:465 train_step  **
        y_pred = self(x, training=True)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py:927 __call__
        outputs = call_fn(cast_inputs, *args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\sequential.py:291 call
        outputs = layer(inputs, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py:885 __call__
        input_spec.assert_input_compatibility(self.input_spec, inputs,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\input_spec.py:176 assert_input_compatibility
        raise ValueError('Input ' + str(input_index) + ' of layer ' +

    ValueError: Input 0 of layer repeat_vector is incompatible with the layer: expected ndim=2, found ndim=3. Full shape received: [None, 28, 48]
Traceback (most recent call last):
  File ".\_2_train.py", line 348, in train
    forecaster.fit(x_train, y_train, batch_size=batch_size, epochs=epochs, workers=workers,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 66, in _method_wrapper
    return method(self, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 785, in fit
    tmp_logs = train_function(iterator)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 580, in __call__
    result = self._call(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 627, in _call
    self._initialize(args, kwds, add_initializers_to=initializers)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 505, in _initialize
    self._stateful_fn._get_concrete_function_internal_garbage_collected(  # pylint: disable=protected-access
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2446, in _get_concrete_function_internal_garbage_collected
    graph_function, _, _ = self._maybe_define_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2777, in _maybe_define_function
    graph_function = self._create_graph_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2657, in _create_graph_function
    func_graph_module.func_graph_from_py_func(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 981, in func_graph_from_py_func
    func_outputs = python_func(*func_args, **func_kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 441, in wrapped_fn
    return weak_wrapped_fn().__wrapped__(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 968, in wrapper
    raise e.ag_error_metadata.to_exception(e)
ValueError: in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:465 train_step  **
        y_pred = self(x, training=True)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py:927 __call__
        outputs = call_fn(cast_inputs, *args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\sequential.py:291 call
        outputs = layer(inputs, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py:885 __call__
        input_spec.assert_input_compatibility(self.input_spec, inputs,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\input_spec.py:176 assert_input_compatibility
        raise ValueError('Input ' + str(input_index) + ' of layer ' +

    ValueError: Input 0 of layer repeat_vector is incompatible with the layer: expected ndim=2, found ndim=3. Full shape received: [None, 28, 48]


03.May 2020 21:00:32 correct LSTM model creation and compilation

03.May 2020 21:00:32 model training error
in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:465 train_step  **
        y_pred = self(x, training=True)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py:927 __call__
        outputs = call_fn(cast_inputs, *args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\sequential.py:291 call
        outputs = layer(inputs, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py:885 __call__
        input_spec.assert_input_compatibility(self.input_spec, inputs,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\input_spec.py:176 assert_input_compatibility
        raise ValueError('Input ' + str(input_index) + ' of layer ' +

    ValueError: Input 0 of layer repeat_vector is incompatible with the layer: expected ndim=2, found ndim=3. Full shape received: [None, 28, 48]
Traceback (most recent call last):
  File ".\_2_train.py", line 348, in train
    forecaster.fit(x_train, y_train, batch_size=batch_size, epochs=epochs, workers=workers,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 66, in _method_wrapper
    return method(self, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 785, in fit
    tmp_logs = train_function(iterator)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 580, in __call__
    result = self._call(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 627, in _call
    self._initialize(args, kwds, add_initializers_to=initializers)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 505, in _initialize
    self._stateful_fn._get_concrete_function_internal_garbage_collected(  # pylint: disable=protected-access
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2446, in _get_concrete_function_internal_garbage_collected
    graph_function, _, _ = self._maybe_define_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2777, in _maybe_define_function
    graph_function = self._create_graph_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2657, in _create_graph_function
    func_graph_module.func_graph_from_py_func(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 981, in func_graph_from_py_func
    func_outputs = python_func(*func_args, **func_kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 441, in wrapped_fn
    return weak_wrapped_fn().__wrapped__(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 968, in wrapper
    raise e.ag_error_metadata.to_exception(e)
ValueError: in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:465 train_step  **
        y_pred = self(x, training=True)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py:927 __call__
        outputs = call_fn(cast_inputs, *args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\sequential.py:291 call
        outputs = layer(inputs, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py:885 __call__
        input_spec.assert_input_compatibility(self.input_spec, inputs,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\input_spec.py:176 assert_input_compatibility
        raise ValueError('Input ' + str(input_index) + ' of layer ' +

    ValueError: Input 0 of layer repeat_vector is incompatible with the layer: expected ndim=2, found ndim=3. Full shape received: [None, 28, 48]


03.May 2020 21:05:36 correct LSTM model creation and compilation

03.May 2020 21:05:36 model training error
in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:465 train_step  **
        y_pred = self(x, training=True)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py:927 __call__
        outputs = call_fn(cast_inputs, *args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\sequential.py:291 call
        outputs = layer(inputs, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py:885 __call__
        input_spec.assert_input_compatibility(self.input_spec, inputs,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\input_spec.py:176 assert_input_compatibility
        raise ValueError('Input ' + str(input_index) + ' of layer ' +

    ValueError: Input 0 of layer repeat_vector is incompatible with the layer: expected ndim=2, found ndim=3. Full shape received: [None, 28, 48]
Traceback (most recent call last):
  File ".\_2_train.py", line 348, in train
    forecaster.fit(x_train, y_train, batch_size=batch_size, epochs=epochs, workers=workers,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 66, in _method_wrapper
    return method(self, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 785, in fit
    tmp_logs = train_function(iterator)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 580, in __call__
    result = self._call(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 627, in _call
    self._initialize(args, kwds, add_initializers_to=initializers)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 505, in _initialize
    self._stateful_fn._get_concrete_function_internal_garbage_collected(  # pylint: disable=protected-access
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2446, in _get_concrete_function_internal_garbage_collected
    graph_function, _, _ = self._maybe_define_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2777, in _maybe_define_function
    graph_function = self._create_graph_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2657, in _create_graph_function
    func_graph_module.func_graph_from_py_func(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 981, in func_graph_from_py_func
    func_outputs = python_func(*func_args, **func_kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 441, in wrapped_fn
    return weak_wrapped_fn().__wrapped__(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 968, in wrapper
    raise e.ag_error_metadata.to_exception(e)
ValueError: in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:465 train_step  **
        y_pred = self(x, training=True)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py:927 __call__
        outputs = call_fn(cast_inputs, *args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\sequential.py:291 call
        outputs = layer(inputs, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py:885 __call__
        input_spec.assert_input_compatibility(self.input_spec, inputs,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\input_spec.py:176 assert_input_compatibility
        raise ValueError('Input ' + str(input_index) + ' of layer ' +

    ValueError: Input 0 of layer repeat_vector is incompatible with the layer: expected ndim=2, found ndim=3. Full shape received: [None, 28, 48]


03.May 2020 21:07:41 correct LSTM model creation and compilation

03.May 2020 21:07:41 model training error
in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:465 train_step  **
        y_pred = self(x, training=True)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py:927 __call__
        outputs = call_fn(cast_inputs, *args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\sequential.py:291 call
        outputs = layer(inputs, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py:885 __call__
        input_spec.assert_input_compatibility(self.input_spec, inputs,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\input_spec.py:176 assert_input_compatibility
        raise ValueError('Input ' + str(input_index) + ' of layer ' +

    ValueError: Input 0 of layer repeat_vector is incompatible with the layer: expected ndim=2, found ndim=3. Full shape received: [None, 28, 48]
Traceback (most recent call last):
  File ".\_2_train.py", line 348, in train
    forecaster.fit(x_train, y_train, batch_size=batch_size, epochs=epochs, workers=workers,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 66, in _method_wrapper
    return method(self, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 785, in fit
    tmp_logs = train_function(iterator)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 580, in __call__
    result = self._call(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 627, in _call
    self._initialize(args, kwds, add_initializers_to=initializers)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 505, in _initialize
    self._stateful_fn._get_concrete_function_internal_garbage_collected(  # pylint: disable=protected-access
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2446, in _get_concrete_function_internal_garbage_collected
    graph_function, _, _ = self._maybe_define_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2777, in _maybe_define_function
    graph_function = self._create_graph_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2657, in _create_graph_function
    func_graph_module.func_graph_from_py_func(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 981, in func_graph_from_py_func
    func_outputs = python_func(*func_args, **func_kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 441, in wrapped_fn
    return weak_wrapped_fn().__wrapped__(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 968, in wrapper
    raise e.ag_error_metadata.to_exception(e)
ValueError: in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:465 train_step  **
        y_pred = self(x, training=True)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py:927 __call__
        outputs = call_fn(cast_inputs, *args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\sequential.py:291 call
        outputs = layer(inputs, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py:885 __call__
        input_spec.assert_input_compatibility(self.input_spec, inputs,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\input_spec.py:176 assert_input_compatibility
        raise ValueError('Input ' + str(input_index) + ' of layer ' +

    ValueError: Input 0 of layer repeat_vector is incompatible with the layer: expected ndim=2, found ndim=3. Full shape received: [None, 28, 48]


03.May 2020 21:09:44 correct LSTM model creation and compilation

03.May 2020 21:09:45 model training error
in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:465 train_step  **
        y_pred = self(x, training=True)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py:927 __call__
        outputs = call_fn(cast_inputs, *args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\sequential.py:291 call
        outputs = layer(inputs, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py:897 __call__
        self._maybe_build(inputs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py:2416 _maybe_build
        self.build(input_shapes)  # pylint:disable=not-callable
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\layers\wrappers.py:177 build
        raise ValueError(

    ValueError: `TimeDistributed` Layer should be passed an `input_shape ` with at least 3 dimensions, received: [None, 48]
Traceback (most recent call last):
  File ".\_2_train.py", line 348, in train
    forecaster.fit(x_train, y_train, batch_size=batch_size, epochs=epochs, workers=workers,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 66, in _method_wrapper
    return method(self, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 785, in fit
    tmp_logs = train_function(iterator)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 580, in __call__
    result = self._call(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 627, in _call
    self._initialize(args, kwds, add_initializers_to=initializers)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 505, in _initialize
    self._stateful_fn._get_concrete_function_internal_garbage_collected(  # pylint: disable=protected-access
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2446, in _get_concrete_function_internal_garbage_collected
    graph_function, _, _ = self._maybe_define_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2777, in _maybe_define_function
    graph_function = self._create_graph_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2657, in _create_graph_function
    func_graph_module.func_graph_from_py_func(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 981, in func_graph_from_py_func
    func_outputs = python_func(*func_args, **func_kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 441, in wrapped_fn
    return weak_wrapped_fn().__wrapped__(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 968, in wrapper
    raise e.ag_error_metadata.to_exception(e)
ValueError: in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:465 train_step  **
        y_pred = self(x, training=True)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py:927 __call__
        outputs = call_fn(cast_inputs, *args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\sequential.py:291 call
        outputs = layer(inputs, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py:897 __call__
        self._maybe_build(inputs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py:2416 _maybe_build
        self.build(input_shapes)  # pylint:disable=not-callable
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\layers\wrappers.py:177 build
        raise ValueError(

    ValueError: `TimeDistributed` Layer should be passed an `input_shape ` with at least 3 dimensions, received: [None, 48]


03.May 2020 21:10:47 correct LSTM model creation and compilation

03.May 2020 21:10:48 model training error
in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:466 train_step  **
        loss = self.compiled_loss(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:204 __call__
        loss_value = loss_obj(y_t, y_p, sample_weight=sw)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\losses.py:143 __call__
        losses = self.call(y_true, y_pred)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\losses.py:246 call
        return self.fn(y_true, y_pred, **self._fn_kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\losses.py:1265 mean_absolute_percentage_error
        (y_true - y_pred) / K.maximum(math_ops.abs(y_true), K.epsilon()))
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\math_ops.py:984 binary_op_wrapper
        return func(x, y, name=name)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\gen_math_ops.py:10102 sub
        _, _, _op, _outputs = _op_def_library._apply_op_helper(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\op_def_library.py:742 _apply_op_helper
        op = g._create_op_internal(op_type_name, inputs, dtypes=None,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py:593 _create_op_internal
        return super(FuncGraph, self)._create_op_internal(  # pylint: disable=protected-access
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py:3319 _create_op_internal
        ret = Operation(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py:1816 __init__
        self._c_op = _create_c_op(self._graph, node_def, inputs,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py:1657 _create_c_op
        raise ValueError(str(e))

    ValueError: Dimensions must be equal, but are 28 and 3 for '{{node mean_absolute_percentage_error/sub}} = Sub[T=DT_FLOAT](IteratorGetNext:1, mean_absolute_percentage_error/remove_squeezable_dimensions/Squeeze)' with input shapes: [?,28], [?,3].
Traceback (most recent call last):
  File ".\_2_train.py", line 348, in train
    forecaster.fit(x_train, y_train, batch_size=batch_size, epochs=epochs, workers=workers,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 66, in _method_wrapper
    return method(self, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 785, in fit
    tmp_logs = train_function(iterator)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 580, in __call__
    result = self._call(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 627, in _call
    self._initialize(args, kwds, add_initializers_to=initializers)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 505, in _initialize
    self._stateful_fn._get_concrete_function_internal_garbage_collected(  # pylint: disable=protected-access
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2446, in _get_concrete_function_internal_garbage_collected
    graph_function, _, _ = self._maybe_define_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2777, in _maybe_define_function
    graph_function = self._create_graph_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2657, in _create_graph_function
    func_graph_module.func_graph_from_py_func(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 981, in func_graph_from_py_func
    func_outputs = python_func(*func_args, **func_kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 441, in wrapped_fn
    return weak_wrapped_fn().__wrapped__(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 968, in wrapper
    raise e.ag_error_metadata.to_exception(e)
ValueError: in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:466 train_step  **
        loss = self.compiled_loss(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:204 __call__
        loss_value = loss_obj(y_t, y_p, sample_weight=sw)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\losses.py:143 __call__
        losses = self.call(y_true, y_pred)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\losses.py:246 call
        return self.fn(y_true, y_pred, **self._fn_kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\losses.py:1265 mean_absolute_percentage_error
        (y_true - y_pred) / K.maximum(math_ops.abs(y_true), K.epsilon()))
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\math_ops.py:984 binary_op_wrapper
        return func(x, y, name=name)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\gen_math_ops.py:10102 sub
        _, _, _op, _outputs = _op_def_library._apply_op_helper(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\op_def_library.py:742 _apply_op_helper
        op = g._create_op_internal(op_type_name, inputs, dtypes=None,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py:593 _create_op_internal
        return super(FuncGraph, self)._create_op_internal(  # pylint: disable=protected-access
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py:3319 _create_op_internal
        ret = Operation(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py:1816 __init__
        self._c_op = _create_c_op(self._graph, node_def, inputs,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py:1657 _create_c_op
        raise ValueError(str(e))

    ValueError: Dimensions must be equal, but are 28 and 3 for '{{node mean_absolute_percentage_error/sub}} = Sub[T=DT_FLOAT](IteratorGetNext:1, mean_absolute_percentage_error/remove_squeezable_dimensions/Squeeze)' with input shapes: [?,28], [?,3].


03.May 2020 21:11:16 correct LSTM model creation and compilation

03.May 2020 21:26:52 correct model training, correct saving of model and weights

03.May 2020 21:26:52 settings modified and saved

03.May 2020 21:34:49 correct LSTM model creation and compilation

03.May 2020 21:34:49 model training error
in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:465 train_step  **
        y_pred = self(x, training=True)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py:927 __call__
        outputs = call_fn(cast_inputs, *args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\sequential.py:291 call
        outputs = layer(inputs, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py:885 __call__
        input_spec.assert_input_compatibility(self.input_spec, inputs,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\input_spec.py:176 assert_input_compatibility
        raise ValueError('Input ' + str(input_index) + ' of layer ' +

    ValueError: Input 0 of layer repeat_vector is incompatible with the layer: expected ndim=2, found ndim=3. Full shape received: [None, 28, 96]
Traceback (most recent call last):
  File ".\_2_train.py", line 348, in train
    forecaster.fit(x_train, y_train, batch_size=batch_size, epochs=epochs, workers=workers,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 66, in _method_wrapper
    return method(self, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 785, in fit
    tmp_logs = train_function(iterator)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 580, in __call__
    result = self._call(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 627, in _call
    self._initialize(args, kwds, add_initializers_to=initializers)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 505, in _initialize
    self._stateful_fn._get_concrete_function_internal_garbage_collected(  # pylint: disable=protected-access
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2446, in _get_concrete_function_internal_garbage_collected
    graph_function, _, _ = self._maybe_define_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2777, in _maybe_define_function
    graph_function = self._create_graph_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2657, in _create_graph_function
    func_graph_module.func_graph_from_py_func(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 981, in func_graph_from_py_func
    func_outputs = python_func(*func_args, **func_kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 441, in wrapped_fn
    return weak_wrapped_fn().__wrapped__(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 968, in wrapper
    raise e.ag_error_metadata.to_exception(e)
ValueError: in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:465 train_step  **
        y_pred = self(x, training=True)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py:927 __call__
        outputs = call_fn(cast_inputs, *args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\sequential.py:291 call
        outputs = layer(inputs, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py:885 __call__
        input_spec.assert_input_compatibility(self.input_spec, inputs,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\input_spec.py:176 assert_input_compatibility
        raise ValueError('Input ' + str(input_index) + ' of layer ' +

    ValueError: Input 0 of layer repeat_vector is incompatible with the layer: expected ndim=2, found ndim=3. Full shape received: [None, 28, 96]


03.May 2020 21:36:20 correct LSTM model creation and compilation

03.May 2020 21:36:22 model training error
in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:465 train_step  **
        y_pred = self(x, training=True)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py:927 __call__
        outputs = call_fn(cast_inputs, *args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\sequential.py:291 call
        outputs = layer(inputs, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py:897 __call__
        self._maybe_build(inputs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py:2416 _maybe_build
        self.build(input_shapes)  # pylint:disable=not-callable
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\layers\wrappers.py:177 build
        raise ValueError(

    ValueError: `TimeDistributed` Layer should be passed an `input_shape ` with at least 3 dimensions, received: [None, 96]
Traceback (most recent call last):
  File ".\_2_train.py", line 348, in train
    forecaster.fit(x_train, y_train, batch_size=batch_size, epochs=epochs, workers=workers,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 66, in _method_wrapper
    return method(self, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 785, in fit
    tmp_logs = train_function(iterator)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 580, in __call__
    result = self._call(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 627, in _call
    self._initialize(args, kwds, add_initializers_to=initializers)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 505, in _initialize
    self._stateful_fn._get_concrete_function_internal_garbage_collected(  # pylint: disable=protected-access
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2446, in _get_concrete_function_internal_garbage_collected
    graph_function, _, _ = self._maybe_define_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2777, in _maybe_define_function
    graph_function = self._create_graph_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2657, in _create_graph_function
    func_graph_module.func_graph_from_py_func(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 981, in func_graph_from_py_func
    func_outputs = python_func(*func_args, **func_kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 441, in wrapped_fn
    return weak_wrapped_fn().__wrapped__(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 968, in wrapper
    raise e.ag_error_metadata.to_exception(e)
ValueError: in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:465 train_step  **
        y_pred = self(x, training=True)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py:927 __call__
        outputs = call_fn(cast_inputs, *args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\sequential.py:291 call
        outputs = layer(inputs, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py:897 __call__
        self._maybe_build(inputs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py:2416 _maybe_build
        self.build(input_shapes)  # pylint:disable=not-callable
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\layers\wrappers.py:177 build
        raise ValueError(

    ValueError: `TimeDistributed` Layer should be passed an `input_shape ` with at least 3 dimensions, received: [None, 96]


03.May 2020 21:38:32 correct LSTM model creation and compilation

03.May 2020 22:10:05 correct model training, correct saving of model and weights

03.May 2020 22:10:05 settings modified and saved

03.May 2020 22:30:48 correct LSTM model creation and compilation

03.May 2020 22:30:48 correct model training, correct saving of model and weights

03.May 2020 22:30:48 settings modified and saved

03.May 2020 22:33:14 correct LSTM model creation and compilation

03.May 2020 22:33:14 correct model training, correct saving of model and weights

03.May 2020 22:33:14 settings modified and saved

03.May 2020 22:35:57 correct LSTM model creation and compilation

03.May 2020 22:35:57 correct model training, correct saving of model and weights

03.May 2020 22:35:57 settings modified and saved

03.May 2020 22:37:11 correct LSTM model creation and compilation

04.May 2020 15:58:35 correct LSTM model creation and compilation

04.May 2020 16:18:45 correct model training, correct saving of model and weights

04.May 2020 16:18:45 settings modified and saved

04.May 2020 16:20:50 correct LSTM model creation and compilation

04.May 2020 16:40:59 correct model training, correct saving of model and weights

04.May 2020 16:40:59 settings modified and saved

04.May 2020 17:35:18 correct LSTM model creation and compilation

04.May 2020 18:05:01 correct model training, correct saving of model and weights

04.May 2020 18:05:01 settings modified and saved

04.May 2020 18:56:35 correct LSTM model creation and compilation

04.May 2020 19:25:17 correct model training, correct saving of model and weights

04.May 2020 19:25:17 settings modified and saved

05.May 2020 07:29:25 correct LSTM model creation and compilation

05.May 2020 07:29:25 model training error
name 'time_serie_in_group' is not defined
Traceback (most recent call last):
  File ".\_2_train.py", line 329, in train
    print(time_serie_in_group)
NameError: name 'time_serie_in_group' is not defined

05.May 2020 07:29:49 correct LSTM model creation and compilation

05.May 2020 08:01:25 correct model training, correct saving of model and weights

05.May 2020 08:01:25 settings modified and saved

05.May 2020 16:07:03 correct LSTM model creation and compilation

05.May 2020 16:34:36 correct model training, correct saving of model and weights

05.May 2020 16:34:36 settings modified and saved

05.May 2020 17:32:40 correct LSTM model creation and compilation

05.May 2020 18:00:46 correct model training, correct saving of model and weights

05.May 2020 18:00:46 settings modified and saved

05.May 2020 19:50:43 correct LSTM model creation and compilation

05.May 2020 20:17:51 correct model training, correct saving of model and weights

05.May 2020 20:17:51 settings modified and saved

05.May 2020 23:11:41 correct LSTM model creation and compilation

05.May 2020 23:11:48 model training error
in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:477 train_step  **
        self.compiled_metrics.update_state(y, y_pred, sample_weight)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:406 update_state
        metric_obj.update_state(y_t, y_p)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\utils\metrics_utils.py:90 decorated
        update_op = update_state_fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\metrics.py:603 update_state
        matches = self._fn(y_true, y_pred, **self._fn_kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\losses.py:143 __call__
        losses = self.call(y_true, y_pred)
    .\_2_train.py:94 call
        m_mape_denominator = np.add(1, np.abs(local_true))
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py:748 __array__
        raise NotImplementedError("Cannot convert a symbolic Tensor ({}) to a numpy"

    NotImplementedError: Cannot convert a symbolic Tensor (IteratorGetNext:1) to a numpy array.
Traceback (most recent call last):
  File ".\_2_train.py", line 354, in train
    forecaster.fit(x_train, y_train, batch_size=batch_size, epochs=epochs, workers=workers,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 66, in _method_wrapper
    return method(self, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 785, in fit
    tmp_logs = train_function(iterator)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 580, in __call__
    result = self._call(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 627, in _call
    self._initialize(args, kwds, add_initializers_to=initializers)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 505, in _initialize
    self._stateful_fn._get_concrete_function_internal_garbage_collected(  # pylint: disable=protected-access
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2446, in _get_concrete_function_internal_garbage_collected
    graph_function, _, _ = self._maybe_define_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2777, in _maybe_define_function
    graph_function = self._create_graph_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2657, in _create_graph_function
    func_graph_module.func_graph_from_py_func(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 981, in func_graph_from_py_func
    func_outputs = python_func(*func_args, **func_kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 441, in wrapped_fn
    return weak_wrapped_fn().__wrapped__(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 968, in wrapper
    raise e.ag_error_metadata.to_exception(e)
NotImplementedError: in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:477 train_step  **
        self.compiled_metrics.update_state(y, y_pred, sample_weight)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:406 update_state
        metric_obj.update_state(y_t, y_p)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\utils\metrics_utils.py:90 decorated
        update_op = update_state_fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\metrics.py:603 update_state
        matches = self._fn(y_true, y_pred, **self._fn_kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\losses.py:143 __call__
        losses = self.call(y_true, y_pred)
    .\_2_train.py:94 call
        m_mape_denominator = np.add(1, np.abs(local_true))
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py:748 __array__
        raise NotImplementedError("Cannot convert a symbolic Tensor ({}) to a numpy"

    NotImplementedError: Cannot convert a symbolic Tensor (IteratorGetNext:1) to a numpy array.


05.May 2020 23:16:36 correct LSTM model creation and compilation

05.May 2020 23:19:05 correct LSTM model creation and compilation

05.May 2020 23:47:57 correct model training, correct saving of model and weights

05.May 2020 23:47:57 settings modified and saved

05.May 2020 23:59:04 correct LSTM model creation and compilation

06.May 2020 00:28:12 correct model training, correct saving of model and weights

06.May 2020 00:28:12 settings modified and saved

06.May 2020 00:31:10 correct LSTM model creation and compilation

06.May 2020 00:45:21 correct model training, correct saving of model and weights

06.May 2020 00:45:21 settings modified and saved

06.May 2020 00:48:26 correct LSTM model creation and compilation

06.May 2020 00:49:25 correct LSTM model creation and compilation

06.May 2020 01:17:49 correct model training, correct saving of model and weights

06.May 2020 01:17:49 settings modified and saved

06.May 2020 01:48:29 correct LSTM model creation and compilation

06.May 2020 04:07:57 correct model training, correct saving of model and weights

06.May 2020 04:07:57 settings modified and saved

06.May 2020 06:32:31 correct LSTM model creation and compilation

06.May 2020 06:42:43 correct model training, correct saving of model and weights

06.May 2020 06:42:43 settings modified and saved

06.May 2020 07:10:57 correct LSTM model creation and compilation

06.May 2020 08:26:51 correct model training, correct saving of model and weights

06.May 2020 08:26:51 settings modified and saved

06.May 2020 09:56:47 correct LSTM model creation and compilation

06.May 2020 10:51:48 correct model training, correct saving of model and weights

06.May 2020 10:51:48 settings modified and saved

06.May 2020 21:55:11 correct LSTM model creation and compilation

06.May 2020 21:55:11 correct LSTM model creation and compilation

06.May 2020 21:55:11 correct LSTM model creation and compilation

06.May 2020 21:55:11 model training error
cannot reshape array of size 2088240 into shape (66,1130,1)
Traceback (most recent call last):
  File ".\_2_train.py", line 345, in train
    x_train = x_train.reshape((x_train.shape[0], x_train.shape[1], 1))
ValueError: cannot reshape array of size 2088240 into shape (66,1130,1)

06.May 2020 22:02:25 correct LSTM model creation and compilation

06.May 2020 22:02:25 correct LSTM model creation and compilation

06.May 2020 22:02:25 correct LSTM model creation and compilation

06.May 2020 22:02:25 model training error
cannot reshape array of size 2088240 into shape (66,1130,15)
Traceback (most recent call last):
  File ".\_2_train.py", line 345, in train
    x_train = x_train.reshape((x_train.shape[0], x_train.shape[1], nof_features_in_group))
ValueError: cannot reshape array of size 2088240 into shape (66,1130,15)

06.May 2020 22:04:10 correct LSTM model creation and compilation

06.May 2020 22:04:10 correct LSTM model creation and compilation

06.May 2020 22:04:10 correct LSTM model creation and compilation

06.May 2020 22:04:10 model training error
cannot reshape array of size 2088240 into shape (66,1130,1130)
Traceback (most recent call last):
  File ".\_2_train.py", line 345, in train
    x_train = x_train.reshape((x_train.shape[0], x_train.shape[1], nof_features_in_group))
ValueError: cannot reshape array of size 2088240 into shape (66,1130,1130)

06.May 2020 22:05:43 correct LSTM model creation and compilation

06.May 2020 22:05:43 correct LSTM model creation and compilation

06.May 2020 22:05:43 correct LSTM model creation and compilation

06.May 2020 22:05:43 model training error
cannot reshape array of size 2088240 into shape (66,1130,1)
Traceback (most recent call last):
  File ".\_2_train.py", line 346, in train
    x_train = x_train.reshape((x_train.shape[0], x_train.shape[1], 1))
ValueError: cannot reshape array of size 2088240 into shape (66,1130,1)

06.May 2020 22:07:26 correct LSTM model creation and compilation

06.May 2020 22:07:26 correct LSTM model creation and compilation

06.May 2020 22:07:26 correct LSTM model creation and compilation

06.May 2020 22:07:26 model training error
in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:465 train_step  **
        y_pred = self(x, training=True)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py:927 __call__
        outputs = call_fn(cast_inputs, *args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\sequential.py:291 call
        outputs = layer(inputs, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\layers\wrappers.py:531 __call__
        return super(Bidirectional, self).__call__(inputs, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py:927 __call__
        outputs = call_fn(cast_inputs, *args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\layers\wrappers.py:644 call
        y = self.forward_layer(forward_inputs,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\layers\recurrent.py:654 __call__
        return super(RNN, self).__call__(inputs, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py:927 __call__
        outputs = call_fn(cast_inputs, *args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\layers\recurrent.py:784 call
        last_output, outputs, states = K.rnn(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\backend.py:4236 rnn
        final_outputs = control_flow_ops.while_loop(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\control_flow_ops.py:2679 while_loop
        return while_v2.while_loop(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\while_v2.py:188 while_loop
        body_graph = func_graph_module.func_graph_from_py_func(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py:981 func_graph_from_py_func
        func_outputs = python_func(*func_args, **func_kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\while_v2.py:174 wrapped_body
        outputs = body(*_pack_sequence_as(orig_loop_vars, args))
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\backend.py:4228 _step
        new_state.set_shape(state.shape)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py:658 set_shape
        raise ValueError(str(e))

    ValueError: Shapes must be equal rank, but are 3 and 2
Traceback (most recent call last):
  File ".\_2_train.py", line 362, in train
    forecaster.fit(x_train, y_train, batch_size=batch_size, epochs=epochs, workers=workers,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 66, in _method_wrapper
    return method(self, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 785, in fit
    tmp_logs = train_function(iterator)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 580, in __call__
    result = self._call(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 627, in _call
    self._initialize(args, kwds, add_initializers_to=initializers)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 505, in _initialize
    self._stateful_fn._get_concrete_function_internal_garbage_collected(  # pylint: disable=protected-access
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2446, in _get_concrete_function_internal_garbage_collected
    graph_function, _, _ = self._maybe_define_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2777, in _maybe_define_function
    graph_function = self._create_graph_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2657, in _create_graph_function
    func_graph_module.func_graph_from_py_func(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 981, in func_graph_from_py_func
    func_outputs = python_func(*func_args, **func_kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 441, in wrapped_fn
    return weak_wrapped_fn().__wrapped__(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 968, in wrapper
    raise e.ag_error_metadata.to_exception(e)
ValueError: in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:465 train_step  **
        y_pred = self(x, training=True)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py:927 __call__
        outputs = call_fn(cast_inputs, *args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\sequential.py:291 call
        outputs = layer(inputs, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\layers\wrappers.py:531 __call__
        return super(Bidirectional, self).__call__(inputs, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py:927 __call__
        outputs = call_fn(cast_inputs, *args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\layers\wrappers.py:644 call
        y = self.forward_layer(forward_inputs,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\layers\recurrent.py:654 __call__
        return super(RNN, self).__call__(inputs, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py:927 __call__
        outputs = call_fn(cast_inputs, *args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\layers\recurrent.py:784 call
        last_output, outputs, states = K.rnn(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\backend.py:4236 rnn
        final_outputs = control_flow_ops.while_loop(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\control_flow_ops.py:2679 while_loop
        return while_v2.while_loop(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\while_v2.py:188 while_loop
        body_graph = func_graph_module.func_graph_from_py_func(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py:981 func_graph_from_py_func
        func_outputs = python_func(*func_args, **func_kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\while_v2.py:174 wrapped_body
        outputs = body(*_pack_sequence_as(orig_loop_vars, args))
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\backend.py:4228 _step
        new_state.set_shape(state.shape)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py:658 set_shape
        raise ValueError(str(e))

    ValueError: Shapes must be equal rank, but are 3 and 2


06.May 2020 22:09:00 correct LSTM model creation and compilation

06.May 2020 22:09:00 correct LSTM model creation and compilation

06.May 2020 22:09:00 correct LSTM model creation and compilation

06.May 2020 23:06:05 correct LSTM model creation and compilation

06.May 2020 23:06:05 correct LSTM model creation and compilation

06.May 2020 23:07:17 correct LSTM model creation and compilation

06.May 2020 23:07:17 correct LSTM model creation and compilation

06.May 2020 23:07:17 correct LSTM model creation and compilation

06.May 2020 23:16:36 correct LSTM model creation and compilation

06.May 2020 23:16:36 correct LSTM model creation and compilation

06.May 2020 23:16:36 correct LSTM model creation and compilation

07.May 2020 17:26:47 correct LSTM model creation and compilation

07.May 2020 17:26:47 correct LSTM model creation and compilation

07.May 2020 17:26:47 correct LSTM model creation and compilation

07.May 2020 17:29:36 correct LSTM model creation and compilation

07.May 2020 17:29:36 correct LSTM model creation and compilation

07.May 2020 17:29:36 correct LSTM model creation and compilation

07.May 2020 17:35:29 correct LSTM model creation and compilation

07.May 2020 17:35:29 correct LSTM model creation and compilation

07.May 2020 17:35:29 correct LSTM model creation and compilation

07.May 2020 17:37:09 correct LSTM model creation and compilation

07.May 2020 17:37:09 correct LSTM model creation and compilation

07.May 2020 17:37:09 correct LSTM model creation and compilation

07.May 2020 17:38:40 correct LSTM model creation and compilation

07.May 2020 17:38:40 correct LSTM model creation and compilation

07.May 2020 17:38:40 correct LSTM model creation and compilation

07.May 2020 17:40:36 correct model training, correct saving of model and weights

07.May 2020 17:40:36 settings modified and saved

07.May 2020 17:51:36 correct LSTM model creation and compilation

07.May 2020 17:51:36 correct LSTM model creation and compilation

07.May 2020 17:51:36 correct LSTM model creation and compilation

07.May 2020 20:09:04 correct LSTM model creation and compilation

07.May 2020 20:09:04 correct LSTM model creation and compilation

07.May 2020 20:09:04 correct LSTM model creation and compilation

07.May 2020 20:09:04 model training error
This model has not yet been built. Build the model first by calling `build()` or calling `fit()` with some data, or specify an `input_shape` argument in the first layer(s) for automatic build.
Traceback (most recent call last):
  File ".\_2_train.py", line 363, in train
    print(forecaster.summary())
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\network.py", line 1341, in summary
    raise ValueError('This model has not yet been built. '
ValueError: This model has not yet been built. Build the model first by calling `build()` or calling `fit()` with some data, or specify an `input_shape` argument in the first layer(s) for automatic build.

07.May 2020 20:11:14 correct LSTM model creation and compilation

07.May 2020 20:11:14 correct LSTM model creation and compilation

07.May 2020 20:11:14 correct LSTM model creation and compilation

07.May 2020 20:11:16 model training error
in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:466 train_step  **
        loss = self.compiled_loss(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:204 __call__
        loss_value = loss_obj(y_t, y_p, sample_weight=sw)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\losses.py:143 __call__
        losses = self.call(y_true, y_pred)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\losses.py:246 call
        return self.fn(y_true, y_pred, **self._fn_kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\losses.py:1198 mean_squared_error
        return K.mean(math_ops.squared_difference(y_pred, y_true), axis=-1)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\gen_math_ops.py:10037 squared_difference
        _, _, _op, _outputs = _op_def_library._apply_op_helper(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\op_def_library.py:742 _apply_op_helper
        op = g._create_op_internal(op_type_name, inputs, dtypes=None,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py:593 _create_op_internal
        return super(FuncGraph, self)._create_op_internal(  # pylint: disable=protected-access
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py:3319 _create_op_internal
        ret = Operation(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py:1816 __init__
        self._c_op = _create_c_op(self._graph, node_def, inputs,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py:1657 _create_c_op
        raise ValueError(str(e))

    ValueError: Dimensions must be equal, but are 15 and 1130 for '{{node mean_squared_error/SquaredDifference}} = SquaredDifference[T=DT_FLOAT](sequential/dense/BiasAdd, IteratorGetNext:1)' with input shapes: [?,28,15], [?,28,1130].
Traceback (most recent call last):
  File ".\_2_train.py", line 363, in train
    forecaster.fit(x_train, y_train, batch_size=batch_size, epochs=epochs, workers=workers,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 66, in _method_wrapper
    return method(self, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 785, in fit
    tmp_logs = train_function(iterator)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 580, in __call__
    result = self._call(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 627, in _call
    self._initialize(args, kwds, add_initializers_to=initializers)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 505, in _initialize
    self._stateful_fn._get_concrete_function_internal_garbage_collected(  # pylint: disable=protected-access
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2446, in _get_concrete_function_internal_garbage_collected
    graph_function, _, _ = self._maybe_define_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2777, in _maybe_define_function
    graph_function = self._create_graph_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2657, in _create_graph_function
    func_graph_module.func_graph_from_py_func(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 981, in func_graph_from_py_func
    func_outputs = python_func(*func_args, **func_kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 441, in wrapped_fn
    return weak_wrapped_fn().__wrapped__(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 968, in wrapper
    raise e.ag_error_metadata.to_exception(e)
ValueError: in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:466 train_step  **
        loss = self.compiled_loss(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:204 __call__
        loss_value = loss_obj(y_t, y_p, sample_weight=sw)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\losses.py:143 __call__
        losses = self.call(y_true, y_pred)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\losses.py:246 call
        return self.fn(y_true, y_pred, **self._fn_kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\losses.py:1198 mean_squared_error
        return K.mean(math_ops.squared_difference(y_pred, y_true), axis=-1)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\gen_math_ops.py:10037 squared_difference
        _, _, _op, _outputs = _op_def_library._apply_op_helper(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\op_def_library.py:742 _apply_op_helper
        op = g._create_op_internal(op_type_name, inputs, dtypes=None,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py:593 _create_op_internal
        return super(FuncGraph, self)._create_op_internal(  # pylint: disable=protected-access
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py:3319 _create_op_internal
        ret = Operation(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py:1816 __init__
        self._c_op = _create_c_op(self._graph, node_def, inputs,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py:1657 _create_c_op
        raise ValueError(str(e))

    ValueError: Dimensions must be equal, but are 15 and 1130 for '{{node mean_squared_error/SquaredDifference}} = SquaredDifference[T=DT_FLOAT](sequential/dense/BiasAdd, IteratorGetNext:1)' with input shapes: [?,28,15], [?,28,1130].


07.May 2020 21:17:57 correct LSTM model creation and compilation

07.May 2020 21:17:57 correct LSTM model creation and compilation

07.May 2020 21:17:57 correct LSTM model creation and compilation

07.May 2020 21:17:57 model training error
'Sequential' object has no attribute 'buil'
Traceback (most recent call last):
  File ".\_2_train.py", line 362, in train
    forecaster = forecaster_models_list[group_iterator].buil()
AttributeError: 'Sequential' object has no attribute 'buil'

07.May 2020 21:18:21 correct LSTM model creation and compilation

07.May 2020 21:18:21 correct LSTM model creation and compilation

07.May 2020 21:18:21 correct LSTM model creation and compilation

07.May 2020 21:18:21 model training error
You must provide an `input_shape` argument.
Traceback (most recent call last):
  File ".\_2_train.py", line 362, in train
    forecaster = forecaster_models_list[group_iterator].build()
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\sequential.py", line 263, in build
    raise ValueError('You must provide an `input_shape` argument.')
ValueError: You must provide an `input_shape` argument.

07.May 2020 21:24:37 LSTM model creation or compile error
'units_last_layer'
Traceback (most recent call last):
  File ".\_2_train.py", line 234, in train
    forecaster.add(layers.Dense(units=model_hyperparameters['units_last_layer']))
KeyError: 'units_last_layer'

07.May 2020 21:24:37 model training error
list index out of range
Traceback (most recent call last):
  File ".\_2_train.py", line 362, in train
    forecaster = forecaster_models_list[group_iterator].build()
IndexError: list index out of range

07.May 2020 21:26:05 correct LSTM model creation and compilation

07.May 2020 21:26:05 correct LSTM model creation and compilation

07.May 2020 21:26:05 correct LSTM model creation and compilation

07.May 2020 21:26:05 model training error
This model has not yet been built. Build the model first by calling `build()` or calling `fit()` with some data, or specify an `input_shape` argument in the first layer(s) for automatic build.
Traceback (most recent call last):
  File ".\_2_train.py", line 363, in train
    print(forecaster.summary())
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\network.py", line 1341, in summary
    raise ValueError('This model has not yet been built. '
ValueError: This model has not yet been built. Build the model first by calling `build()` or calling `fit()` with some data, or specify an `input_shape` argument in the first layer(s) for automatic build.

07.May 2020 21:33:43 correct LSTM model creation and compilation

07.May 2020 21:33:43 correct LSTM model creation and compilation

07.May 2020 21:33:43 correct LSTM model creation and compilation

07.May 2020 21:38:31 correct model training, correct saving of model and weights

07.May 2020 21:38:31 settings modified and saved

07.May 2020 21:53:08 correct LSTM model creation and compilation

07.May 2020 21:53:08 correct LSTM model creation and compilation

07.May 2020 21:53:08 correct LSTM model creation and compilation

07.May 2020 21:54:21 correct LSTM model creation and compilation

07.May 2020 21:54:21 correct LSTM model creation and compilation

07.May 2020 21:54:21 correct LSTM model creation and compilation

07.May 2020 21:55:04 correct LSTM model creation and compilation

07.May 2020 21:55:04 correct LSTM model creation and compilation

07.May 2020 21:55:04 correct LSTM model creation and compilation

07.May 2020 21:59:58 correct model training, correct saving of model and weights

07.May 2020 21:59:58 settings modified and saved

07.May 2020 22:07:17 correct LSTM model creation and compilation

07.May 2020 22:07:17 correct LSTM model creation and compilation

07.May 2020 22:07:17 correct LSTM model creation and compilation

07.May 2020 22:11:57 correct model training, correct saving of model and weights

07.May 2020 22:11:57 settings modified and saved

07.May 2020 22:23:42 correct LSTM model creation and compilation

07.May 2020 22:23:42 correct LSTM model creation and compilation

07.May 2020 22:23:42 correct LSTM model creation and compilation

07.May 2020 23:23:11 correct LSTM model creation and compilation

07.May 2020 23:23:11 correct LSTM model creation and compilation

07.May 2020 23:23:11 correct LSTM model creation and compilation

07.May 2020 23:27:50 correct model training, correct saving of model and weights

07.May 2020 23:27:50 settings modified and saved

07.May 2020 23:43:30 correct LSTM model creation and compilation

07.May 2020 23:43:30 correct LSTM model creation and compilation

07.May 2020 23:43:30 correct LSTM model creation and compilation

07.May 2020 23:48:16 correct model training, correct saving of model and weights

07.May 2020 23:48:16 settings modified and saved

08.May 2020 00:00:59 correct LSTM model creation and compilation

08.May 2020 00:00:59 correct LSTM model creation and compilation

08.May 2020 00:00:59 correct LSTM model creation and compilation

08.May 2020 19:10:35 correct LSTM model creation and compilation

08.May 2020 19:10:35 correct LSTM model creation and compilation

08.May 2020 19:10:35 correct LSTM model creation and compilation

08.May 2020 19:10:37 model training error
in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:466 train_step  **
        loss = self.compiled_loss(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:204 __call__
        loss_value = loss_obj(y_t, y_p, sample_weight=sw)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\losses.py:143 __call__
        losses = self.call(y_true, y_pred)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\losses.py:246 call
        return self.fn(y_true, y_pred, **self._fn_kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\losses.py:1198 mean_squared_error
        return K.mean(math_ops.squared_difference(y_pred, y_true), axis=-1)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\gen_math_ops.py:10037 squared_difference
        _, _, _op, _outputs = _op_def_library._apply_op_helper(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\op_def_library.py:742 _apply_op_helper
        op = g._create_op_internal(op_type_name, inputs, dtypes=None,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py:593 _create_op_internal
        return super(FuncGraph, self)._create_op_internal(  # pylint: disable=protected-access
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py:3319 _create_op_internal
        ret = Operation(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py:1816 __init__
        self._c_op = _create_c_op(self._graph, node_def, inputs,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py:1657 _create_c_op
        raise ValueError(str(e))

    ValueError: Dimensions must be equal, but are 15 and 1130 for '{{node mean_squared_error/SquaredDifference}} = SquaredDifference[T=DT_FLOAT](sequential/dense/BiasAdd, IteratorGetNext:1)' with input shapes: [?,28,15], [?,28,1130].
Traceback (most recent call last):
  File ".\_2_train.py", line 367, in train
    forecaster.fit(x_train, y_train, batch_size=batch_size, epochs=epochs, workers=workers,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 66, in _method_wrapper
    return method(self, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 785, in fit
    tmp_logs = train_function(iterator)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 580, in __call__
    result = self._call(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 627, in _call
    self._initialize(args, kwds, add_initializers_to=initializers)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 505, in _initialize
    self._stateful_fn._get_concrete_function_internal_garbage_collected(  # pylint: disable=protected-access
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2446, in _get_concrete_function_internal_garbage_collected
    graph_function, _, _ = self._maybe_define_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2777, in _maybe_define_function
    graph_function = self._create_graph_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2657, in _create_graph_function
    func_graph_module.func_graph_from_py_func(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 981, in func_graph_from_py_func
    func_outputs = python_func(*func_args, **func_kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 441, in wrapped_fn
    return weak_wrapped_fn().__wrapped__(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 968, in wrapper
    raise e.ag_error_metadata.to_exception(e)
ValueError: in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:466 train_step  **
        loss = self.compiled_loss(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:204 __call__
        loss_value = loss_obj(y_t, y_p, sample_weight=sw)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\losses.py:143 __call__
        losses = self.call(y_true, y_pred)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\losses.py:246 call
        return self.fn(y_true, y_pred, **self._fn_kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\losses.py:1198 mean_squared_error
        return K.mean(math_ops.squared_difference(y_pred, y_true), axis=-1)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\gen_math_ops.py:10037 squared_difference
        _, _, _op, _outputs = _op_def_library._apply_op_helper(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\op_def_library.py:742 _apply_op_helper
        op = g._create_op_internal(op_type_name, inputs, dtypes=None,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py:593 _create_op_internal
        return super(FuncGraph, self)._create_op_internal(  # pylint: disable=protected-access
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py:3319 _create_op_internal
        ret = Operation(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py:1816 __init__
        self._c_op = _create_c_op(self._graph, node_def, inputs,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py:1657 _create_c_op
        raise ValueError(str(e))

    ValueError: Dimensions must be equal, but are 15 and 1130 for '{{node mean_squared_error/SquaredDifference}} = SquaredDifference[T=DT_FLOAT](sequential/dense/BiasAdd, IteratorGetNext:1)' with input shapes: [?,28,15], [?,28,1130].


08.May 2020 19:22:34 correct LSTM model creation and compilation

08.May 2020 19:22:34 correct LSTM model creation and compilation

08.May 2020 19:22:34 correct LSTM model creation and compilation

08.May 2020 19:36:46 time series number (by group) saved to forecast settings

08.May 2020 19:36:46 correct model training, correct saving of model and weights

08.May 2020 19:36:46 settings modified and saved

08.May 2020 23:06:08 correct LSTM model creation and compilation

08.May 2020 23:06:08 correct LSTM model creation and compilation

08.May 2020 23:06:08 correct LSTM model creation and compilation

08.May 2020 23:44:20 time series number (by group) saved to forecast settings

08.May 2020 23:44:20 correct model training, correct saving of model and weights

08.May 2020 23:44:20 settings modified and saved

09.May 2020 01:44:38 correct LSTM model creation and compilation

09.May 2020 01:44:38 correct LSTM model creation and compilation

09.May 2020 01:44:38 correct LSTM model creation and compilation

09.May 2020 02:11:27 time series number (by group) saved to forecast settings

09.May 2020 02:11:27 correct model training, correct saving of model and weights

09.May 2020 02:11:27 settings modified and saved

09.May 2020 04:22:06 correct LSTM model creation and compilation

09.May 2020 04:22:06 correct LSTM model creation and compilation

09.May 2020 04:22:06 correct LSTM model creation and compilation

09.May 2020 04:42:24 correct LSTM model creation and compilation

09.May 2020 04:42:24 correct LSTM model creation and compilation

09.May 2020 04:42:24 correct LSTM model creation and compilation

09.May 2020 04:51:06 time series number (by group) saved to forecast settings

09.May 2020 04:51:06 correct model training, correct saving of model and weights

09.May 2020 04:51:06 settings modified and saved

09.May 2020 04:55:46 LSTM model creation or compile error
name '_in_group' is not defined
Traceback (most recent call last):
  File ".\_2_train.py", line 307, in train
    forecaster.add(TimeDistributed(layers.Dense(units=_in_group)))
NameError: name '_in_group' is not defined

09.May 2020 04:55:46 model training error
list index out of range
Traceback (most recent call last):
  File ".\_2_train.py", line 363, in train
    forecaster = forecaster_models_list[group_iterator]
IndexError: list index out of range

09.May 2020 04:57:46 correct LSTM model creation and compilation

09.May 2020 04:57:46 correct LSTM model creation and compilation

09.May 2020 04:57:46 correct LSTM model creation and compilation

09.May 2020 05:17:51 time series number (by group) saved to forecast settings

09.May 2020 05:17:51 correct model training, correct saving of model and weights

09.May 2020 05:17:51 settings modified and saved

09.May 2020 08:10:58 correct LSTM model creation and compilation

09.May 2020 08:10:58 correct LSTM model creation and compilation

09.May 2020 08:10:58 correct LSTM model creation and compilation

09.May 2020 12:51:43 correct LSTM model creation and compilation

09.May 2020 12:51:43 correct LSTM model creation and compilation

09.May 2020 12:51:43 correct LSTM model creation and compilation

09.May 2020 13:12:45 time series number (by group) saved to forecast settings

09.May 2020 13:12:45 correct model training, correct saving of model and weights

09.May 2020 13:12:45 settings modified and saved

09.May 2020 13:16:35 correct LSTM model creation and compilation

09.May 2020 13:16:35 correct LSTM model creation and compilation

09.May 2020 13:16:35 correct LSTM model creation and compilation

09.May 2020 13:20:48 model training error
 OOM when allocating tensor with shape[32,17783] and type float on /job:localhost/replica:0/task:0/device:GPU:0 by allocator GPU_0_bfc
	 [[{{node sequential_1/bidirectional_4/backward_rnn_4/while/body/_492/peephole_lstm_cell_4/dropout_1/random_uniform/RandomUniform}}]]
Hint: If you want to see a list of allocated tensors when OOM happens, add report_tensor_allocations_upon_oom to RunOptions for current allocation info.
 [Op:__inference_train_function_71038]

Function call stack:
train_function
Traceback (most recent call last):
  File ".\_2_train.py", line 364, in train
    forecaster.fit(x_train, y_train, batch_size=batch_size, epochs=epochs, workers=workers,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 66, in _method_wrapper
    return method(self, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 785, in fit
    tmp_logs = train_function(iterator)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 580, in __call__
    result = self._call(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 644, in _call
    return self._stateless_fn(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2420, in __call__
    return graph_function._filtered_call(args, kwargs)  # pylint: disable=protected-access
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 1661, in _filtered_call
    return self._call_flat(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 1745, in _call_flat
    return self._build_call_outputs(self._inference_function.call(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 593, in call
    outputs = execute.execute(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\execute.py", line 59, in quick_execute
    tensors = pywrap_tfe.TFE_Py_Execute(ctx._handle, device_name, op_name,
tensorflow.python.framework.errors_impl.ResourceExhaustedError:  OOM when allocating tensor with shape[32,17783] and type float on /job:localhost/replica:0/task:0/device:GPU:0 by allocator GPU_0_bfc
	 [[{{node sequential_1/bidirectional_4/backward_rnn_4/while/body/_492/peephole_lstm_cell_4/dropout_1/random_uniform/RandomUniform}}]]
Hint: If you want to see a list of allocated tensors when OOM happens, add report_tensor_allocations_upon_oom to RunOptions for current allocation info.
 [Op:__inference_train_function_71038]

Function call stack:
train_function


09.May 2020 13:24:42 correct LSTM model creation and compilation

09.May 2020 13:24:42 correct LSTM model creation and compilation

09.May 2020 13:24:42 correct LSTM model creation and compilation

09.May 2020 13:24:44 model training error
in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:466 train_step  **
        loss = self.compiled_loss(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:204 __call__
        loss_value = loss_obj(y_t, y_p, sample_weight=sw)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\losses.py:143 __call__
        losses = self.call(y_true, y_pred)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\losses.py:246 call
        return self.fn(y_true, y_pred, **self._fn_kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\losses.py:1198 mean_squared_error
        return K.mean(math_ops.squared_difference(y_pred, y_true), axis=-1)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\gen_math_ops.py:10037 squared_difference
        _, _, _op, _outputs = _op_def_library._apply_op_helper(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\op_def_library.py:742 _apply_op_helper
        op = g._create_op_internal(op_type_name, inputs, dtypes=None,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py:593 _create_op_internal
        return super(FuncGraph, self)._create_op_internal(  # pylint: disable=protected-access
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py:3319 _create_op_internal
        ret = Operation(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py:1816 __init__
        self._c_op = _create_c_op(self._graph, node_def, inputs,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py:1657 _create_c_op
        raise ValueError(str(e))

    ValueError: Dimensions must be equal, but are 56 and 28 for '{{node mean_squared_error/SquaredDifference}} = SquaredDifference[T=DT_FLOAT](sequential/time_distributed/Reshape_1, IteratorGetNext:1)' with input shapes: [?,56,1130], [?,28,1130].
Traceback (most recent call last):
  File ".\_2_train.py", line 364, in train
    forecaster.fit(x_train, y_train, batch_size=batch_size, epochs=epochs, workers=workers,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 66, in _method_wrapper
    return method(self, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 785, in fit
    tmp_logs = train_function(iterator)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 580, in __call__
    result = self._call(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 627, in _call
    self._initialize(args, kwds, add_initializers_to=initializers)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 505, in _initialize
    self._stateful_fn._get_concrete_function_internal_garbage_collected(  # pylint: disable=protected-access
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2446, in _get_concrete_function_internal_garbage_collected
    graph_function, _, _ = self._maybe_define_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2777, in _maybe_define_function
    graph_function = self._create_graph_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2657, in _create_graph_function
    func_graph_module.func_graph_from_py_func(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 981, in func_graph_from_py_func
    func_outputs = python_func(*func_args, **func_kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 441, in wrapped_fn
    return weak_wrapped_fn().__wrapped__(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 968, in wrapper
    raise e.ag_error_metadata.to_exception(e)
ValueError: in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:466 train_step  **
        loss = self.compiled_loss(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:204 __call__
        loss_value = loss_obj(y_t, y_p, sample_weight=sw)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\losses.py:143 __call__
        losses = self.call(y_true, y_pred)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\losses.py:246 call
        return self.fn(y_true, y_pred, **self._fn_kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\losses.py:1198 mean_squared_error
        return K.mean(math_ops.squared_difference(y_pred, y_true), axis=-1)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\gen_math_ops.py:10037 squared_difference
        _, _, _op, _outputs = _op_def_library._apply_op_helper(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\op_def_library.py:742 _apply_op_helper
        op = g._create_op_internal(op_type_name, inputs, dtypes=None,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py:593 _create_op_internal
        return super(FuncGraph, self)._create_op_internal(  # pylint: disable=protected-access
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py:3319 _create_op_internal
        ret = Operation(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py:1816 __init__
        self._c_op = _create_c_op(self._graph, node_def, inputs,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py:1657 _create_c_op
        raise ValueError(str(e))

    ValueError: Dimensions must be equal, but are 56 and 28 for '{{node mean_squared_error/SquaredDifference}} = SquaredDifference[T=DT_FLOAT](sequential/time_distributed/Reshape_1, IteratorGetNext:1)' with input shapes: [?,56,1130], [?,28,1130].


09.May 2020 13:27:09 correct LSTM model creation and compilation

09.May 2020 13:27:09 correct LSTM model creation and compilation

09.May 2020 13:27:09 correct LSTM model creation and compilation

09.May 2020 14:25:32 time series number (by group) saved to forecast settings

09.May 2020 14:25:32 correct model training, correct saving of model and weights

09.May 2020 14:25:32 settings modified and saved

09.May 2020 14:41:41 correct LSTM model creation and compilation

09.May 2020 14:41:41 correct LSTM model creation and compilation

09.May 2020 14:41:41 correct LSTM model creation and compilation

09.May 2020 17:25:12 model training error
 OOM when allocating tensor with shape[17783,48] and type float on /job:localhost/replica:0/task:0/device:GPU:0 by allocator GPU_0_bfc
	 [[{{node sequential_1/bidirectional_4/backward_rnn_4/while/body/_492/peephole_lstm_cell_4/split}}]]
Hint: If you want to see a list of allocated tensors when OOM happens, add report_tensor_allocations_upon_oom to RunOptions for current allocation info.
 [Op:__inference_train_function_119678]

Function call stack:
train_function
Traceback (most recent call last):
  File ".\_2_train.py", line 364, in train
    forecaster.fit(x_train, y_train, batch_size=batch_size, epochs=epochs, workers=workers,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 66, in _method_wrapper
    return method(self, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 785, in fit
    tmp_logs = train_function(iterator)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 580, in __call__
    result = self._call(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 644, in _call
    return self._stateless_fn(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2420, in __call__
    return graph_function._filtered_call(args, kwargs)  # pylint: disable=protected-access
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 1661, in _filtered_call
    return self._call_flat(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 1745, in _call_flat
    return self._build_call_outputs(self._inference_function.call(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 593, in call
    outputs = execute.execute(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\execute.py", line 59, in quick_execute
    tensors = pywrap_tfe.TFE_Py_Execute(ctx._handle, device_name, op_name,
tensorflow.python.framework.errors_impl.ResourceExhaustedError:  OOM when allocating tensor with shape[17783,48] and type float on /job:localhost/replica:0/task:0/device:GPU:0 by allocator GPU_0_bfc
	 [[{{node sequential_1/bidirectional_4/backward_rnn_4/while/body/_492/peephole_lstm_cell_4/split}}]]
Hint: If you want to see a list of allocated tensors when OOM happens, add report_tensor_allocations_upon_oom to RunOptions for current allocation info.
 [Op:__inference_train_function_119678]

Function call stack:
train_function


09.May 2020 17:28:00 correct LSTM model creation and compilation

09.May 2020 17:28:00 correct LSTM model creation and compilation

09.May 2020 17:28:00 correct LSTM model creation and compilation

09.May 2020 17:32:27 model training error
 OOM when allocating tensor with shape[17783,48] and type float on /job:localhost/replica:0/task:0/device:GPU:0 by allocator GPU_0_bfc
	 [[{{node sequential_1/bidirectional_4/backward_rnn_4/while/body/_492/peephole_lstm_cell_4/split}}]]
Hint: If you want to see a list of allocated tensors when OOM happens, add report_tensor_allocations_upon_oom to RunOptions for current allocation info.
 [Op:__inference_train_function_70766]

Function call stack:
train_function
Traceback (most recent call last):
  File ".\_2_train.py", line 364, in train
    forecaster.fit(x_train, y_train, batch_size=batch_size, epochs=epochs, workers=workers,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 66, in _method_wrapper
    return method(self, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 785, in fit
    tmp_logs = train_function(iterator)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 580, in __call__
    result = self._call(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 644, in _call
    return self._stateless_fn(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2420, in __call__
    return graph_function._filtered_call(args, kwargs)  # pylint: disable=protected-access
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 1661, in _filtered_call
    return self._call_flat(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 1745, in _call_flat
    return self._build_call_outputs(self._inference_function.call(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 593, in call
    outputs = execute.execute(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\execute.py", line 59, in quick_execute
    tensors = pywrap_tfe.TFE_Py_Execute(ctx._handle, device_name, op_name,
tensorflow.python.framework.errors_impl.ResourceExhaustedError:  OOM when allocating tensor with shape[17783,48] and type float on /job:localhost/replica:0/task:0/device:GPU:0 by allocator GPU_0_bfc
	 [[{{node sequential_1/bidirectional_4/backward_rnn_4/while/body/_492/peephole_lstm_cell_4/split}}]]
Hint: If you want to see a list of allocated tensors when OOM happens, add report_tensor_allocations_upon_oom to RunOptions for current allocation info.
 [Op:__inference_train_function_70766]

Function call stack:
train_function


09.May 2020 17:35:27 correct LSTM model creation and compilation

09.May 2020 17:35:27 correct LSTM model creation and compilation

09.May 2020 17:35:27 correct LSTM model creation and compilation

09.May 2020 17:42:52 time series number (by group) saved to forecast settings

09.May 2020 17:42:52 correct model training, correct saving of model and weights

09.May 2020 17:42:52 settings modified and saved

09.May 2020 17:50:03 correct LSTM model creation and compilation

09.May 2020 17:50:03 correct LSTM model creation and compilation

09.May 2020 17:50:03 correct LSTM model creation and compilation

09.May 2020 18:59:47 correct LSTM model creation and compilation

09.May 2020 18:59:47 correct LSTM model creation and compilation

09.May 2020 18:59:47 correct LSTM model creation and compilation

09.May 2020 20:40:16 time series number (by group) saved to forecast settings

09.May 2020 20:40:16 correct model training, correct saving of model and weights

09.May 2020 20:40:16 settings modified and saved

09.May 2020 20:49:00 correct LSTM model creation and compilation

09.May 2020 20:49:00 correct LSTM model creation and compilation

09.May 2020 20:49:00 correct LSTM model creation and compilation

09.May 2020 20:54:15 time series number (by group) saved to forecast settings

09.May 2020 20:54:15 correct model training, correct saving of model and weights

09.May 2020 20:54:15 settings modified and saved

09.May 2020 21:08:43 correct LSTM model creation and compilation

09.May 2020 21:08:43 correct LSTM model creation and compilation

09.May 2020 21:08:43 correct LSTM model creation and compilation

09.May 2020 21:12:03 model training error
 OOM when allocating tensor with shape[17783,48] and type float on /job:localhost/replica:0/task:0/device:GPU:0 by allocator GPU_0_bfc
	 [[{{node sequential_1/bidirectional_4/backward_rnn_4/while/body/_492/peephole_lstm_cell_4/split}}]]
Hint: If you want to see a list of allocated tensors when OOM happens, add report_tensor_allocations_upon_oom to RunOptions for current allocation info.
 [Op:__inference_train_function_71038]

Function call stack:
train_function
Traceback (most recent call last):
  File ".\_2_train.py", line 364, in train
    forecaster.fit(x_train, y_train, batch_size=batch_size, epochs=epochs, workers=workers,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 66, in _method_wrapper
    return method(self, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 785, in fit
    tmp_logs = train_function(iterator)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 580, in __call__
    result = self._call(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 644, in _call
    return self._stateless_fn(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2420, in __call__
    return graph_function._filtered_call(args, kwargs)  # pylint: disable=protected-access
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 1661, in _filtered_call
    return self._call_flat(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 1745, in _call_flat
    return self._build_call_outputs(self._inference_function.call(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 593, in call
    outputs = execute.execute(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\execute.py", line 59, in quick_execute
    tensors = pywrap_tfe.TFE_Py_Execute(ctx._handle, device_name, op_name,
tensorflow.python.framework.errors_impl.ResourceExhaustedError:  OOM when allocating tensor with shape[17783,48] and type float on /job:localhost/replica:0/task:0/device:GPU:0 by allocator GPU_0_bfc
	 [[{{node sequential_1/bidirectional_4/backward_rnn_4/while/body/_492/peephole_lstm_cell_4/split}}]]
Hint: If you want to see a list of allocated tensors when OOM happens, add report_tensor_allocations_upon_oom to RunOptions for current allocation info.
 [Op:__inference_train_function_71038]

Function call stack:
train_function


09.May 2020 21:55:53 correct LSTM model creation and compilation

09.May 2020 21:55:53 correct LSTM model creation and compilation

09.May 2020 21:55:53 correct LSTM model creation and compilation

09.May 2020 22:00:58 time series number (by group) saved to forecast settings

09.May 2020 22:00:58 correct model training, correct saving of model and weights

09.May 2020 22:00:58 settings modified and saved

09.May 2020 22:04:49 correct LSTM model creation and compilation

09.May 2020 22:04:49 correct LSTM model creation and compilation

09.May 2020 22:04:49 correct LSTM model creation and compilation

09.May 2020 22:04:51 model training error
in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:466 train_step  **
        loss = self.compiled_loss(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:204 __call__
        loss_value = loss_obj(y_t, y_p, sample_weight=sw)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\losses.py:143 __call__
        losses = self.call(y_true, y_pred)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\losses.py:246 call
        return self.fn(y_true, y_pred, **self._fn_kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\losses.py:1198 mean_squared_error
        return K.mean(math_ops.squared_difference(y_pred, y_true), axis=-1)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\gen_math_ops.py:10037 squared_difference
        _, _, _op, _outputs = _op_def_library._apply_op_helper(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\op_def_library.py:742 _apply_op_helper
        op = g._create_op_internal(op_type_name, inputs, dtypes=None,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py:593 _create_op_internal
        return super(FuncGraph, self)._create_op_internal(  # pylint: disable=protected-access
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py:3319 _create_op_internal
        ret = Operation(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py:1816 __init__
        self._c_op = _create_c_op(self._graph, node_def, inputs,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py:1657 _create_c_op
        raise ValueError(str(e))

    ValueError: Dimensions must be equal, but are 56 and 28 for '{{node mean_squared_error/SquaredDifference}} = SquaredDifference[T=DT_FLOAT](sequential/time_distributed/Reshape_1, IteratorGetNext:1)' with input shapes: [?,56,1130], [?,28,1130].
Traceback (most recent call last):
  File ".\_2_train.py", line 364, in train
    forecaster.fit(x_train, y_train, batch_size=batch_size, epochs=epochs, workers=workers,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 66, in _method_wrapper
    return method(self, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 785, in fit
    tmp_logs = train_function(iterator)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 580, in __call__
    result = self._call(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 627, in _call
    self._initialize(args, kwds, add_initializers_to=initializers)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 505, in _initialize
    self._stateful_fn._get_concrete_function_internal_garbage_collected(  # pylint: disable=protected-access
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2446, in _get_concrete_function_internal_garbage_collected
    graph_function, _, _ = self._maybe_define_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2777, in _maybe_define_function
    graph_function = self._create_graph_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2657, in _create_graph_function
    func_graph_module.func_graph_from_py_func(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 981, in func_graph_from_py_func
    func_outputs = python_func(*func_args, **func_kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 441, in wrapped_fn
    return weak_wrapped_fn().__wrapped__(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 968, in wrapper
    raise e.ag_error_metadata.to_exception(e)
ValueError: in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:466 train_step  **
        loss = self.compiled_loss(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:204 __call__
        loss_value = loss_obj(y_t, y_p, sample_weight=sw)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\losses.py:143 __call__
        losses = self.call(y_true, y_pred)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\losses.py:246 call
        return self.fn(y_true, y_pred, **self._fn_kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\losses.py:1198 mean_squared_error
        return K.mean(math_ops.squared_difference(y_pred, y_true), axis=-1)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\gen_math_ops.py:10037 squared_difference
        _, _, _op, _outputs = _op_def_library._apply_op_helper(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\op_def_library.py:742 _apply_op_helper
        op = g._create_op_internal(op_type_name, inputs, dtypes=None,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py:593 _create_op_internal
        return super(FuncGraph, self)._create_op_internal(  # pylint: disable=protected-access
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py:3319 _create_op_internal
        ret = Operation(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py:1816 __init__
        self._c_op = _create_c_op(self._graph, node_def, inputs,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py:1657 _create_c_op
        raise ValueError(str(e))

    ValueError: Dimensions must be equal, but are 56 and 28 for '{{node mean_squared_error/SquaredDifference}} = SquaredDifference[T=DT_FLOAT](sequential/time_distributed/Reshape_1, IteratorGetNext:1)' with input shapes: [?,56,1130], [?,28,1130].


09.May 2020 22:12:56 correct LSTM model creation and compilation

09.May 2020 22:12:56 correct LSTM model creation and compilation

09.May 2020 22:12:56 correct LSTM model creation and compilation

09.May 2020 22:19:30 time series number (by group) saved to forecast settings

09.May 2020 22:19:30 correct model training, correct saving of model and weights

09.May 2020 22:19:30 settings modified and saved

09.May 2020 22:22:06 correct LSTM model creation and compilation

09.May 2020 22:22:06 correct LSTM model creation and compilation

09.May 2020 22:22:06 correct LSTM model creation and compilation

09.May 2020 22:32:28 time series number (by group) saved to forecast settings

09.May 2020 22:32:28 correct model training, correct saving of model and weights

09.May 2020 22:32:28 settings modified and saved

09.May 2020 22:40:18 correct LSTM model creation and compilation

09.May 2020 22:40:18 correct LSTM model creation and compilation

09.May 2020 22:40:18 correct LSTM model creation and compilation

09.May 2020 22:49:49 model training error
 OOM when allocating tensor with shape[8,17783] and type float on /job:localhost/replica:0/task:0/device:GPU:0 by allocator GPU_0_bfc
	 [[{{node sequential_1/bidirectional_4/forward_rnn_4/while/body/_1/peephole_lstm_cell_4/ones_like}}]]
Hint: If you want to see a list of allocated tensors when OOM happens, add report_tensor_allocations_upon_oom to RunOptions for current allocation info.
 [Op:__inference_train_function_73202]

Function call stack:
train_function
Traceback (most recent call last):
  File ".\_2_train.py", line 364, in train
    forecaster.fit(x_train, y_train, batch_size=batch_size, epochs=epochs, workers=workers,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 66, in _method_wrapper
    return method(self, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 785, in fit
    tmp_logs = train_function(iterator)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 580, in __call__
    result = self._call(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 644, in _call
    return self._stateless_fn(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2420, in __call__
    return graph_function._filtered_call(args, kwargs)  # pylint: disable=protected-access
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 1661, in _filtered_call
    return self._call_flat(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 1745, in _call_flat
    return self._build_call_outputs(self._inference_function.call(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 593, in call
    outputs = execute.execute(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\execute.py", line 59, in quick_execute
    tensors = pywrap_tfe.TFE_Py_Execute(ctx._handle, device_name, op_name,
tensorflow.python.framework.errors_impl.ResourceExhaustedError:  OOM when allocating tensor with shape[8,17783] and type float on /job:localhost/replica:0/task:0/device:GPU:0 by allocator GPU_0_bfc
	 [[{{node sequential_1/bidirectional_4/forward_rnn_4/while/body/_1/peephole_lstm_cell_4/ones_like}}]]
Hint: If you want to see a list of allocated tensors when OOM happens, add report_tensor_allocations_upon_oom to RunOptions for current allocation info.
 [Op:__inference_train_function_73202]

Function call stack:
train_function


09.May 2020 22:56:44 correct LSTM model creation and compilation

09.May 2020 22:56:44 correct LSTM model creation and compilation

09.May 2020 22:56:44 correct LSTM model creation and compilation

09.May 2020 23:18:08 time series number (by group) saved to forecast settings

09.May 2020 23:18:08 correct model training, correct saving of model and weights

09.May 2020 23:18:08 settings modified and saved

09.May 2020 23:44:43 correct LSTM model creation and compilation

09.May 2020 23:44:43 correct LSTM model creation and compilation

09.May 2020 23:44:43 correct LSTM model creation and compilation

09.May 2020 23:44:45 model training error
in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:466 train_step  **
        loss = self.compiled_loss(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:204 __call__
        loss_value = loss_obj(y_t, y_p, sample_weight=sw)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\losses.py:143 __call__
        losses = self.call(y_true, y_pred)
    .\_2_train.py:102 call
        ex_post_forecast_error_denominator = np.maximum(local_true, local_pred)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py:748 __array__
        raise NotImplementedError("Cannot convert a symbolic Tensor ({}) to a numpy"

    NotImplementedError: Cannot convert a symbolic Tensor (IteratorGetNext:1) to a numpy array.
Traceback (most recent call last):
  File ".\_2_train.py", line 375, in train
    forecaster.fit(x_train, y_train, batch_size=batch_size, epochs=epochs, workers=workers,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 66, in _method_wrapper
    return method(self, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 785, in fit
    tmp_logs = train_function(iterator)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 580, in __call__
    result = self._call(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 627, in _call
    self._initialize(args, kwds, add_initializers_to=initializers)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 505, in _initialize
    self._stateful_fn._get_concrete_function_internal_garbage_collected(  # pylint: disable=protected-access
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2446, in _get_concrete_function_internal_garbage_collected
    graph_function, _, _ = self._maybe_define_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2777, in _maybe_define_function
    graph_function = self._create_graph_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2657, in _create_graph_function
    func_graph_module.func_graph_from_py_func(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 981, in func_graph_from_py_func
    func_outputs = python_func(*func_args, **func_kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 441, in wrapped_fn
    return weak_wrapped_fn().__wrapped__(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 968, in wrapper
    raise e.ag_error_metadata.to_exception(e)
NotImplementedError: in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:466 train_step  **
        loss = self.compiled_loss(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:204 __call__
        loss_value = loss_obj(y_t, y_p, sample_weight=sw)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\losses.py:143 __call__
        losses = self.call(y_true, y_pred)
    .\_2_train.py:102 call
        ex_post_forecast_error_denominator = np.maximum(local_true, local_pred)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py:748 __array__
        raise NotImplementedError("Cannot convert a symbolic Tensor ({}) to a numpy"

    NotImplementedError: Cannot convert a symbolic Tensor (IteratorGetNext:1) to a numpy array.


09.May 2020 23:49:42 correct LSTM model creation and compilation

09.May 2020 23:49:42 correct LSTM model creation and compilation

09.May 2020 23:49:42 correct LSTM model creation and compilation

09.May 2020 23:49:44 model training error
in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:466 train_step  **
        loss = self.compiled_loss(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:204 __call__
        loss_value = loss_obj(y_t, y_p, sample_weight=sw)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\losses.py:143 __call__
        losses = self.call(y_true, y_pred)
    .\_2_train.py:103 call
        ex_post_forecast_error_numerator = np.add(local_pred, -local_true)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py:748 __array__
        raise NotImplementedError("Cannot convert a symbolic Tensor ({}) to a numpy"

    NotImplementedError: Cannot convert a symbolic Tensor (sequential/time_distributed/Reshape_1:0) to a numpy array.
Traceback (most recent call last):
  File ".\_2_train.py", line 375, in train
    forecaster.fit(x_train, y_train, batch_size=batch_size, epochs=epochs, workers=workers,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 66, in _method_wrapper
    return method(self, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 785, in fit
    tmp_logs = train_function(iterator)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 580, in __call__
    result = self._call(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 627, in _call
    self._initialize(args, kwds, add_initializers_to=initializers)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 505, in _initialize
    self._stateful_fn._get_concrete_function_internal_garbage_collected(  # pylint: disable=protected-access
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2446, in _get_concrete_function_internal_garbage_collected
    graph_function, _, _ = self._maybe_define_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2777, in _maybe_define_function
    graph_function = self._create_graph_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2657, in _create_graph_function
    func_graph_module.func_graph_from_py_func(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 981, in func_graph_from_py_func
    func_outputs = python_func(*func_args, **func_kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 441, in wrapped_fn
    return weak_wrapped_fn().__wrapped__(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 968, in wrapper
    raise e.ag_error_metadata.to_exception(e)
NotImplementedError: in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:466 train_step  **
        loss = self.compiled_loss(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:204 __call__
        loss_value = loss_obj(y_t, y_p, sample_weight=sw)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\losses.py:143 __call__
        losses = self.call(y_true, y_pred)
    .\_2_train.py:103 call
        ex_post_forecast_error_numerator = np.add(local_pred, -local_true)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py:748 __array__
        raise NotImplementedError("Cannot convert a symbolic Tensor ({}) to a numpy"

    NotImplementedError: Cannot convert a symbolic Tensor (sequential/time_distributed/Reshape_1:0) to a numpy array.


09.May 2020 23:51:16 correct LSTM model creation and compilation

09.May 2020 23:51:16 correct LSTM model creation and compilation

09.May 2020 23:51:16 correct LSTM model creation and compilation

09.May 2020 23:51:18 model training error
in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:466 train_step  **
        loss = self.compiled_loss(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:204 __call__
        loss_value = loss_obj(y_t, y_p, sample_weight=sw)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\losses.py:143 __call__
        losses = self.call(y_true, y_pred)
    .\_2_train.py:104 call
        ex_post_forecast_error = np.mean(np.divide(ex_post_forecast_error_numerator,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py:748 __array__
        raise NotImplementedError("Cannot convert a symbolic Tensor ({}) to a numpy"

    NotImplementedError: Cannot convert a symbolic Tensor (forecast_error/Add:0) to a numpy array.
Traceback (most recent call last):
  File ".\_2_train.py", line 375, in train
    forecaster.fit(x_train, y_train, batch_size=batch_size, epochs=epochs, workers=workers,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 66, in _method_wrapper
    return method(self, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 785, in fit
    tmp_logs = train_function(iterator)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 580, in __call__
    result = self._call(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 627, in _call
    self._initialize(args, kwds, add_initializers_to=initializers)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 505, in _initialize
    self._stateful_fn._get_concrete_function_internal_garbage_collected(  # pylint: disable=protected-access
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2446, in _get_concrete_function_internal_garbage_collected
    graph_function, _, _ = self._maybe_define_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2777, in _maybe_define_function
    graph_function = self._create_graph_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2657, in _create_graph_function
    func_graph_module.func_graph_from_py_func(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 981, in func_graph_from_py_func
    func_outputs = python_func(*func_args, **func_kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 441, in wrapped_fn
    return weak_wrapped_fn().__wrapped__(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 968, in wrapper
    raise e.ag_error_metadata.to_exception(e)
NotImplementedError: in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:466 train_step  **
        loss = self.compiled_loss(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:204 __call__
        loss_value = loss_obj(y_t, y_p, sample_weight=sw)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\losses.py:143 __call__
        losses = self.call(y_true, y_pred)
    .\_2_train.py:104 call
        ex_post_forecast_error = np.mean(np.divide(ex_post_forecast_error_numerator,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py:748 __array__
        raise NotImplementedError("Cannot convert a symbolic Tensor ({}) to a numpy"

    NotImplementedError: Cannot convert a symbolic Tensor (forecast_error/Add:0) to a numpy array.


09.May 2020 23:54:31 correct LSTM model creation and compilation

09.May 2020 23:54:31 correct LSTM model creation and compilation

09.May 2020 23:54:31 correct LSTM model creation and compilation

09.May 2020 23:57:37 correct LSTM model creation and compilation

09.May 2020 23:57:37 correct LSTM model creation and compilation

09.May 2020 23:57:37 correct LSTM model creation and compilation

10.May 2020 00:01:50 correct LSTM model creation and compilation

10.May 2020 00:01:50 correct LSTM model creation and compilation

10.May 2020 00:01:50 correct LSTM model creation and compilation

10.May 2020 00:04:41 correct LSTM model creation and compilation

10.May 2020 00:04:41 correct LSTM model creation and compilation

10.May 2020 00:04:41 correct LSTM model creation and compilation

10.May 2020 00:12:01 correct LSTM model creation and compilation

10.May 2020 00:12:01 correct LSTM model creation and compilation

10.May 2020 00:12:01 correct LSTM model creation and compilation

10.May 2020 00:25:51 correct LSTM model creation and compilation

10.May 2020 00:25:51 correct LSTM model creation and compilation

10.May 2020 00:25:51 correct LSTM model creation and compilation

10.May 2020 00:25:53 model training error
in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:466 train_step  **
        loss = self.compiled_loss(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:204 __call__
        loss_value = loss_obj(y_t, y_p, sample_weight=sw)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\losses.py:143 __call__
        losses = self.call(y_true, y_pred)
    .\_2_train.py:103 call
        ex_post_forecast_error_denominator = tf.maximum(local_true, local_pred) if local_pred != local_pred \
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py:778 __bool__
        self._disallow_bool_casting()
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py:544 _disallow_bool_casting
        self._disallow_when_autograph_enabled(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py:530 _disallow_when_autograph_enabled
        raise errors.OperatorNotAllowedInGraphError(

    OperatorNotAllowedInGraphError: using a `tf.Tensor` as a Python `bool` is not allowed: AutoGraph did not convert this function. Try decorating it directly with @tf.function.
Traceback (most recent call last):
  File ".\_2_train.py", line 376, in train
    forecaster.fit(x_train, y_train, batch_size=batch_size, epochs=epochs, workers=workers,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 66, in _method_wrapper
    return method(self, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 785, in fit
    tmp_logs = train_function(iterator)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 580, in __call__
    result = self._call(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 627, in _call
    self._initialize(args, kwds, add_initializers_to=initializers)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 505, in _initialize
    self._stateful_fn._get_concrete_function_internal_garbage_collected(  # pylint: disable=protected-access
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2446, in _get_concrete_function_internal_garbage_collected
    graph_function, _, _ = self._maybe_define_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2777, in _maybe_define_function
    graph_function = self._create_graph_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2657, in _create_graph_function
    func_graph_module.func_graph_from_py_func(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 981, in func_graph_from_py_func
    func_outputs = python_func(*func_args, **func_kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 441, in wrapped_fn
    return weak_wrapped_fn().__wrapped__(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 968, in wrapper
    raise e.ag_error_metadata.to_exception(e)
tensorflow.python.framework.errors_impl.OperatorNotAllowedInGraphError: in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:466 train_step  **
        loss = self.compiled_loss(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:204 __call__
        loss_value = loss_obj(y_t, y_p, sample_weight=sw)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\losses.py:143 __call__
        losses = self.call(y_true, y_pred)
    .\_2_train.py:103 call
        ex_post_forecast_error_denominator = tf.maximum(local_true, local_pred) if local_pred != local_pred \
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py:778 __bool__
        self._disallow_bool_casting()
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py:544 _disallow_bool_casting
        self._disallow_when_autograph_enabled(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py:530 _disallow_when_autograph_enabled
        raise errors.OperatorNotAllowedInGraphError(

    OperatorNotAllowedInGraphError: using a `tf.Tensor` as a Python `bool` is not allowed: AutoGraph did not convert this function. Try decorating it directly with @tf.function.


10.May 2020 00:40:57 correct LSTM model creation and compilation

10.May 2020 00:40:57 correct LSTM model creation and compilation

10.May 2020 00:40:57 correct LSTM model creation and compilation

10.May 2020 00:48:28 correct LSTM model creation and compilation

10.May 2020 00:48:28 correct LSTM model creation and compilation

10.May 2020 00:48:29 correct LSTM model creation and compilation

10.May 2020 00:48:30 model training error
in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:466 train_step  **
        loss = self.compiled_loss(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:204 __call__
        loss_value = loss_obj(y_t, y_p, sample_weight=sw)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\losses.py:143 __call__
        losses = self.call(y_true, y_pred)
    .\_2_train.py:103 call
        ex_post_forecast_error_denominator = tf.maximum(local_pred, local_true) if tf.not_equal(local_pred, local_true)\
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py:778 __bool__
        self._disallow_bool_casting()
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py:544 _disallow_bool_casting
        self._disallow_when_autograph_enabled(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py:530 _disallow_when_autograph_enabled
        raise errors.OperatorNotAllowedInGraphError(

    OperatorNotAllowedInGraphError: using a `tf.Tensor` as a Python `bool` is not allowed: AutoGraph did not convert this function. Try decorating it directly with @tf.function.
Traceback (most recent call last):
  File ".\_2_train.py", line 376, in train
    forecaster.fit(x_train, y_train, batch_size=batch_size, epochs=epochs, workers=workers,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 66, in _method_wrapper
    return method(self, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 785, in fit
    tmp_logs = train_function(iterator)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 580, in __call__
    result = self._call(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 627, in _call
    self._initialize(args, kwds, add_initializers_to=initializers)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 505, in _initialize
    self._stateful_fn._get_concrete_function_internal_garbage_collected(  # pylint: disable=protected-access
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2446, in _get_concrete_function_internal_garbage_collected
    graph_function, _, _ = self._maybe_define_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2777, in _maybe_define_function
    graph_function = self._create_graph_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2657, in _create_graph_function
    func_graph_module.func_graph_from_py_func(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 981, in func_graph_from_py_func
    func_outputs = python_func(*func_args, **func_kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 441, in wrapped_fn
    return weak_wrapped_fn().__wrapped__(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 968, in wrapper
    raise e.ag_error_metadata.to_exception(e)
tensorflow.python.framework.errors_impl.OperatorNotAllowedInGraphError: in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:466 train_step  **
        loss = self.compiled_loss(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:204 __call__
        loss_value = loss_obj(y_t, y_p, sample_weight=sw)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\losses.py:143 __call__
        losses = self.call(y_true, y_pred)
    .\_2_train.py:103 call
        ex_post_forecast_error_denominator = tf.maximum(local_pred, local_true) if tf.not_equal(local_pred, local_true)\
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py:778 __bool__
        self._disallow_bool_casting()
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py:544 _disallow_bool_casting
        self._disallow_when_autograph_enabled(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py:530 _disallow_when_autograph_enabled
        raise errors.OperatorNotAllowedInGraphError(

    OperatorNotAllowedInGraphError: using a `tf.Tensor` as a Python `bool` is not allowed: AutoGraph did not convert this function. Try decorating it directly with @tf.function.


10.May 2020 00:50:22 correct LSTM model creation and compilation

10.May 2020 00:50:22 correct LSTM model creation and compilation

10.May 2020 00:50:22 correct LSTM model creation and compilation

10.May 2020 01:07:58 correct LSTM model creation and compilation

10.May 2020 01:07:58 correct LSTM model creation and compilation

10.May 2020 01:07:58 correct LSTM model creation and compilation

10.May 2020 01:08:00 model training error
in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:466 train_step  **
        loss = self.compiled_loss(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:204 __call__
        loss_value = loss_obj(y_t, y_p, sample_weight=sw)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\losses.py:143 __call__
        losses = self.call(y_true, y_pred)
    .\_2_train.py:107 call
        return ex_post_forecast_error

    NameError: name 'ex_post_forecast_error' is not defined
Traceback (most recent call last):
  File ".\_2_train.py", line 376, in train
    forecaster.fit(x_train, y_train, batch_size=batch_size, epochs=epochs, workers=workers,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 66, in _method_wrapper
    return method(self, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 785, in fit
    tmp_logs = train_function(iterator)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 580, in __call__
    result = self._call(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 627, in _call
    self._initialize(args, kwds, add_initializers_to=initializers)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 505, in _initialize
    self._stateful_fn._get_concrete_function_internal_garbage_collected(  # pylint: disable=protected-access
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2446, in _get_concrete_function_internal_garbage_collected
    graph_function, _, _ = self._maybe_define_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2777, in _maybe_define_function
    graph_function = self._create_graph_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2657, in _create_graph_function
    func_graph_module.func_graph_from_py_func(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 981, in func_graph_from_py_func
    func_outputs = python_func(*func_args, **func_kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 441, in wrapped_fn
    return weak_wrapped_fn().__wrapped__(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 968, in wrapper
    raise e.ag_error_metadata.to_exception(e)
NameError: in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:466 train_step  **
        loss = self.compiled_loss(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:204 __call__
        loss_value = loss_obj(y_t, y_p, sample_weight=sw)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\losses.py:143 __call__
        losses = self.call(y_true, y_pred)
    .\_2_train.py:107 call
        return ex_post_forecast_error

    NameError: name 'ex_post_forecast_error' is not defined


10.May 2020 01:18:23 correct LSTM model creation and compilation

10.May 2020 01:18:23 correct LSTM model creation and compilation

10.May 2020 01:18:23 correct LSTM model creation and compilation

10.May 2020 01:18:24 model training error
in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:466 train_step  **
        loss = self.compiled_loss(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:204 __call__
        loss_value = loss_obj(y_t, y_p, sample_weight=sw)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\losses.py:143 __call__
        losses = self.call(y_true, y_pred)
    .\_2_train.py:102 call
        local_true = kb.eval(local_true)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\backend.py:1290 eval
        return get_value(to_dense(x))
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\backend.py:3307 get_value
        return function([], x)(x)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\backend.py:3800 __call__
        [x._numpy() for x in outputs],  # pylint: disable=protected-access
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\backend.py:3800 <listcomp>
        [x._numpy() for x in outputs],  # pylint: disable=protected-access

    AttributeError: 'Tensor' object has no attribute '_numpy'
Traceback (most recent call last):
  File ".\_2_train.py", line 377, in train
    forecaster.fit(x_train, y_train, batch_size=batch_size, epochs=epochs, workers=workers,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 66, in _method_wrapper
    return method(self, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 785, in fit
    tmp_logs = train_function(iterator)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 580, in __call__
    result = self._call(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 627, in _call
    self._initialize(args, kwds, add_initializers_to=initializers)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 505, in _initialize
    self._stateful_fn._get_concrete_function_internal_garbage_collected(  # pylint: disable=protected-access
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2446, in _get_concrete_function_internal_garbage_collected
    graph_function, _, _ = self._maybe_define_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2777, in _maybe_define_function
    graph_function = self._create_graph_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2657, in _create_graph_function
    func_graph_module.func_graph_from_py_func(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 981, in func_graph_from_py_func
    func_outputs = python_func(*func_args, **func_kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 441, in wrapped_fn
    return weak_wrapped_fn().__wrapped__(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 968, in wrapper
    raise e.ag_error_metadata.to_exception(e)
AttributeError: in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:466 train_step  **
        loss = self.compiled_loss(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:204 __call__
        loss_value = loss_obj(y_t, y_p, sample_weight=sw)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\losses.py:143 __call__
        losses = self.call(y_true, y_pred)
    .\_2_train.py:102 call
        local_true = kb.eval(local_true)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\backend.py:1290 eval
        return get_value(to_dense(x))
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\backend.py:3307 get_value
        return function([], x)(x)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\backend.py:3800 __call__
        [x._numpy() for x in outputs],  # pylint: disable=protected-access
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\backend.py:3800 <listcomp>
        [x._numpy() for x in outputs],  # pylint: disable=protected-access

    AttributeError: 'Tensor' object has no attribute '_numpy'


10.May 2020 01:19:28 correct LSTM model creation and compilation

10.May 2020 01:19:28 correct LSTM model creation and compilation

10.May 2020 01:19:28 correct LSTM model creation and compilation

10.May 2020 01:19:30 model training error
in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:466 train_step  **
        loss = self.compiled_loss(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:204 __call__
        loss_value = loss_obj(y_t, y_p, sample_weight=sw)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\losses.py:143 __call__
        losses = self.call(y_true, y_pred)
    .\_2_train.py:102 call
        ex_post_forecast_error_denominator = np.maximum(local_true, local_pred)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py:748 __array__
        raise NotImplementedError("Cannot convert a symbolic Tensor ({}) to a numpy"

    NotImplementedError: Cannot convert a symbolic Tensor (IteratorGetNext:1) to a numpy array.
Traceback (most recent call last):
  File ".\_2_train.py", line 375, in train
    forecaster.fit(x_train, y_train, batch_size=batch_size, epochs=epochs, workers=workers,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 66, in _method_wrapper
    return method(self, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 785, in fit
    tmp_logs = train_function(iterator)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 580, in __call__
    result = self._call(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 627, in _call
    self._initialize(args, kwds, add_initializers_to=initializers)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 505, in _initialize
    self._stateful_fn._get_concrete_function_internal_garbage_collected(  # pylint: disable=protected-access
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2446, in _get_concrete_function_internal_garbage_collected
    graph_function, _, _ = self._maybe_define_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2777, in _maybe_define_function
    graph_function = self._create_graph_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2657, in _create_graph_function
    func_graph_module.func_graph_from_py_func(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 981, in func_graph_from_py_func
    func_outputs = python_func(*func_args, **func_kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 441, in wrapped_fn
    return weak_wrapped_fn().__wrapped__(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 968, in wrapper
    raise e.ag_error_metadata.to_exception(e)
NotImplementedError: in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:466 train_step  **
        loss = self.compiled_loss(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:204 __call__
        loss_value = loss_obj(y_t, y_p, sample_weight=sw)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\losses.py:143 __call__
        losses = self.call(y_true, y_pred)
    .\_2_train.py:102 call
        ex_post_forecast_error_denominator = np.maximum(local_true, local_pred)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py:748 __array__
        raise NotImplementedError("Cannot convert a symbolic Tensor ({}) to a numpy"

    NotImplementedError: Cannot convert a symbolic Tensor (IteratorGetNext:1) to a numpy array.


10.May 2020 01:32:10 model training error
custom_forecast_error() missing 2 required positional arguments: 'local_true' and 'local_pred'
Traceback (most recent call last):
  File ".\_2_train.py", line 164, in train
    losses_list.append(custom_forecast_error())
TypeError: custom_forecast_error() missing 2 required positional arguments: 'local_true' and 'local_pred'

10.May 2020 01:39:52 correct LSTM model creation and compilation

10.May 2020 01:39:52 correct LSTM model creation and compilation

10.May 2020 01:39:52 correct LSTM model creation and compilation

10.May 2020 01:39:54 model training error
in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:466 train_step  **
        loss = self.compiled_loss(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:204 __call__
        loss_value = loss_obj(y_t, y_p, sample_weight=sw)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\losses.py:143 __call__
        losses = self.call(y_true, y_pred)
    .\_2_train.py:103 call
        ex_post_forecast_error_denominator = np.maximum(local_true, local_pred)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py:748 __array__
        raise NotImplementedError("Cannot convert a symbolic Tensor ({}) to a numpy"

    NotImplementedError: Cannot convert a symbolic Tensor (IteratorGetNext:1) to a numpy array.
Traceback (most recent call last):
  File ".\_2_train.py", line 378, in train
    forecaster.fit(x_train, y_train, batch_size=batch_size, epochs=epochs, workers=workers,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 66, in _method_wrapper
    return method(self, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 785, in fit
    tmp_logs = train_function(iterator)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 580, in __call__
    result = self._call(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 627, in _call
    self._initialize(args, kwds, add_initializers_to=initializers)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 505, in _initialize
    self._stateful_fn._get_concrete_function_internal_garbage_collected(  # pylint: disable=protected-access
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2446, in _get_concrete_function_internal_garbage_collected
    graph_function, _, _ = self._maybe_define_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2777, in _maybe_define_function
    graph_function = self._create_graph_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2657, in _create_graph_function
    func_graph_module.func_graph_from_py_func(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 981, in func_graph_from_py_func
    func_outputs = python_func(*func_args, **func_kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 441, in wrapped_fn
    return weak_wrapped_fn().__wrapped__(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 968, in wrapper
    raise e.ag_error_metadata.to_exception(e)
NotImplementedError: in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:466 train_step  **
        loss = self.compiled_loss(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:204 __call__
        loss_value = loss_obj(y_t, y_p, sample_weight=sw)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\losses.py:143 __call__
        losses = self.call(y_true, y_pred)
    .\_2_train.py:103 call
        ex_post_forecast_error_denominator = np.maximum(local_true, local_pred)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py:748 __array__
        raise NotImplementedError("Cannot convert a symbolic Tensor ({}) to a numpy"

    NotImplementedError: Cannot convert a symbolic Tensor (IteratorGetNext:1) to a numpy array.


10.May 2020 01:41:25 correct LSTM model creation and compilation

10.May 2020 01:41:25 correct LSTM model creation and compilation

10.May 2020 01:41:25 correct LSTM model creation and compilation

10.May 2020 01:44:37 correct LSTM model creation and compilation

10.May 2020 01:44:37 correct LSTM model creation and compilation

10.May 2020 01:44:37 correct LSTM model creation and compilation

10.May 2020 01:46:29 correct LSTM model creation and compilation

10.May 2020 01:46:29 correct LSTM model creation and compilation

10.May 2020 01:46:29 correct LSTM model creation and compilation

10.May 2020 01:46:30 model training error
in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:466 train_step  **
        loss = self.compiled_loss(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:204 __call__
        loss_value = loss_obj(y_t, y_p, sample_weight=sw)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\losses.py:143 __call__
        losses = self.call(y_true, y_pred)
    .\_2_train.py:93 call
        ex_post_forecast_error_numerator = np.add(local_pred, -local_true)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py:748 __array__
        raise NotImplementedError("Cannot convert a symbolic Tensor ({}) to a numpy"

    NotImplementedError: Cannot convert a symbolic Tensor (sequential/time_distributed/Reshape_1:0) to a numpy array.
Traceback (most recent call last):
  File ".\_2_train.py", line 376, in train
    forecaster.fit(x_train, y_train, batch_size=batch_size, epochs=epochs, workers=workers,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 66, in _method_wrapper
    return method(self, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 785, in fit
    tmp_logs = train_function(iterator)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 580, in __call__
    result = self._call(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 627, in _call
    self._initialize(args, kwds, add_initializers_to=initializers)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 505, in _initialize
    self._stateful_fn._get_concrete_function_internal_garbage_collected(  # pylint: disable=protected-access
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2446, in _get_concrete_function_internal_garbage_collected
    graph_function, _, _ = self._maybe_define_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2777, in _maybe_define_function
    graph_function = self._create_graph_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2657, in _create_graph_function
    func_graph_module.func_graph_from_py_func(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 981, in func_graph_from_py_func
    func_outputs = python_func(*func_args, **func_kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 441, in wrapped_fn
    return weak_wrapped_fn().__wrapped__(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 968, in wrapper
    raise e.ag_error_metadata.to_exception(e)
NotImplementedError: in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:466 train_step  **
        loss = self.compiled_loss(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:204 __call__
        loss_value = loss_obj(y_t, y_p, sample_weight=sw)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\losses.py:143 __call__
        losses = self.call(y_true, y_pred)
    .\_2_train.py:93 call
        ex_post_forecast_error_numerator = np.add(local_pred, -local_true)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py:748 __array__
        raise NotImplementedError("Cannot convert a symbolic Tensor ({}) to a numpy"

    NotImplementedError: Cannot convert a symbolic Tensor (sequential/time_distributed/Reshape_1:0) to a numpy array.


10.May 2020 01:47:55 correct LSTM model creation and compilation

10.May 2020 01:47:55 correct LSTM model creation and compilation

10.May 2020 01:47:55 correct LSTM model creation and compilation

10.May 2020 01:47:57 model training error
in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:466 train_step  **
        loss = self.compiled_loss(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:204 __call__
        loss_value = loss_obj(y_t, y_p, sample_weight=sw)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\losses.py:143 __call__
        losses = self.call(y_true, y_pred)
    .\_2_train.py:95 call
        ex_post_forecast_error_denominator = np.maximum(local_true, local_pred)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py:748 __array__
        raise NotImplementedError("Cannot convert a symbolic Tensor ({}) to a numpy"

    NotImplementedError: Cannot convert a symbolic Tensor (IteratorGetNext:1) to a numpy array.
Traceback (most recent call last):
  File ".\_2_train.py", line 377, in train
    forecaster.fit(x_train, y_train, batch_size=batch_size, epochs=epochs, workers=workers,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 66, in _method_wrapper
    return method(self, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 785, in fit
    tmp_logs = train_function(iterator)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 580, in __call__
    result = self._call(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 627, in _call
    self._initialize(args, kwds, add_initializers_to=initializers)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 505, in _initialize
    self._stateful_fn._get_concrete_function_internal_garbage_collected(  # pylint: disable=protected-access
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2446, in _get_concrete_function_internal_garbage_collected
    graph_function, _, _ = self._maybe_define_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2777, in _maybe_define_function
    graph_function = self._create_graph_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2657, in _create_graph_function
    func_graph_module.func_graph_from_py_func(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 981, in func_graph_from_py_func
    func_outputs = python_func(*func_args, **func_kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 441, in wrapped_fn
    return weak_wrapped_fn().__wrapped__(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 968, in wrapper
    raise e.ag_error_metadata.to_exception(e)
NotImplementedError: in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:466 train_step  **
        loss = self.compiled_loss(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:204 __call__
        loss_value = loss_obj(y_t, y_p, sample_weight=sw)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\losses.py:143 __call__
        losses = self.call(y_true, y_pred)
    .\_2_train.py:95 call
        ex_post_forecast_error_denominator = np.maximum(local_true, local_pred)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py:748 __array__
        raise NotImplementedError("Cannot convert a symbolic Tensor ({}) to a numpy"

    NotImplementedError: Cannot convert a symbolic Tensor (IteratorGetNext:1) to a numpy array.


10.May 2020 01:57:11 correct LSTM model creation and compilation

10.May 2020 01:57:11 correct LSTM model creation and compilation

10.May 2020 01:57:11 correct LSTM model creation and compilation

10.May 2020 01:57:13 model training error
in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:466 train_step  **
        loss = self.compiled_loss(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:204 __call__
        loss_value = loss_obj(y_t, y_p, sample_weight=sw)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\losses.py:143 __call__
        losses = self.call(y_true, y_pred)
    .\_2_train.py:95 call
        ex_post_forecast_error_denominator = tf.maximum(local_true, local_pred).eval()
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py:814 eval
        return _eval_using_default_session(self, feed_dict, self.graph, session)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py:5312 _eval_using_default_session
        raise ValueError("Cannot evaluate tensor using `eval()`: No default "

    ValueError: Cannot evaluate tensor using `eval()`: No default session is registered. Use `with sess.as_default()` or pass an explicit session to `eval(session=sess)`
Traceback (most recent call last):
  File ".\_2_train.py", line 377, in train
    forecaster.fit(x_train, y_train, batch_size=batch_size, epochs=epochs, workers=workers,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 66, in _method_wrapper
    return method(self, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 785, in fit
    tmp_logs = train_function(iterator)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 580, in __call__
    result = self._call(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 627, in _call
    self._initialize(args, kwds, add_initializers_to=initializers)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 505, in _initialize
    self._stateful_fn._get_concrete_function_internal_garbage_collected(  # pylint: disable=protected-access
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2446, in _get_concrete_function_internal_garbage_collected
    graph_function, _, _ = self._maybe_define_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2777, in _maybe_define_function
    graph_function = self._create_graph_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2657, in _create_graph_function
    func_graph_module.func_graph_from_py_func(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 981, in func_graph_from_py_func
    func_outputs = python_func(*func_args, **func_kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 441, in wrapped_fn
    return weak_wrapped_fn().__wrapped__(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 968, in wrapper
    raise e.ag_error_metadata.to_exception(e)
ValueError: in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:466 train_step  **
        loss = self.compiled_loss(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:204 __call__
        loss_value = loss_obj(y_t, y_p, sample_weight=sw)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\losses.py:143 __call__
        losses = self.call(y_true, y_pred)
    .\_2_train.py:95 call
        ex_post_forecast_error_denominator = tf.maximum(local_true, local_pred).eval()
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py:814 eval
        return _eval_using_default_session(self, feed_dict, self.graph, session)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py:5312 _eval_using_default_session
        raise ValueError("Cannot evaluate tensor using `eval()`: No default "

    ValueError: Cannot evaluate tensor using `eval()`: No default session is registered. Use `with sess.as_default()` or pass an explicit session to `eval(session=sess)`


10.May 2020 01:59:41 correct LSTM model creation and compilation

10.May 2020 01:59:41 correct LSTM model creation and compilation

10.May 2020 01:59:41 correct LSTM model creation and compilation

10.May 2020 01:59:43 model training error
in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:466 train_step  **
        loss = self.compiled_loss(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:204 __call__
        loss_value = loss_obj(y_t, y_p, sample_weight=sw)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\losses.py:143 __call__
        losses = self.call(y_true, y_pred)
    .\_2_train.py:95 call
        ex_post_forecast_error_denominator = tf.sparse.maximum(local_true, local_pred)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\sparse_ops.py:2510 sparse_maximum
        [sp_a.indices, sp_a.values, sp_b.indices, sp_b.values]) as name:

    AttributeError: 'Tensor' object has no attribute 'indices'
Traceback (most recent call last):
  File ".\_2_train.py", line 377, in train
    forecaster.fit(x_train, y_train, batch_size=batch_size, epochs=epochs, workers=workers,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 66, in _method_wrapper
    return method(self, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 785, in fit
    tmp_logs = train_function(iterator)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 580, in __call__
    result = self._call(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 627, in _call
    self._initialize(args, kwds, add_initializers_to=initializers)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 505, in _initialize
    self._stateful_fn._get_concrete_function_internal_garbage_collected(  # pylint: disable=protected-access
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2446, in _get_concrete_function_internal_garbage_collected
    graph_function, _, _ = self._maybe_define_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2777, in _maybe_define_function
    graph_function = self._create_graph_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2657, in _create_graph_function
    func_graph_module.func_graph_from_py_func(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 981, in func_graph_from_py_func
    func_outputs = python_func(*func_args, **func_kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 441, in wrapped_fn
    return weak_wrapped_fn().__wrapped__(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 968, in wrapper
    raise e.ag_error_metadata.to_exception(e)
AttributeError: in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:466 train_step  **
        loss = self.compiled_loss(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:204 __call__
        loss_value = loss_obj(y_t, y_p, sample_weight=sw)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\losses.py:143 __call__
        losses = self.call(y_true, y_pred)
    .\_2_train.py:95 call
        ex_post_forecast_error_denominator = tf.sparse.maximum(local_true, local_pred)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\sparse_ops.py:2510 sparse_maximum
        [sp_a.indices, sp_a.values, sp_b.indices, sp_b.values]) as name:

    AttributeError: 'Tensor' object has no attribute 'indices'


10.May 2020 02:02:54 correct LSTM model creation and compilation

10.May 2020 02:02:54 correct LSTM model creation and compilation

10.May 2020 02:02:54 correct LSTM model creation and compilation

10.May 2020 02:02:56 model training error
in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:466 train_step  **
        loss = self.compiled_loss(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:204 __call__
        loss_value = loss_obj(y_t, y_p, sample_weight=sw)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\losses.py:143 __call__
        losses = self.call(y_true, y_pred)
    .\_2_train.py:95 call
        ex_post_forecast_error_denominator = np.maximum(np.array(local_pred), np.array(local_true))
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py:748 __array__
        raise NotImplementedError("Cannot convert a symbolic Tensor ({}) to a numpy"

    NotImplementedError: Cannot convert a symbolic Tensor (sequential/time_distributed/Reshape_1:0) to a numpy array.
Traceback (most recent call last):
  File ".\_2_train.py", line 377, in train
    forecaster.fit(x_train, y_train, batch_size=batch_size, epochs=epochs, workers=workers,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 66, in _method_wrapper
    return method(self, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 785, in fit
    tmp_logs = train_function(iterator)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 580, in __call__
    result = self._call(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 627, in _call
    self._initialize(args, kwds, add_initializers_to=initializers)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 505, in _initialize
    self._stateful_fn._get_concrete_function_internal_garbage_collected(  # pylint: disable=protected-access
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2446, in _get_concrete_function_internal_garbage_collected
    graph_function, _, _ = self._maybe_define_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2777, in _maybe_define_function
    graph_function = self._create_graph_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2657, in _create_graph_function
    func_graph_module.func_graph_from_py_func(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 981, in func_graph_from_py_func
    func_outputs = python_func(*func_args, **func_kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 441, in wrapped_fn
    return weak_wrapped_fn().__wrapped__(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 968, in wrapper
    raise e.ag_error_metadata.to_exception(e)
NotImplementedError: in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:466 train_step  **
        loss = self.compiled_loss(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:204 __call__
        loss_value = loss_obj(y_t, y_p, sample_weight=sw)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\losses.py:143 __call__
        losses = self.call(y_true, y_pred)
    .\_2_train.py:95 call
        ex_post_forecast_error_denominator = np.maximum(np.array(local_pred), np.array(local_true))
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py:748 __array__
        raise NotImplementedError("Cannot convert a symbolic Tensor ({}) to a numpy"

    NotImplementedError: Cannot convert a symbolic Tensor (sequential/time_distributed/Reshape_1:0) to a numpy array.


10.May 2020 02:03:47 correct LSTM model creation and compilation

10.May 2020 02:03:47 correct LSTM model creation and compilation

10.May 2020 02:03:47 correct LSTM model creation and compilation

10.May 2020 02:03:49 model training error
in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:466 train_step  **
        loss = self.compiled_loss(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:204 __call__
        loss_value = loss_obj(y_t, y_p, sample_weight=sw)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\losses.py:143 __call__
        losses = self.call(y_true, y_pred)
    .\_2_train.py:95 call
        ex_post_forecast_error_denominator = np.maximum(np.amax(local_pred), np.amax(local_true))
    <__array_function__ internals>:5 amax
        
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\numpy\core\fromnumeric.py:2667 amax
        return _wrapreduction(a, np.maximum, 'max', axis, None, out,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\numpy\core\fromnumeric.py:90 _wrapreduction
        return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py:748 __array__
        raise NotImplementedError("Cannot convert a symbolic Tensor ({}) to a numpy"

    NotImplementedError: Cannot convert a symbolic Tensor (sequential/time_distributed/Reshape_1:0) to a numpy array.
Traceback (most recent call last):
  File ".\_2_train.py", line 377, in train
    forecaster.fit(x_train, y_train, batch_size=batch_size, epochs=epochs, workers=workers,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 66, in _method_wrapper
    return method(self, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 785, in fit
    tmp_logs = train_function(iterator)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 580, in __call__
    result = self._call(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 627, in _call
    self._initialize(args, kwds, add_initializers_to=initializers)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 505, in _initialize
    self._stateful_fn._get_concrete_function_internal_garbage_collected(  # pylint: disable=protected-access
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2446, in _get_concrete_function_internal_garbage_collected
    graph_function, _, _ = self._maybe_define_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2777, in _maybe_define_function
    graph_function = self._create_graph_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2657, in _create_graph_function
    func_graph_module.func_graph_from_py_func(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 981, in func_graph_from_py_func
    func_outputs = python_func(*func_args, **func_kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 441, in wrapped_fn
    return weak_wrapped_fn().__wrapped__(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 968, in wrapper
    raise e.ag_error_metadata.to_exception(e)
NotImplementedError: in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:466 train_step  **
        loss = self.compiled_loss(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:204 __call__
        loss_value = loss_obj(y_t, y_p, sample_weight=sw)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\losses.py:143 __call__
        losses = self.call(y_true, y_pred)
    .\_2_train.py:95 call
        ex_post_forecast_error_denominator = np.maximum(np.amax(local_pred), np.amax(local_true))
    <__array_function__ internals>:5 amax
        
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\numpy\core\fromnumeric.py:2667 amax
        return _wrapreduction(a, np.maximum, 'max', axis, None, out,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\numpy\core\fromnumeric.py:90 _wrapreduction
        return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py:748 __array__
        raise NotImplementedError("Cannot convert a symbolic Tensor ({}) to a numpy"

    NotImplementedError: Cannot convert a symbolic Tensor (sequential/time_distributed/Reshape_1:0) to a numpy array.


10.May 2020 02:07:22 correct LSTM model creation and compilation

10.May 2020 02:07:22 correct LSTM model creation and compilation

10.May 2020 02:07:22 correct LSTM model creation and compilation

10.May 2020 02:07:24 model training error
in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:466 train_step  **
        loss = self.compiled_loss(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:204 __call__
        loss_value = loss_obj(y_t, y_p, sample_weight=sw)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\losses.py:143 __call__
        losses = self.call(y_true, y_pred)
    .\_2_train.py:105 call
        m_mape_denominator = np.add(1, np.abs(local_true))
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py:748 __array__
        raise NotImplementedError("Cannot convert a symbolic Tensor ({}) to a numpy"

    NotImplementedError: Cannot convert a symbolic Tensor (IteratorGetNext:1) to a numpy array.
Traceback (most recent call last):
  File ".\_2_train.py", line 377, in train
    forecaster.fit(x_train, y_train, batch_size=batch_size, epochs=epochs, workers=workers,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 66, in _method_wrapper
    return method(self, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 785, in fit
    tmp_logs = train_function(iterator)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 580, in __call__
    result = self._call(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 627, in _call
    self._initialize(args, kwds, add_initializers_to=initializers)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 505, in _initialize
    self._stateful_fn._get_concrete_function_internal_garbage_collected(  # pylint: disable=protected-access
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2446, in _get_concrete_function_internal_garbage_collected
    graph_function, _, _ = self._maybe_define_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2777, in _maybe_define_function
    graph_function = self._create_graph_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2657, in _create_graph_function
    func_graph_module.func_graph_from_py_func(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 981, in func_graph_from_py_func
    func_outputs = python_func(*func_args, **func_kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 441, in wrapped_fn
    return weak_wrapped_fn().__wrapped__(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 968, in wrapper
    raise e.ag_error_metadata.to_exception(e)
NotImplementedError: in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:466 train_step  **
        loss = self.compiled_loss(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:204 __call__
        loss_value = loss_obj(y_t, y_p, sample_weight=sw)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\losses.py:143 __call__
        losses = self.call(y_true, y_pred)
    .\_2_train.py:105 call
        m_mape_denominator = np.add(1, np.abs(local_true))
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py:748 __array__
        raise NotImplementedError("Cannot convert a symbolic Tensor ({}) to a numpy"

    NotImplementedError: Cannot convert a symbolic Tensor (IteratorGetNext:1) to a numpy array.


10.May 2020 02:09:22 correct LSTM model creation and compilation

10.May 2020 02:09:22 correct LSTM model creation and compilation

10.May 2020 02:09:22 correct LSTM model creation and compilation

10.May 2020 02:10:52 correct LSTM model creation and compilation

10.May 2020 02:10:52 correct LSTM model creation and compilation

10.May 2020 02:10:52 correct LSTM model creation and compilation

10.May 2020 02:12:08 correct LSTM model creation and compilation

10.May 2020 02:12:08 correct LSTM model creation and compilation

10.May 2020 02:12:08 correct LSTM model creation and compilation

10.May 2020 02:12:10 model training error
in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:466 train_step  **
        loss = self.compiled_loss(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:204 __call__
        loss_value = loss_obj(y_t, y_p, sample_weight=sw)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\losses.py:143 __call__
        losses = self.call(y_true, y_pred)
    .\_2_train.py:95 call
        ex_post_forecast_error_denominator = np.maximum(np.amax(local_pred), np.amax(local_true))
    <__array_function__ internals>:5 amax
        
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\numpy\core\fromnumeric.py:2667 amax
        return _wrapreduction(a, np.maximum, 'max', axis, None, out,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\numpy\core\fromnumeric.py:90 _wrapreduction
        return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py:748 __array__
        raise NotImplementedError("Cannot convert a symbolic Tensor ({}) to a numpy"

    NotImplementedError: Cannot convert a symbolic Tensor (sequential/time_distributed/Reshape_1:0) to a numpy array.
Traceback (most recent call last):
  File ".\_2_train.py", line 377, in train
    forecaster.fit(x_train, y_train, batch_size=batch_size, epochs=epochs, workers=workers,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 66, in _method_wrapper
    return method(self, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 785, in fit
    tmp_logs = train_function(iterator)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 580, in __call__
    result = self._call(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 627, in _call
    self._initialize(args, kwds, add_initializers_to=initializers)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 505, in _initialize
    self._stateful_fn._get_concrete_function_internal_garbage_collected(  # pylint: disable=protected-access
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2446, in _get_concrete_function_internal_garbage_collected
    graph_function, _, _ = self._maybe_define_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2777, in _maybe_define_function
    graph_function = self._create_graph_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2657, in _create_graph_function
    func_graph_module.func_graph_from_py_func(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 981, in func_graph_from_py_func
    func_outputs = python_func(*func_args, **func_kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 441, in wrapped_fn
    return weak_wrapped_fn().__wrapped__(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 968, in wrapper
    raise e.ag_error_metadata.to_exception(e)
NotImplementedError: in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:466 train_step  **
        loss = self.compiled_loss(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:204 __call__
        loss_value = loss_obj(y_t, y_p, sample_weight=sw)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\losses.py:143 __call__
        losses = self.call(y_true, y_pred)
    .\_2_train.py:95 call
        ex_post_forecast_error_denominator = np.maximum(np.amax(local_pred), np.amax(local_true))
    <__array_function__ internals>:5 amax
        
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\numpy\core\fromnumeric.py:2667 amax
        return _wrapreduction(a, np.maximum, 'max', axis, None, out,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\numpy\core\fromnumeric.py:90 _wrapreduction
        return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py:748 __array__
        raise NotImplementedError("Cannot convert a symbolic Tensor ({}) to a numpy"

    NotImplementedError: Cannot convert a symbolic Tensor (sequential/time_distributed/Reshape_1:0) to a numpy array.


10.May 2020 02:15:43 correct LSTM model creation and compilation

10.May 2020 02:15:43 correct LSTM model creation and compilation

10.May 2020 02:15:43 correct LSTM model creation and compilation

10.May 2020 02:15:44 model training error
in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:466 train_step  **
        loss = self.compiled_loss(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:204 __call__
        loss_value = loss_obj(y_t, y_p, sample_weight=sw)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\losses.py:143 __call__
        losses = self.call(y_true, y_pred)
    .\_2_train.py:95 call
        ex_post_forecast_error_denominator = np.maximum(np.amax(local_pred), np.amax(local_true))
    <__array_function__ internals>:5 amax
        
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\numpy\core\fromnumeric.py:2667 amax
        return _wrapreduction(a, np.maximum, 'max', axis, None, out,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\numpy\core\fromnumeric.py:90 _wrapreduction
        return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py:748 __array__
        raise NotImplementedError("Cannot convert a symbolic Tensor ({}) to a numpy"

    NotImplementedError: Cannot convert a symbolic Tensor (sequential/time_distributed/Reshape_1:0) to a numpy array.
Traceback (most recent call last):
  File ".\_2_train.py", line 378, in train
    forecaster.fit(x_train, y_train, batch_size=batch_size, epochs=epochs, workers=workers,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 66, in _method_wrapper
    return method(self, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 785, in fit
    tmp_logs = train_function(iterator)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 580, in __call__
    result = self._call(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 627, in _call
    self._initialize(args, kwds, add_initializers_to=initializers)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 505, in _initialize
    self._stateful_fn._get_concrete_function_internal_garbage_collected(  # pylint: disable=protected-access
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2446, in _get_concrete_function_internal_garbage_collected
    graph_function, _, _ = self._maybe_define_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2777, in _maybe_define_function
    graph_function = self._create_graph_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2657, in _create_graph_function
    func_graph_module.func_graph_from_py_func(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 981, in func_graph_from_py_func
    func_outputs = python_func(*func_args, **func_kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 441, in wrapped_fn
    return weak_wrapped_fn().__wrapped__(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 968, in wrapper
    raise e.ag_error_metadata.to_exception(e)
NotImplementedError: in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:466 train_step  **
        loss = self.compiled_loss(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:204 __call__
        loss_value = loss_obj(y_t, y_p, sample_weight=sw)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\losses.py:143 __call__
        losses = self.call(y_true, y_pred)
    .\_2_train.py:95 call
        ex_post_forecast_error_denominator = np.maximum(np.amax(local_pred), np.amax(local_true))
    <__array_function__ internals>:5 amax
        
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\numpy\core\fromnumeric.py:2667 amax
        return _wrapreduction(a, np.maximum, 'max', axis, None, out,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\numpy\core\fromnumeric.py:90 _wrapreduction
        return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py:748 __array__
        raise NotImplementedError("Cannot convert a symbolic Tensor ({}) to a numpy"

    NotImplementedError: Cannot convert a symbolic Tensor (sequential/time_distributed/Reshape_1:0) to a numpy array.


10.May 2020 02:16:37 correct LSTM model creation and compilation

10.May 2020 02:16:37 correct LSTM model creation and compilation

10.May 2020 02:16:37 correct LSTM model creation and compilation

10.May 2020 02:20:55 correct LSTM model creation and compilation

10.May 2020 02:20:55 correct LSTM model creation and compilation

10.May 2020 02:20:55 correct LSTM model creation and compilation

10.May 2020 02:20:56 model training error
in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:466 train_step  **
        loss = self.compiled_loss(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:204 __call__
        loss_value = loss_obj(y_t, y_p, sample_weight=sw)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\losses.py:143 __call__
        losses = self.call(y_true, y_pred)
    .\_2_train.py:105 call
        m_mape_denominator = np.add(1, np.abs(local_true))
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py:748 __array__
        raise NotImplementedError("Cannot convert a symbolic Tensor ({}) to a numpy"

    NotImplementedError: Cannot convert a symbolic Tensor (IteratorGetNext:1) to a numpy array.
Traceback (most recent call last):
  File ".\_2_train.py", line 378, in train
    forecaster.fit(x_train, y_train, batch_size=batch_size, epochs=epochs, workers=workers,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 66, in _method_wrapper
    return method(self, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 785, in fit
    tmp_logs = train_function(iterator)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 580, in __call__
    result = self._call(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 627, in _call
    self._initialize(args, kwds, add_initializers_to=initializers)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 505, in _initialize
    self._stateful_fn._get_concrete_function_internal_garbage_collected(  # pylint: disable=protected-access
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2446, in _get_concrete_function_internal_garbage_collected
    graph_function, _, _ = self._maybe_define_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2777, in _maybe_define_function
    graph_function = self._create_graph_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2657, in _create_graph_function
    func_graph_module.func_graph_from_py_func(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 981, in func_graph_from_py_func
    func_outputs = python_func(*func_args, **func_kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 441, in wrapped_fn
    return weak_wrapped_fn().__wrapped__(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 968, in wrapper
    raise e.ag_error_metadata.to_exception(e)
NotImplementedError: in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:466 train_step  **
        loss = self.compiled_loss(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:204 __call__
        loss_value = loss_obj(y_t, y_p, sample_weight=sw)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\losses.py:143 __call__
        losses = self.call(y_true, y_pred)
    .\_2_train.py:105 call
        m_mape_denominator = np.add(1, np.abs(local_true))
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py:748 __array__
        raise NotImplementedError("Cannot convert a symbolic Tensor ({}) to a numpy"

    NotImplementedError: Cannot convert a symbolic Tensor (IteratorGetNext:1) to a numpy array.


10.May 2020 02:28:44 correct LSTM model creation and compilation

10.May 2020 02:28:44 correct LSTM model creation and compilation

10.May 2020 02:28:44 correct LSTM model creation and compilation

10.May 2020 02:28:46 model training error
in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:474 train_step  **
        _minimize(self.distribute_strategy, tape, self.optimizer, loss,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:1740 _minimize
        gradients = optimizer._aggregate_gradients(zip(gradients,  # pylint: disable=protected-access
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\optimizer_v2\optimizer_v2.py:525 _aggregate_gradients
        filtered_grads_and_vars = _filter_grads(grads_and_vars)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\optimizer_v2\optimizer_v2.py:1202 _filter_grads
        raise ValueError("No gradients provided for any variable: %s." %

    ValueError: No gradients provided for any variable: ['sequential/bidirectional/forward_rnn/peephole_lstm_cell/kernel:0', 'sequential/bidirectional/forward_rnn/peephole_lstm_cell/recurrent_kernel:0', 'sequential/bidirectional/forward_rnn/peephole_lstm_cell/bias:0', 'sequential/bidirectional/forward_rnn/peephole_lstm_cell/input_gate_peephole_weights:0', 'sequential/bidirectional/forward_rnn/peephole_lstm_cell/forget_gate_peephole_weights:0', 'sequential/bidirectional/forward_rnn/peephole_lstm_cell/output_gate_peephole_weights:0', 'sequential/bidirectional/backward_rnn/peephole_lstm_cell/kernel:0', 'sequential/bidirectional/backward_rnn/peephole_lstm_cell/recurrent_kernel:0', 'sequential/bidirectional/backward_rnn/peephole_lstm_cell/bias:0', 'sequential/bidirectional/backward_rnn/peephole_lstm_cell/input_gate_peephole_weights:0', 'sequential/bidirectional/backward_rnn/peephole_lstm_cell/forget_gate_peephole_weights:0', 'sequential/bidirectional/backward_rnn/peephole_lstm_cell/output_gate_peephole_weights:0', 'sequential/bidirectional_1/forward_rnn_1/peephole_lstm_cell_1/kernel:0', 'sequential/bidirectional_1/forward_rnn_1/peephole_lstm_cell_1/recurrent_kernel:0', 'sequential/bidirectional_1/forward_rnn_1/peephole_lstm_cell_1/bias:0', 'sequential/bidirectional_1/forward_rnn_1/peephole_lstm_cell_1/input_gate_peephole_weights:0', 'sequential/bidirectional_1/forward_rnn_1/peephole_lstm_cell_1/forget_gate_peephole_weights:0', 'sequential/bidirectional_1/forward_rnn_1/peephole_lstm_cell_1/output_gate_peephole_weights:0', 'sequential/bidirectional_1/backward_rnn_1/peephole_lstm_cell_1/kernel:0', 'sequential/bidirectional_1/backward_rnn_1/peephole_lstm_cell_1/recurrent_kernel:0', 'sequential/bidirectional_1/backward_rnn_1/peephole_lstm_cell_1/bias:0', 'sequential/bidirectional_1/backward_rnn_1/peephole_lstm_cell_1/input_gate_peephole_weights:0', 'sequential/bidirectional_1/backward_rnn_1/peephole_lstm_cell_1/forget_gate_peephole_weights:0', 'sequential/bidirectional_1/backward_rnn_1/peephole_lstm_cell_1/output_gate_peephole_weights:0', 'sequential/bidirectional_2/forward_rnn_2/peephole_lstm_cell_2/kernel:0', 'sequential/bidirectional_2/forward_rnn_2/peephole_lstm_cell_2/recurrent_kernel:0', 'sequential/bidirectional_2/forward_rnn_2/peephole_lstm_cell_2/bias:0', 'sequential/bidirectional_2/forward_rnn_2/peephole_lstm_cell_2/input_gate_peephole_weights:0', 'sequential/bidirectional_2/forward_rnn_2/peephole_lstm_cell_2/forget_gate_peephole_weights:0', 'sequential/bidirectional_2/forward_rnn_2/peephole_lstm_cell_2/output_gate_peephole_weights:0', 'sequential/bidirectional_2/backward_rnn_2/peephole_lstm_cell_2/kernel:0', 'sequential/bidirectional_2/backward_rnn_2/peephole_lstm_cell_2/recurrent_kernel:0', 'sequential/bidirectional_2/backward_rnn_2/peephole_lstm_cell_2/bias:0', 'sequential/bidirectional_2/backward_rnn_2/peephole_lstm_cell_2/input_gate_peephole_weights:0', 'sequential/bidirectional_2/backward_rnn_2/peephole_lstm_cell_2/forget_gate_peephole_weights:0', 'sequential/bidirectional_2/backward_rnn_2/peephole_lstm_cell_2/output_gate_peephole_weights:0', 'sequential/bidirectional_3/forward_rnn_3/peephole_lstm_cell_3/kernel:0', 'sequential/bidirectional_3/forward_rnn_3/peephole_lstm_cell_3/recurrent_kernel:0', 'sequential/bidirectional_3/forward_rnn_3/peephole_lstm_cell_3/bias:0', 'sequential/bidirectional_3/forward_rnn_3/peephole_lstm_cell_3/input_gate_peephole_weights:0', 'sequential/bidirectional_3/forward_rnn_3/peephole_lstm_cell_3/forget_gate_peephole_weights:0', 'sequential/bidirectional_3/forward_rnn_3/peephole_lstm_cell_3/output_gate_peephole_weights:0', 'sequential/bidirectional_3/backward_rnn_3/peephole_lstm_cell_3/kernel:0', 'sequential/bidirectional_3/backward_rnn_3/peephole_lstm_cell_3/recurrent_kernel:0', 'sequential/bidirectional_3/backward_rnn_3/peephole_lstm_cell_3/bias:0', 'sequential/bidirectional_3/backward_rnn_3/peephole_lstm_cell_3/input_gate_peephole_weights:0', 'sequential/bidirectional_3/backward_rnn_3/peephole_lstm_cell_3/forget_gate_peephole_weights:0', 'sequential/bidirectional_3/backward_rnn_3/peephole_lstm_cell_3/output_gate_peephole_weights:0', 'sequential/time_distributed/kernel:0', 'sequential/time_distributed/bias:0'].
Traceback (most recent call last):
  File ".\_2_train.py", line 385, in train
    forecaster.fit(x_train, y_train, batch_size=batch_size, epochs=epochs, workers=workers,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 66, in _method_wrapper
    return method(self, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 785, in fit
    tmp_logs = train_function(iterator)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 580, in __call__
    result = self._call(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 627, in _call
    self._initialize(args, kwds, add_initializers_to=initializers)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 505, in _initialize
    self._stateful_fn._get_concrete_function_internal_garbage_collected(  # pylint: disable=protected-access
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2446, in _get_concrete_function_internal_garbage_collected
    graph_function, _, _ = self._maybe_define_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2777, in _maybe_define_function
    graph_function = self._create_graph_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2657, in _create_graph_function
    func_graph_module.func_graph_from_py_func(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 981, in func_graph_from_py_func
    func_outputs = python_func(*func_args, **func_kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 441, in wrapped_fn
    return weak_wrapped_fn().__wrapped__(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 968, in wrapper
    raise e.ag_error_metadata.to_exception(e)
ValueError: in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:474 train_step  **
        _minimize(self.distribute_strategy, tape, self.optimizer, loss,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:1740 _minimize
        gradients = optimizer._aggregate_gradients(zip(gradients,  # pylint: disable=protected-access
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\optimizer_v2\optimizer_v2.py:525 _aggregate_gradients
        filtered_grads_and_vars = _filter_grads(grads_and_vars)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\optimizer_v2\optimizer_v2.py:1202 _filter_grads
        raise ValueError("No gradients provided for any variable: %s." %

    ValueError: No gradients provided for any variable: ['sequential/bidirectional/forward_rnn/peephole_lstm_cell/kernel:0', 'sequential/bidirectional/forward_rnn/peephole_lstm_cell/recurrent_kernel:0', 'sequential/bidirectional/forward_rnn/peephole_lstm_cell/bias:0', 'sequential/bidirectional/forward_rnn/peephole_lstm_cell/input_gate_peephole_weights:0', 'sequential/bidirectional/forward_rnn/peephole_lstm_cell/forget_gate_peephole_weights:0', 'sequential/bidirectional/forward_rnn/peephole_lstm_cell/output_gate_peephole_weights:0', 'sequential/bidirectional/backward_rnn/peephole_lstm_cell/kernel:0', 'sequential/bidirectional/backward_rnn/peephole_lstm_cell/recurrent_kernel:0', 'sequential/bidirectional/backward_rnn/peephole_lstm_cell/bias:0', 'sequential/bidirectional/backward_rnn/peephole_lstm_cell/input_gate_peephole_weights:0', 'sequential/bidirectional/backward_rnn/peephole_lstm_cell/forget_gate_peephole_weights:0', 'sequential/bidirectional/backward_rnn/peephole_lstm_cell/output_gate_peephole_weights:0', 'sequential/bidirectional_1/forward_rnn_1/peephole_lstm_cell_1/kernel:0', 'sequential/bidirectional_1/forward_rnn_1/peephole_lstm_cell_1/recurrent_kernel:0', 'sequential/bidirectional_1/forward_rnn_1/peephole_lstm_cell_1/bias:0', 'sequential/bidirectional_1/forward_rnn_1/peephole_lstm_cell_1/input_gate_peephole_weights:0', 'sequential/bidirectional_1/forward_rnn_1/peephole_lstm_cell_1/forget_gate_peephole_weights:0', 'sequential/bidirectional_1/forward_rnn_1/peephole_lstm_cell_1/output_gate_peephole_weights:0', 'sequential/bidirectional_1/backward_rnn_1/peephole_lstm_cell_1/kernel:0', 'sequential/bidirectional_1/backward_rnn_1/peephole_lstm_cell_1/recurrent_kernel:0', 'sequential/bidirectional_1/backward_rnn_1/peephole_lstm_cell_1/bias:0', 'sequential/bidirectional_1/backward_rnn_1/peephole_lstm_cell_1/input_gate_peephole_weights:0', 'sequential/bidirectional_1/backward_rnn_1/peephole_lstm_cell_1/forget_gate_peephole_weights:0', 'sequential/bidirectional_1/backward_rnn_1/peephole_lstm_cell_1/output_gate_peephole_weights:0', 'sequential/bidirectional_2/forward_rnn_2/peephole_lstm_cell_2/kernel:0', 'sequential/bidirectional_2/forward_rnn_2/peephole_lstm_cell_2/recurrent_kernel:0', 'sequential/bidirectional_2/forward_rnn_2/peephole_lstm_cell_2/bias:0', 'sequential/bidirectional_2/forward_rnn_2/peephole_lstm_cell_2/input_gate_peephole_weights:0', 'sequential/bidirectional_2/forward_rnn_2/peephole_lstm_cell_2/forget_gate_peephole_weights:0', 'sequential/bidirectional_2/forward_rnn_2/peephole_lstm_cell_2/output_gate_peephole_weights:0', 'sequential/bidirectional_2/backward_rnn_2/peephole_lstm_cell_2/kernel:0', 'sequential/bidirectional_2/backward_rnn_2/peephole_lstm_cell_2/recurrent_kernel:0', 'sequential/bidirectional_2/backward_rnn_2/peephole_lstm_cell_2/bias:0', 'sequential/bidirectional_2/backward_rnn_2/peephole_lstm_cell_2/input_gate_peephole_weights:0', 'sequential/bidirectional_2/backward_rnn_2/peephole_lstm_cell_2/forget_gate_peephole_weights:0', 'sequential/bidirectional_2/backward_rnn_2/peephole_lstm_cell_2/output_gate_peephole_weights:0', 'sequential/bidirectional_3/forward_rnn_3/peephole_lstm_cell_3/kernel:0', 'sequential/bidirectional_3/forward_rnn_3/peephole_lstm_cell_3/recurrent_kernel:0', 'sequential/bidirectional_3/forward_rnn_3/peephole_lstm_cell_3/bias:0', 'sequential/bidirectional_3/forward_rnn_3/peephole_lstm_cell_3/input_gate_peephole_weights:0', 'sequential/bidirectional_3/forward_rnn_3/peephole_lstm_cell_3/forget_gate_peephole_weights:0', 'sequential/bidirectional_3/forward_rnn_3/peephole_lstm_cell_3/output_gate_peephole_weights:0', 'sequential/bidirectional_3/backward_rnn_3/peephole_lstm_cell_3/kernel:0', 'sequential/bidirectional_3/backward_rnn_3/peephole_lstm_cell_3/recurrent_kernel:0', 'sequential/bidirectional_3/backward_rnn_3/peephole_lstm_cell_3/bias:0', 'sequential/bidirectional_3/backward_rnn_3/peephole_lstm_cell_3/input_gate_peephole_weights:0', 'sequential/bidirectional_3/backward_rnn_3/peephole_lstm_cell_3/forget_gate_peephole_weights:0', 'sequential/bidirectional_3/backward_rnn_3/peephole_lstm_cell_3/output_gate_peephole_weights:0', 'sequential/time_distributed/kernel:0', 'sequential/time_distributed/bias:0'].


10.May 2020 02:36:25 model training error
in user code:


    TypeError: tf__modified_mape() missing 2 required positional arguments: 'local_true' and 'local_pred'
Traceback (most recent call last):
  File ".\_2_train.py", line 171, in train
    losses_list.append(modified_mape())
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 580, in __call__
    result = self._call(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 627, in _call
    self._initialize(args, kwds, add_initializers_to=initializers)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 505, in _initialize
    self._stateful_fn._get_concrete_function_internal_garbage_collected(  # pylint: disable=protected-access
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2446, in _get_concrete_function_internal_garbage_collected
    graph_function, _, _ = self._maybe_define_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2777, in _maybe_define_function
    graph_function = self._create_graph_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2657, in _create_graph_function
    func_graph_module.func_graph_from_py_func(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 981, in func_graph_from_py_func
    func_outputs = python_func(*func_args, **func_kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 441, in wrapped_fn
    return weak_wrapped_fn().__wrapped__(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 968, in wrapper
    raise e.ag_error_metadata.to_exception(e)
TypeError: in user code:


    TypeError: tf__modified_mape() missing 2 required positional arguments: 'local_true' and 'local_pred'


10.May 2020 02:42:20 correct LSTM model creation and compilation

10.May 2020 02:42:20 correct LSTM model creation and compilation

10.May 2020 02:42:20 correct LSTM model creation and compilation

10.May 2020 02:42:22 model training error
in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:466 train_step  **
        loss = self.compiled_loss(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:187 __call__
        self._build(y_pred)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:140 _build
        self._losses = nest.map_structure(self._get_loss_object, self._losses)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:617 map_structure
        structure[0], [func(*x) for x in entries],
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:617 <listcomp>
        structure[0], [func(*x) for x in entries],
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:259 _get_loss_object
        loss = losses_mod.get(loss)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\losses.py:1857 get
        return deserialize(identifier)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\losses.py:1831 deserialize
        return deserialize_keras_object(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\utils\generic_utils.py:392 deserialize_keras_object
        raise ValueError('Unknown ' + printable_module_name + ':' + object_name)

    ValueError: Unknown loss function:modified_mape()
Traceback (most recent call last):
  File ".\_2_train.py", line 385, in train
    forecaster.fit(x_train, y_train, batch_size=batch_size, epochs=epochs, workers=workers,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 66, in _method_wrapper
    return method(self, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 785, in fit
    tmp_logs = train_function(iterator)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 580, in __call__
    result = self._call(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 627, in _call
    self._initialize(args, kwds, add_initializers_to=initializers)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 505, in _initialize
    self._stateful_fn._get_concrete_function_internal_garbage_collected(  # pylint: disable=protected-access
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2446, in _get_concrete_function_internal_garbage_collected
    graph_function, _, _ = self._maybe_define_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2777, in _maybe_define_function
    graph_function = self._create_graph_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2657, in _create_graph_function
    func_graph_module.func_graph_from_py_func(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 981, in func_graph_from_py_func
    func_outputs = python_func(*func_args, **func_kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 441, in wrapped_fn
    return weak_wrapped_fn().__wrapped__(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 968, in wrapper
    raise e.ag_error_metadata.to_exception(e)
ValueError: in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:466 train_step  **
        loss = self.compiled_loss(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:187 __call__
        self._build(y_pred)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:140 _build
        self._losses = nest.map_structure(self._get_loss_object, self._losses)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:617 map_structure
        structure[0], [func(*x) for x in entries],
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:617 <listcomp>
        structure[0], [func(*x) for x in entries],
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:259 _get_loss_object
        loss = losses_mod.get(loss)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\losses.py:1857 get
        return deserialize(identifier)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\losses.py:1831 deserialize
        return deserialize_keras_object(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\utils\generic_utils.py:392 deserialize_keras_object
        raise ValueError('Unknown ' + printable_module_name + ':' + object_name)

    ValueError: Unknown loss function:modified_mape()


10.May 2020 02:46:57 correct LSTM model creation and compilation

10.May 2020 02:46:57 correct LSTM model creation and compilation

10.May 2020 02:46:57 correct LSTM model creation and compilation

10.May 2020 02:46:59 model training error
in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:474 train_step  **
        _minimize(self.distribute_strategy, tape, self.optimizer, loss,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:1740 _minimize
        gradients = optimizer._aggregate_gradients(zip(gradients,  # pylint: disable=protected-access
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\optimizer_v2\optimizer_v2.py:525 _aggregate_gradients
        filtered_grads_and_vars = _filter_grads(grads_and_vars)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\optimizer_v2\optimizer_v2.py:1202 _filter_grads
        raise ValueError("No gradients provided for any variable: %s." %

    ValueError: No gradients provided for any variable: ['sequential/bidirectional/forward_rnn/peephole_lstm_cell/kernel:0', 'sequential/bidirectional/forward_rnn/peephole_lstm_cell/recurrent_kernel:0', 'sequential/bidirectional/forward_rnn/peephole_lstm_cell/bias:0', 'sequential/bidirectional/forward_rnn/peephole_lstm_cell/input_gate_peephole_weights:0', 'sequential/bidirectional/forward_rnn/peephole_lstm_cell/forget_gate_peephole_weights:0', 'sequential/bidirectional/forward_rnn/peephole_lstm_cell/output_gate_peephole_weights:0', 'sequential/bidirectional/backward_rnn/peephole_lstm_cell/kernel:0', 'sequential/bidirectional/backward_rnn/peephole_lstm_cell/recurrent_kernel:0', 'sequential/bidirectional/backward_rnn/peephole_lstm_cell/bias:0', 'sequential/bidirectional/backward_rnn/peephole_lstm_cell/input_gate_peephole_weights:0', 'sequential/bidirectional/backward_rnn/peephole_lstm_cell/forget_gate_peephole_weights:0', 'sequential/bidirectional/backward_rnn/peephole_lstm_cell/output_gate_peephole_weights:0', 'sequential/bidirectional_1/forward_rnn_1/peephole_lstm_cell_1/kernel:0', 'sequential/bidirectional_1/forward_rnn_1/peephole_lstm_cell_1/recurrent_kernel:0', 'sequential/bidirectional_1/forward_rnn_1/peephole_lstm_cell_1/bias:0', 'sequential/bidirectional_1/forward_rnn_1/peephole_lstm_cell_1/input_gate_peephole_weights:0', 'sequential/bidirectional_1/forward_rnn_1/peephole_lstm_cell_1/forget_gate_peephole_weights:0', 'sequential/bidirectional_1/forward_rnn_1/peephole_lstm_cell_1/output_gate_peephole_weights:0', 'sequential/bidirectional_1/backward_rnn_1/peephole_lstm_cell_1/kernel:0', 'sequential/bidirectional_1/backward_rnn_1/peephole_lstm_cell_1/recurrent_kernel:0', 'sequential/bidirectional_1/backward_rnn_1/peephole_lstm_cell_1/bias:0', 'sequential/bidirectional_1/backward_rnn_1/peephole_lstm_cell_1/input_gate_peephole_weights:0', 'sequential/bidirectional_1/backward_rnn_1/peephole_lstm_cell_1/forget_gate_peephole_weights:0', 'sequential/bidirectional_1/backward_rnn_1/peephole_lstm_cell_1/output_gate_peephole_weights:0', 'sequential/bidirectional_2/forward_rnn_2/peephole_lstm_cell_2/kernel:0', 'sequential/bidirectional_2/forward_rnn_2/peephole_lstm_cell_2/recurrent_kernel:0', 'sequential/bidirectional_2/forward_rnn_2/peephole_lstm_cell_2/bias:0', 'sequential/bidirectional_2/forward_rnn_2/peephole_lstm_cell_2/input_gate_peephole_weights:0', 'sequential/bidirectional_2/forward_rnn_2/peephole_lstm_cell_2/forget_gate_peephole_weights:0', 'sequential/bidirectional_2/forward_rnn_2/peephole_lstm_cell_2/output_gate_peephole_weights:0', 'sequential/bidirectional_2/backward_rnn_2/peephole_lstm_cell_2/kernel:0', 'sequential/bidirectional_2/backward_rnn_2/peephole_lstm_cell_2/recurrent_kernel:0', 'sequential/bidirectional_2/backward_rnn_2/peephole_lstm_cell_2/bias:0', 'sequential/bidirectional_2/backward_rnn_2/peephole_lstm_cell_2/input_gate_peephole_weights:0', 'sequential/bidirectional_2/backward_rnn_2/peephole_lstm_cell_2/forget_gate_peephole_weights:0', 'sequential/bidirectional_2/backward_rnn_2/peephole_lstm_cell_2/output_gate_peephole_weights:0', 'sequential/bidirectional_3/forward_rnn_3/peephole_lstm_cell_3/kernel:0', 'sequential/bidirectional_3/forward_rnn_3/peephole_lstm_cell_3/recurrent_kernel:0', 'sequential/bidirectional_3/forward_rnn_3/peephole_lstm_cell_3/bias:0', 'sequential/bidirectional_3/forward_rnn_3/peephole_lstm_cell_3/input_gate_peephole_weights:0', 'sequential/bidirectional_3/forward_rnn_3/peephole_lstm_cell_3/forget_gate_peephole_weights:0', 'sequential/bidirectional_3/forward_rnn_3/peephole_lstm_cell_3/output_gate_peephole_weights:0', 'sequential/bidirectional_3/backward_rnn_3/peephole_lstm_cell_3/kernel:0', 'sequential/bidirectional_3/backward_rnn_3/peephole_lstm_cell_3/recurrent_kernel:0', 'sequential/bidirectional_3/backward_rnn_3/peephole_lstm_cell_3/bias:0', 'sequential/bidirectional_3/backward_rnn_3/peephole_lstm_cell_3/input_gate_peephole_weights:0', 'sequential/bidirectional_3/backward_rnn_3/peephole_lstm_cell_3/forget_gate_peephole_weights:0', 'sequential/bidirectional_3/backward_rnn_3/peephole_lstm_cell_3/output_gate_peephole_weights:0', 'sequential/time_distributed/kernel:0', 'sequential/time_distributed/bias:0'].
Traceback (most recent call last):
  File ".\_2_train.py", line 385, in train
    forecaster.fit(x_train, y_train, batch_size=batch_size, epochs=epochs, workers=workers,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 66, in _method_wrapper
    return method(self, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 785, in fit
    tmp_logs = train_function(iterator)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 580, in __call__
    result = self._call(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 627, in _call
    self._initialize(args, kwds, add_initializers_to=initializers)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 505, in _initialize
    self._stateful_fn._get_concrete_function_internal_garbage_collected(  # pylint: disable=protected-access
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2446, in _get_concrete_function_internal_garbage_collected
    graph_function, _, _ = self._maybe_define_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2777, in _maybe_define_function
    graph_function = self._create_graph_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2657, in _create_graph_function
    func_graph_module.func_graph_from_py_func(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 981, in func_graph_from_py_func
    func_outputs = python_func(*func_args, **func_kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 441, in wrapped_fn
    return weak_wrapped_fn().__wrapped__(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 968, in wrapper
    raise e.ag_error_metadata.to_exception(e)
ValueError: in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:474 train_step  **
        _minimize(self.distribute_strategy, tape, self.optimizer, loss,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:1740 _minimize
        gradients = optimizer._aggregate_gradients(zip(gradients,  # pylint: disable=protected-access
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\optimizer_v2\optimizer_v2.py:525 _aggregate_gradients
        filtered_grads_and_vars = _filter_grads(grads_and_vars)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\optimizer_v2\optimizer_v2.py:1202 _filter_grads
        raise ValueError("No gradients provided for any variable: %s." %

    ValueError: No gradients provided for any variable: ['sequential/bidirectional/forward_rnn/peephole_lstm_cell/kernel:0', 'sequential/bidirectional/forward_rnn/peephole_lstm_cell/recurrent_kernel:0', 'sequential/bidirectional/forward_rnn/peephole_lstm_cell/bias:0', 'sequential/bidirectional/forward_rnn/peephole_lstm_cell/input_gate_peephole_weights:0', 'sequential/bidirectional/forward_rnn/peephole_lstm_cell/forget_gate_peephole_weights:0', 'sequential/bidirectional/forward_rnn/peephole_lstm_cell/output_gate_peephole_weights:0', 'sequential/bidirectional/backward_rnn/peephole_lstm_cell/kernel:0', 'sequential/bidirectional/backward_rnn/peephole_lstm_cell/recurrent_kernel:0', 'sequential/bidirectional/backward_rnn/peephole_lstm_cell/bias:0', 'sequential/bidirectional/backward_rnn/peephole_lstm_cell/input_gate_peephole_weights:0', 'sequential/bidirectional/backward_rnn/peephole_lstm_cell/forget_gate_peephole_weights:0', 'sequential/bidirectional/backward_rnn/peephole_lstm_cell/output_gate_peephole_weights:0', 'sequential/bidirectional_1/forward_rnn_1/peephole_lstm_cell_1/kernel:0', 'sequential/bidirectional_1/forward_rnn_1/peephole_lstm_cell_1/recurrent_kernel:0', 'sequential/bidirectional_1/forward_rnn_1/peephole_lstm_cell_1/bias:0', 'sequential/bidirectional_1/forward_rnn_1/peephole_lstm_cell_1/input_gate_peephole_weights:0', 'sequential/bidirectional_1/forward_rnn_1/peephole_lstm_cell_1/forget_gate_peephole_weights:0', 'sequential/bidirectional_1/forward_rnn_1/peephole_lstm_cell_1/output_gate_peephole_weights:0', 'sequential/bidirectional_1/backward_rnn_1/peephole_lstm_cell_1/kernel:0', 'sequential/bidirectional_1/backward_rnn_1/peephole_lstm_cell_1/recurrent_kernel:0', 'sequential/bidirectional_1/backward_rnn_1/peephole_lstm_cell_1/bias:0', 'sequential/bidirectional_1/backward_rnn_1/peephole_lstm_cell_1/input_gate_peephole_weights:0', 'sequential/bidirectional_1/backward_rnn_1/peephole_lstm_cell_1/forget_gate_peephole_weights:0', 'sequential/bidirectional_1/backward_rnn_1/peephole_lstm_cell_1/output_gate_peephole_weights:0', 'sequential/bidirectional_2/forward_rnn_2/peephole_lstm_cell_2/kernel:0', 'sequential/bidirectional_2/forward_rnn_2/peephole_lstm_cell_2/recurrent_kernel:0', 'sequential/bidirectional_2/forward_rnn_2/peephole_lstm_cell_2/bias:0', 'sequential/bidirectional_2/forward_rnn_2/peephole_lstm_cell_2/input_gate_peephole_weights:0', 'sequential/bidirectional_2/forward_rnn_2/peephole_lstm_cell_2/forget_gate_peephole_weights:0', 'sequential/bidirectional_2/forward_rnn_2/peephole_lstm_cell_2/output_gate_peephole_weights:0', 'sequential/bidirectional_2/backward_rnn_2/peephole_lstm_cell_2/kernel:0', 'sequential/bidirectional_2/backward_rnn_2/peephole_lstm_cell_2/recurrent_kernel:0', 'sequential/bidirectional_2/backward_rnn_2/peephole_lstm_cell_2/bias:0', 'sequential/bidirectional_2/backward_rnn_2/peephole_lstm_cell_2/input_gate_peephole_weights:0', 'sequential/bidirectional_2/backward_rnn_2/peephole_lstm_cell_2/forget_gate_peephole_weights:0', 'sequential/bidirectional_2/backward_rnn_2/peephole_lstm_cell_2/output_gate_peephole_weights:0', 'sequential/bidirectional_3/forward_rnn_3/peephole_lstm_cell_3/kernel:0', 'sequential/bidirectional_3/forward_rnn_3/peephole_lstm_cell_3/recurrent_kernel:0', 'sequential/bidirectional_3/forward_rnn_3/peephole_lstm_cell_3/bias:0', 'sequential/bidirectional_3/forward_rnn_3/peephole_lstm_cell_3/input_gate_peephole_weights:0', 'sequential/bidirectional_3/forward_rnn_3/peephole_lstm_cell_3/forget_gate_peephole_weights:0', 'sequential/bidirectional_3/forward_rnn_3/peephole_lstm_cell_3/output_gate_peephole_weights:0', 'sequential/bidirectional_3/backward_rnn_3/peephole_lstm_cell_3/kernel:0', 'sequential/bidirectional_3/backward_rnn_3/peephole_lstm_cell_3/recurrent_kernel:0', 'sequential/bidirectional_3/backward_rnn_3/peephole_lstm_cell_3/bias:0', 'sequential/bidirectional_3/backward_rnn_3/peephole_lstm_cell_3/input_gate_peephole_weights:0', 'sequential/bidirectional_3/backward_rnn_3/peephole_lstm_cell_3/forget_gate_peephole_weights:0', 'sequential/bidirectional_3/backward_rnn_3/peephole_lstm_cell_3/output_gate_peephole_weights:0', 'sequential/time_distributed/kernel:0', 'sequential/time_distributed/bias:0'].


10.May 2020 02:48:23 correct LSTM model creation and compilation

10.May 2020 02:48:23 correct LSTM model creation and compilation

10.May 2020 02:48:23 correct LSTM model creation and compilation

10.May 2020 02:48:24 model training error
in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:466 train_step  **
        loss = self.compiled_loss(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:204 __call__
        loss_value = loss_obj(y_t, y_p, sample_weight=sw)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\losses.py:143 __call__
        losses = self.call(y_true, y_pred)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\losses.py:246 call
        return self.fn(y_true, y_pred, **self._fn_kwargs)
    .\_2_train.py:111 m_mape
        m_mape_denominator = np.add(1, np.abs(local_true))
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py:748 __array__
        raise NotImplementedError("Cannot convert a symbolic Tensor ({}) to a numpy"

    NotImplementedError: Cannot convert a symbolic Tensor (IteratorGetNext:1) to a numpy array.
Traceback (most recent call last):
  File ".\_2_train.py", line 385, in train
    forecaster.fit(x_train, y_train, batch_size=batch_size, epochs=epochs, workers=workers,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 66, in _method_wrapper
    return method(self, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 785, in fit
    tmp_logs = train_function(iterator)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 580, in __call__
    result = self._call(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 627, in _call
    self._initialize(args, kwds, add_initializers_to=initializers)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 505, in _initialize
    self._stateful_fn._get_concrete_function_internal_garbage_collected(  # pylint: disable=protected-access
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2446, in _get_concrete_function_internal_garbage_collected
    graph_function, _, _ = self._maybe_define_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2777, in _maybe_define_function
    graph_function = self._create_graph_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2657, in _create_graph_function
    func_graph_module.func_graph_from_py_func(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 981, in func_graph_from_py_func
    func_outputs = python_func(*func_args, **func_kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 441, in wrapped_fn
    return weak_wrapped_fn().__wrapped__(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 968, in wrapper
    raise e.ag_error_metadata.to_exception(e)
NotImplementedError: in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:466 train_step  **
        loss = self.compiled_loss(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:204 __call__
        loss_value = loss_obj(y_t, y_p, sample_weight=sw)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\losses.py:143 __call__
        losses = self.call(y_true, y_pred)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\losses.py:246 call
        return self.fn(y_true, y_pred, **self._fn_kwargs)
    .\_2_train.py:111 m_mape
        m_mape_denominator = np.add(1, np.abs(local_true))
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py:748 __array__
        raise NotImplementedError("Cannot convert a symbolic Tensor ({}) to a numpy"

    NotImplementedError: Cannot convert a symbolic Tensor (IteratorGetNext:1) to a numpy array.


10.May 2020 02:50:04 correct LSTM model creation and compilation

10.May 2020 02:50:04 correct LSTM model creation and compilation

10.May 2020 02:50:04 correct LSTM model creation and compilation

10.May 2020 02:50:05 model training error
in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:474 train_step  **
        _minimize(self.distribute_strategy, tape, self.optimizer, loss,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:1740 _minimize
        gradients = optimizer._aggregate_gradients(zip(gradients,  # pylint: disable=protected-access
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\optimizer_v2\optimizer_v2.py:525 _aggregate_gradients
        filtered_grads_and_vars = _filter_grads(grads_and_vars)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\optimizer_v2\optimizer_v2.py:1202 _filter_grads
        raise ValueError("No gradients provided for any variable: %s." %

    ValueError: No gradients provided for any variable: ['sequential/bidirectional/forward_rnn/peephole_lstm_cell/kernel:0', 'sequential/bidirectional/forward_rnn/peephole_lstm_cell/recurrent_kernel:0', 'sequential/bidirectional/forward_rnn/peephole_lstm_cell/bias:0', 'sequential/bidirectional/forward_rnn/peephole_lstm_cell/input_gate_peephole_weights:0', 'sequential/bidirectional/forward_rnn/peephole_lstm_cell/forget_gate_peephole_weights:0', 'sequential/bidirectional/forward_rnn/peephole_lstm_cell/output_gate_peephole_weights:0', 'sequential/bidirectional/backward_rnn/peephole_lstm_cell/kernel:0', 'sequential/bidirectional/backward_rnn/peephole_lstm_cell/recurrent_kernel:0', 'sequential/bidirectional/backward_rnn/peephole_lstm_cell/bias:0', 'sequential/bidirectional/backward_rnn/peephole_lstm_cell/input_gate_peephole_weights:0', 'sequential/bidirectional/backward_rnn/peephole_lstm_cell/forget_gate_peephole_weights:0', 'sequential/bidirectional/backward_rnn/peephole_lstm_cell/output_gate_peephole_weights:0', 'sequential/bidirectional_1/forward_rnn_1/peephole_lstm_cell_1/kernel:0', 'sequential/bidirectional_1/forward_rnn_1/peephole_lstm_cell_1/recurrent_kernel:0', 'sequential/bidirectional_1/forward_rnn_1/peephole_lstm_cell_1/bias:0', 'sequential/bidirectional_1/forward_rnn_1/peephole_lstm_cell_1/input_gate_peephole_weights:0', 'sequential/bidirectional_1/forward_rnn_1/peephole_lstm_cell_1/forget_gate_peephole_weights:0', 'sequential/bidirectional_1/forward_rnn_1/peephole_lstm_cell_1/output_gate_peephole_weights:0', 'sequential/bidirectional_1/backward_rnn_1/peephole_lstm_cell_1/kernel:0', 'sequential/bidirectional_1/backward_rnn_1/peephole_lstm_cell_1/recurrent_kernel:0', 'sequential/bidirectional_1/backward_rnn_1/peephole_lstm_cell_1/bias:0', 'sequential/bidirectional_1/backward_rnn_1/peephole_lstm_cell_1/input_gate_peephole_weights:0', 'sequential/bidirectional_1/backward_rnn_1/peephole_lstm_cell_1/forget_gate_peephole_weights:0', 'sequential/bidirectional_1/backward_rnn_1/peephole_lstm_cell_1/output_gate_peephole_weights:0', 'sequential/bidirectional_2/forward_rnn_2/peephole_lstm_cell_2/kernel:0', 'sequential/bidirectional_2/forward_rnn_2/peephole_lstm_cell_2/recurrent_kernel:0', 'sequential/bidirectional_2/forward_rnn_2/peephole_lstm_cell_2/bias:0', 'sequential/bidirectional_2/forward_rnn_2/peephole_lstm_cell_2/input_gate_peephole_weights:0', 'sequential/bidirectional_2/forward_rnn_2/peephole_lstm_cell_2/forget_gate_peephole_weights:0', 'sequential/bidirectional_2/forward_rnn_2/peephole_lstm_cell_2/output_gate_peephole_weights:0', 'sequential/bidirectional_2/backward_rnn_2/peephole_lstm_cell_2/kernel:0', 'sequential/bidirectional_2/backward_rnn_2/peephole_lstm_cell_2/recurrent_kernel:0', 'sequential/bidirectional_2/backward_rnn_2/peephole_lstm_cell_2/bias:0', 'sequential/bidirectional_2/backward_rnn_2/peephole_lstm_cell_2/input_gate_peephole_weights:0', 'sequential/bidirectional_2/backward_rnn_2/peephole_lstm_cell_2/forget_gate_peephole_weights:0', 'sequential/bidirectional_2/backward_rnn_2/peephole_lstm_cell_2/output_gate_peephole_weights:0', 'sequential/bidirectional_3/forward_rnn_3/peephole_lstm_cell_3/kernel:0', 'sequential/bidirectional_3/forward_rnn_3/peephole_lstm_cell_3/recurrent_kernel:0', 'sequential/bidirectional_3/forward_rnn_3/peephole_lstm_cell_3/bias:0', 'sequential/bidirectional_3/forward_rnn_3/peephole_lstm_cell_3/input_gate_peephole_weights:0', 'sequential/bidirectional_3/forward_rnn_3/peephole_lstm_cell_3/forget_gate_peephole_weights:0', 'sequential/bidirectional_3/forward_rnn_3/peephole_lstm_cell_3/output_gate_peephole_weights:0', 'sequential/bidirectional_3/backward_rnn_3/peephole_lstm_cell_3/kernel:0', 'sequential/bidirectional_3/backward_rnn_3/peephole_lstm_cell_3/recurrent_kernel:0', 'sequential/bidirectional_3/backward_rnn_3/peephole_lstm_cell_3/bias:0', 'sequential/bidirectional_3/backward_rnn_3/peephole_lstm_cell_3/input_gate_peephole_weights:0', 'sequential/bidirectional_3/backward_rnn_3/peephole_lstm_cell_3/forget_gate_peephole_weights:0', 'sequential/bidirectional_3/backward_rnn_3/peephole_lstm_cell_3/output_gate_peephole_weights:0', 'sequential/time_distributed/kernel:0', 'sequential/time_distributed/bias:0'].
Traceback (most recent call last):
  File ".\_2_train.py", line 385, in train
    forecaster.fit(x_train, y_train, batch_size=batch_size, epochs=epochs, workers=workers,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 66, in _method_wrapper
    return method(self, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 785, in fit
    tmp_logs = train_function(iterator)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 580, in __call__
    result = self._call(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 627, in _call
    self._initialize(args, kwds, add_initializers_to=initializers)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 505, in _initialize
    self._stateful_fn._get_concrete_function_internal_garbage_collected(  # pylint: disable=protected-access
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2446, in _get_concrete_function_internal_garbage_collected
    graph_function, _, _ = self._maybe_define_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2777, in _maybe_define_function
    graph_function = self._create_graph_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2657, in _create_graph_function
    func_graph_module.func_graph_from_py_func(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 981, in func_graph_from_py_func
    func_outputs = python_func(*func_args, **func_kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 441, in wrapped_fn
    return weak_wrapped_fn().__wrapped__(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 968, in wrapper
    raise e.ag_error_metadata.to_exception(e)
ValueError: in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:474 train_step  **
        _minimize(self.distribute_strategy, tape, self.optimizer, loss,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:1740 _minimize
        gradients = optimizer._aggregate_gradients(zip(gradients,  # pylint: disable=protected-access
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\optimizer_v2\optimizer_v2.py:525 _aggregate_gradients
        filtered_grads_and_vars = _filter_grads(grads_and_vars)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\optimizer_v2\optimizer_v2.py:1202 _filter_grads
        raise ValueError("No gradients provided for any variable: %s." %

    ValueError: No gradients provided for any variable: ['sequential/bidirectional/forward_rnn/peephole_lstm_cell/kernel:0', 'sequential/bidirectional/forward_rnn/peephole_lstm_cell/recurrent_kernel:0', 'sequential/bidirectional/forward_rnn/peephole_lstm_cell/bias:0', 'sequential/bidirectional/forward_rnn/peephole_lstm_cell/input_gate_peephole_weights:0', 'sequential/bidirectional/forward_rnn/peephole_lstm_cell/forget_gate_peephole_weights:0', 'sequential/bidirectional/forward_rnn/peephole_lstm_cell/output_gate_peephole_weights:0', 'sequential/bidirectional/backward_rnn/peephole_lstm_cell/kernel:0', 'sequential/bidirectional/backward_rnn/peephole_lstm_cell/recurrent_kernel:0', 'sequential/bidirectional/backward_rnn/peephole_lstm_cell/bias:0', 'sequential/bidirectional/backward_rnn/peephole_lstm_cell/input_gate_peephole_weights:0', 'sequential/bidirectional/backward_rnn/peephole_lstm_cell/forget_gate_peephole_weights:0', 'sequential/bidirectional/backward_rnn/peephole_lstm_cell/output_gate_peephole_weights:0', 'sequential/bidirectional_1/forward_rnn_1/peephole_lstm_cell_1/kernel:0', 'sequential/bidirectional_1/forward_rnn_1/peephole_lstm_cell_1/recurrent_kernel:0', 'sequential/bidirectional_1/forward_rnn_1/peephole_lstm_cell_1/bias:0', 'sequential/bidirectional_1/forward_rnn_1/peephole_lstm_cell_1/input_gate_peephole_weights:0', 'sequential/bidirectional_1/forward_rnn_1/peephole_lstm_cell_1/forget_gate_peephole_weights:0', 'sequential/bidirectional_1/forward_rnn_1/peephole_lstm_cell_1/output_gate_peephole_weights:0', 'sequential/bidirectional_1/backward_rnn_1/peephole_lstm_cell_1/kernel:0', 'sequential/bidirectional_1/backward_rnn_1/peephole_lstm_cell_1/recurrent_kernel:0', 'sequential/bidirectional_1/backward_rnn_1/peephole_lstm_cell_1/bias:0', 'sequential/bidirectional_1/backward_rnn_1/peephole_lstm_cell_1/input_gate_peephole_weights:0', 'sequential/bidirectional_1/backward_rnn_1/peephole_lstm_cell_1/forget_gate_peephole_weights:0', 'sequential/bidirectional_1/backward_rnn_1/peephole_lstm_cell_1/output_gate_peephole_weights:0', 'sequential/bidirectional_2/forward_rnn_2/peephole_lstm_cell_2/kernel:0', 'sequential/bidirectional_2/forward_rnn_2/peephole_lstm_cell_2/recurrent_kernel:0', 'sequential/bidirectional_2/forward_rnn_2/peephole_lstm_cell_2/bias:0', 'sequential/bidirectional_2/forward_rnn_2/peephole_lstm_cell_2/input_gate_peephole_weights:0', 'sequential/bidirectional_2/forward_rnn_2/peephole_lstm_cell_2/forget_gate_peephole_weights:0', 'sequential/bidirectional_2/forward_rnn_2/peephole_lstm_cell_2/output_gate_peephole_weights:0', 'sequential/bidirectional_2/backward_rnn_2/peephole_lstm_cell_2/kernel:0', 'sequential/bidirectional_2/backward_rnn_2/peephole_lstm_cell_2/recurrent_kernel:0', 'sequential/bidirectional_2/backward_rnn_2/peephole_lstm_cell_2/bias:0', 'sequential/bidirectional_2/backward_rnn_2/peephole_lstm_cell_2/input_gate_peephole_weights:0', 'sequential/bidirectional_2/backward_rnn_2/peephole_lstm_cell_2/forget_gate_peephole_weights:0', 'sequential/bidirectional_2/backward_rnn_2/peephole_lstm_cell_2/output_gate_peephole_weights:0', 'sequential/bidirectional_3/forward_rnn_3/peephole_lstm_cell_3/kernel:0', 'sequential/bidirectional_3/forward_rnn_3/peephole_lstm_cell_3/recurrent_kernel:0', 'sequential/bidirectional_3/forward_rnn_3/peephole_lstm_cell_3/bias:0', 'sequential/bidirectional_3/forward_rnn_3/peephole_lstm_cell_3/input_gate_peephole_weights:0', 'sequential/bidirectional_3/forward_rnn_3/peephole_lstm_cell_3/forget_gate_peephole_weights:0', 'sequential/bidirectional_3/forward_rnn_3/peephole_lstm_cell_3/output_gate_peephole_weights:0', 'sequential/bidirectional_3/backward_rnn_3/peephole_lstm_cell_3/kernel:0', 'sequential/bidirectional_3/backward_rnn_3/peephole_lstm_cell_3/recurrent_kernel:0', 'sequential/bidirectional_3/backward_rnn_3/peephole_lstm_cell_3/bias:0', 'sequential/bidirectional_3/backward_rnn_3/peephole_lstm_cell_3/input_gate_peephole_weights:0', 'sequential/bidirectional_3/backward_rnn_3/peephole_lstm_cell_3/forget_gate_peephole_weights:0', 'sequential/bidirectional_3/backward_rnn_3/peephole_lstm_cell_3/output_gate_peephole_weights:0', 'sequential/time_distributed/kernel:0', 'sequential/time_distributed/bias:0'].


10.May 2020 02:55:13 correct LSTM model creation and compilation

10.May 2020 02:55:13 correct LSTM model creation and compilation

10.May 2020 02:55:13 correct LSTM model creation and compilation

10.May 2020 02:55:15 model training error
in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:466 train_step  **
        loss = self.compiled_loss(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:187 __call__
        self._build(y_pred)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:140 _build
        self._losses = nest.map_structure(self._get_loss_object, self._losses)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:617 map_structure
        structure[0], [func(*x) for x in entries],
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:617 <listcomp>
        structure[0], [func(*x) for x in entries],
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:259 _get_loss_object
        loss = losses_mod.get(loss)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\losses.py:1857 get
        return deserialize(identifier)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\losses.py:1831 deserialize
        return deserialize_keras_object(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\utils\generic_utils.py:392 deserialize_keras_object
        raise ValueError('Unknown ' + printable_module_name + ':' + object_name)

    ValueError: Unknown loss function:modified_mape
Traceback (most recent call last):
  File ".\_2_train.py", line 385, in train
    forecaster.fit(x_train, y_train, batch_size=batch_size, epochs=epochs, workers=workers,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 66, in _method_wrapper
    return method(self, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 785, in fit
    tmp_logs = train_function(iterator)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 580, in __call__
    result = self._call(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 627, in _call
    self._initialize(args, kwds, add_initializers_to=initializers)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 505, in _initialize
    self._stateful_fn._get_concrete_function_internal_garbage_collected(  # pylint: disable=protected-access
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2446, in _get_concrete_function_internal_garbage_collected
    graph_function, _, _ = self._maybe_define_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2777, in _maybe_define_function
    graph_function = self._create_graph_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2657, in _create_graph_function
    func_graph_module.func_graph_from_py_func(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 981, in func_graph_from_py_func
    func_outputs = python_func(*func_args, **func_kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 441, in wrapped_fn
    return weak_wrapped_fn().__wrapped__(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 968, in wrapper
    raise e.ag_error_metadata.to_exception(e)
ValueError: in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:466 train_step  **
        loss = self.compiled_loss(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:187 __call__
        self._build(y_pred)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:140 _build
        self._losses = nest.map_structure(self._get_loss_object, self._losses)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:617 map_structure
        structure[0], [func(*x) for x in entries],
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\nest.py:617 <listcomp>
        structure[0], [func(*x) for x in entries],
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:259 _get_loss_object
        loss = losses_mod.get(loss)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\losses.py:1857 get
        return deserialize(identifier)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\losses.py:1831 deserialize
        return deserialize_keras_object(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\utils\generic_utils.py:392 deserialize_keras_object
        raise ValueError('Unknown ' + printable_module_name + ':' + object_name)

    ValueError: Unknown loss function:modified_mape


10.May 2020 02:59:42 correct LSTM model creation and compilation

10.May 2020 02:59:42 correct LSTM model creation and compilation

10.May 2020 02:59:42 correct LSTM model creation and compilation

10.May 2020 02:59:44 model training error
in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:474 train_step  **
        _minimize(self.distribute_strategy, tape, self.optimizer, loss,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:1740 _minimize
        gradients = optimizer._aggregate_gradients(zip(gradients,  # pylint: disable=protected-access
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\optimizer_v2\optimizer_v2.py:525 _aggregate_gradients
        filtered_grads_and_vars = _filter_grads(grads_and_vars)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\optimizer_v2\optimizer_v2.py:1202 _filter_grads
        raise ValueError("No gradients provided for any variable: %s." %

    ValueError: No gradients provided for any variable: ['sequential/bidirectional/forward_rnn/peephole_lstm_cell/kernel:0', 'sequential/bidirectional/forward_rnn/peephole_lstm_cell/recurrent_kernel:0', 'sequential/bidirectional/forward_rnn/peephole_lstm_cell/bias:0', 'sequential/bidirectional/forward_rnn/peephole_lstm_cell/input_gate_peephole_weights:0', 'sequential/bidirectional/forward_rnn/peephole_lstm_cell/forget_gate_peephole_weights:0', 'sequential/bidirectional/forward_rnn/peephole_lstm_cell/output_gate_peephole_weights:0', 'sequential/bidirectional/backward_rnn/peephole_lstm_cell/kernel:0', 'sequential/bidirectional/backward_rnn/peephole_lstm_cell/recurrent_kernel:0', 'sequential/bidirectional/backward_rnn/peephole_lstm_cell/bias:0', 'sequential/bidirectional/backward_rnn/peephole_lstm_cell/input_gate_peephole_weights:0', 'sequential/bidirectional/backward_rnn/peephole_lstm_cell/forget_gate_peephole_weights:0', 'sequential/bidirectional/backward_rnn/peephole_lstm_cell/output_gate_peephole_weights:0', 'sequential/bidirectional_1/forward_rnn_1/peephole_lstm_cell_1/kernel:0', 'sequential/bidirectional_1/forward_rnn_1/peephole_lstm_cell_1/recurrent_kernel:0', 'sequential/bidirectional_1/forward_rnn_1/peephole_lstm_cell_1/bias:0', 'sequential/bidirectional_1/forward_rnn_1/peephole_lstm_cell_1/input_gate_peephole_weights:0', 'sequential/bidirectional_1/forward_rnn_1/peephole_lstm_cell_1/forget_gate_peephole_weights:0', 'sequential/bidirectional_1/forward_rnn_1/peephole_lstm_cell_1/output_gate_peephole_weights:0', 'sequential/bidirectional_1/backward_rnn_1/peephole_lstm_cell_1/kernel:0', 'sequential/bidirectional_1/backward_rnn_1/peephole_lstm_cell_1/recurrent_kernel:0', 'sequential/bidirectional_1/backward_rnn_1/peephole_lstm_cell_1/bias:0', 'sequential/bidirectional_1/backward_rnn_1/peephole_lstm_cell_1/input_gate_peephole_weights:0', 'sequential/bidirectional_1/backward_rnn_1/peephole_lstm_cell_1/forget_gate_peephole_weights:0', 'sequential/bidirectional_1/backward_rnn_1/peephole_lstm_cell_1/output_gate_peephole_weights:0', 'sequential/bidirectional_2/forward_rnn_2/peephole_lstm_cell_2/kernel:0', 'sequential/bidirectional_2/forward_rnn_2/peephole_lstm_cell_2/recurrent_kernel:0', 'sequential/bidirectional_2/forward_rnn_2/peephole_lstm_cell_2/bias:0', 'sequential/bidirectional_2/forward_rnn_2/peephole_lstm_cell_2/input_gate_peephole_weights:0', 'sequential/bidirectional_2/forward_rnn_2/peephole_lstm_cell_2/forget_gate_peephole_weights:0', 'sequential/bidirectional_2/forward_rnn_2/peephole_lstm_cell_2/output_gate_peephole_weights:0', 'sequential/bidirectional_2/backward_rnn_2/peephole_lstm_cell_2/kernel:0', 'sequential/bidirectional_2/backward_rnn_2/peephole_lstm_cell_2/recurrent_kernel:0', 'sequential/bidirectional_2/backward_rnn_2/peephole_lstm_cell_2/bias:0', 'sequential/bidirectional_2/backward_rnn_2/peephole_lstm_cell_2/input_gate_peephole_weights:0', 'sequential/bidirectional_2/backward_rnn_2/peephole_lstm_cell_2/forget_gate_peephole_weights:0', 'sequential/bidirectional_2/backward_rnn_2/peephole_lstm_cell_2/output_gate_peephole_weights:0', 'sequential/bidirectional_3/forward_rnn_3/peephole_lstm_cell_3/kernel:0', 'sequential/bidirectional_3/forward_rnn_3/peephole_lstm_cell_3/recurrent_kernel:0', 'sequential/bidirectional_3/forward_rnn_3/peephole_lstm_cell_3/bias:0', 'sequential/bidirectional_3/forward_rnn_3/peephole_lstm_cell_3/input_gate_peephole_weights:0', 'sequential/bidirectional_3/forward_rnn_3/peephole_lstm_cell_3/forget_gate_peephole_weights:0', 'sequential/bidirectional_3/forward_rnn_3/peephole_lstm_cell_3/output_gate_peephole_weights:0', 'sequential/bidirectional_3/backward_rnn_3/peephole_lstm_cell_3/kernel:0', 'sequential/bidirectional_3/backward_rnn_3/peephole_lstm_cell_3/recurrent_kernel:0', 'sequential/bidirectional_3/backward_rnn_3/peephole_lstm_cell_3/bias:0', 'sequential/bidirectional_3/backward_rnn_3/peephole_lstm_cell_3/input_gate_peephole_weights:0', 'sequential/bidirectional_3/backward_rnn_3/peephole_lstm_cell_3/forget_gate_peephole_weights:0', 'sequential/bidirectional_3/backward_rnn_3/peephole_lstm_cell_3/output_gate_peephole_weights:0', 'sequential/time_distributed/kernel:0', 'sequential/time_distributed/bias:0'].
Traceback (most recent call last):
  File ".\_2_train.py", line 385, in train
    forecaster.fit(x_train, y_train, batch_size=batch_size, epochs=epochs, workers=workers,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 66, in _method_wrapper
    return method(self, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 785, in fit
    tmp_logs = train_function(iterator)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 580, in __call__
    result = self._call(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 627, in _call
    self._initialize(args, kwds, add_initializers_to=initializers)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 505, in _initialize
    self._stateful_fn._get_concrete_function_internal_garbage_collected(  # pylint: disable=protected-access
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2446, in _get_concrete_function_internal_garbage_collected
    graph_function, _, _ = self._maybe_define_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2777, in _maybe_define_function
    graph_function = self._create_graph_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2657, in _create_graph_function
    func_graph_module.func_graph_from_py_func(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 981, in func_graph_from_py_func
    func_outputs = python_func(*func_args, **func_kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 441, in wrapped_fn
    return weak_wrapped_fn().__wrapped__(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 968, in wrapper
    raise e.ag_error_metadata.to_exception(e)
ValueError: in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:474 train_step  **
        _minimize(self.distribute_strategy, tape, self.optimizer, loss,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:1740 _minimize
        gradients = optimizer._aggregate_gradients(zip(gradients,  # pylint: disable=protected-access
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\optimizer_v2\optimizer_v2.py:525 _aggregate_gradients
        filtered_grads_and_vars = _filter_grads(grads_and_vars)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\optimizer_v2\optimizer_v2.py:1202 _filter_grads
        raise ValueError("No gradients provided for any variable: %s." %

    ValueError: No gradients provided for any variable: ['sequential/bidirectional/forward_rnn/peephole_lstm_cell/kernel:0', 'sequential/bidirectional/forward_rnn/peephole_lstm_cell/recurrent_kernel:0', 'sequential/bidirectional/forward_rnn/peephole_lstm_cell/bias:0', 'sequential/bidirectional/forward_rnn/peephole_lstm_cell/input_gate_peephole_weights:0', 'sequential/bidirectional/forward_rnn/peephole_lstm_cell/forget_gate_peephole_weights:0', 'sequential/bidirectional/forward_rnn/peephole_lstm_cell/output_gate_peephole_weights:0', 'sequential/bidirectional/backward_rnn/peephole_lstm_cell/kernel:0', 'sequential/bidirectional/backward_rnn/peephole_lstm_cell/recurrent_kernel:0', 'sequential/bidirectional/backward_rnn/peephole_lstm_cell/bias:0', 'sequential/bidirectional/backward_rnn/peephole_lstm_cell/input_gate_peephole_weights:0', 'sequential/bidirectional/backward_rnn/peephole_lstm_cell/forget_gate_peephole_weights:0', 'sequential/bidirectional/backward_rnn/peephole_lstm_cell/output_gate_peephole_weights:0', 'sequential/bidirectional_1/forward_rnn_1/peephole_lstm_cell_1/kernel:0', 'sequential/bidirectional_1/forward_rnn_1/peephole_lstm_cell_1/recurrent_kernel:0', 'sequential/bidirectional_1/forward_rnn_1/peephole_lstm_cell_1/bias:0', 'sequential/bidirectional_1/forward_rnn_1/peephole_lstm_cell_1/input_gate_peephole_weights:0', 'sequential/bidirectional_1/forward_rnn_1/peephole_lstm_cell_1/forget_gate_peephole_weights:0', 'sequential/bidirectional_1/forward_rnn_1/peephole_lstm_cell_1/output_gate_peephole_weights:0', 'sequential/bidirectional_1/backward_rnn_1/peephole_lstm_cell_1/kernel:0', 'sequential/bidirectional_1/backward_rnn_1/peephole_lstm_cell_1/recurrent_kernel:0', 'sequential/bidirectional_1/backward_rnn_1/peephole_lstm_cell_1/bias:0', 'sequential/bidirectional_1/backward_rnn_1/peephole_lstm_cell_1/input_gate_peephole_weights:0', 'sequential/bidirectional_1/backward_rnn_1/peephole_lstm_cell_1/forget_gate_peephole_weights:0', 'sequential/bidirectional_1/backward_rnn_1/peephole_lstm_cell_1/output_gate_peephole_weights:0', 'sequential/bidirectional_2/forward_rnn_2/peephole_lstm_cell_2/kernel:0', 'sequential/bidirectional_2/forward_rnn_2/peephole_lstm_cell_2/recurrent_kernel:0', 'sequential/bidirectional_2/forward_rnn_2/peephole_lstm_cell_2/bias:0', 'sequential/bidirectional_2/forward_rnn_2/peephole_lstm_cell_2/input_gate_peephole_weights:0', 'sequential/bidirectional_2/forward_rnn_2/peephole_lstm_cell_2/forget_gate_peephole_weights:0', 'sequential/bidirectional_2/forward_rnn_2/peephole_lstm_cell_2/output_gate_peephole_weights:0', 'sequential/bidirectional_2/backward_rnn_2/peephole_lstm_cell_2/kernel:0', 'sequential/bidirectional_2/backward_rnn_2/peephole_lstm_cell_2/recurrent_kernel:0', 'sequential/bidirectional_2/backward_rnn_2/peephole_lstm_cell_2/bias:0', 'sequential/bidirectional_2/backward_rnn_2/peephole_lstm_cell_2/input_gate_peephole_weights:0', 'sequential/bidirectional_2/backward_rnn_2/peephole_lstm_cell_2/forget_gate_peephole_weights:0', 'sequential/bidirectional_2/backward_rnn_2/peephole_lstm_cell_2/output_gate_peephole_weights:0', 'sequential/bidirectional_3/forward_rnn_3/peephole_lstm_cell_3/kernel:0', 'sequential/bidirectional_3/forward_rnn_3/peephole_lstm_cell_3/recurrent_kernel:0', 'sequential/bidirectional_3/forward_rnn_3/peephole_lstm_cell_3/bias:0', 'sequential/bidirectional_3/forward_rnn_3/peephole_lstm_cell_3/input_gate_peephole_weights:0', 'sequential/bidirectional_3/forward_rnn_3/peephole_lstm_cell_3/forget_gate_peephole_weights:0', 'sequential/bidirectional_3/forward_rnn_3/peephole_lstm_cell_3/output_gate_peephole_weights:0', 'sequential/bidirectional_3/backward_rnn_3/peephole_lstm_cell_3/kernel:0', 'sequential/bidirectional_3/backward_rnn_3/peephole_lstm_cell_3/recurrent_kernel:0', 'sequential/bidirectional_3/backward_rnn_3/peephole_lstm_cell_3/bias:0', 'sequential/bidirectional_3/backward_rnn_3/peephole_lstm_cell_3/input_gate_peephole_weights:0', 'sequential/bidirectional_3/backward_rnn_3/peephole_lstm_cell_3/forget_gate_peephole_weights:0', 'sequential/bidirectional_3/backward_rnn_3/peephole_lstm_cell_3/output_gate_peephole_weights:0', 'sequential/time_distributed/kernel:0', 'sequential/time_distributed/bias:0'].


10.May 2020 03:07:19 correct LSTM model creation and compilation

10.May 2020 03:07:19 correct LSTM model creation and compilation

10.May 2020 03:07:19 correct LSTM model creation and compilation

10.May 2020 03:07:21 model training error
in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:474 train_step  **
        _minimize(self.distribute_strategy, tape, self.optimizer, loss,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:1740 _minimize
        gradients = optimizer._aggregate_gradients(zip(gradients,  # pylint: disable=protected-access
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\optimizer_v2\optimizer_v2.py:525 _aggregate_gradients
        filtered_grads_and_vars = _filter_grads(grads_and_vars)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\optimizer_v2\optimizer_v2.py:1202 _filter_grads
        raise ValueError("No gradients provided for any variable: %s." %

    ValueError: No gradients provided for any variable: ['sequential/bidirectional/forward_rnn/peephole_lstm_cell/kernel:0', 'sequential/bidirectional/forward_rnn/peephole_lstm_cell/recurrent_kernel:0', 'sequential/bidirectional/forward_rnn/peephole_lstm_cell/bias:0', 'sequential/bidirectional/forward_rnn/peephole_lstm_cell/input_gate_peephole_weights:0', 'sequential/bidirectional/forward_rnn/peephole_lstm_cell/forget_gate_peephole_weights:0', 'sequential/bidirectional/forward_rnn/peephole_lstm_cell/output_gate_peephole_weights:0', 'sequential/bidirectional/backward_rnn/peephole_lstm_cell/kernel:0', 'sequential/bidirectional/backward_rnn/peephole_lstm_cell/recurrent_kernel:0', 'sequential/bidirectional/backward_rnn/peephole_lstm_cell/bias:0', 'sequential/bidirectional/backward_rnn/peephole_lstm_cell/input_gate_peephole_weights:0', 'sequential/bidirectional/backward_rnn/peephole_lstm_cell/forget_gate_peephole_weights:0', 'sequential/bidirectional/backward_rnn/peephole_lstm_cell/output_gate_peephole_weights:0', 'sequential/bidirectional_1/forward_rnn_1/peephole_lstm_cell_1/kernel:0', 'sequential/bidirectional_1/forward_rnn_1/peephole_lstm_cell_1/recurrent_kernel:0', 'sequential/bidirectional_1/forward_rnn_1/peephole_lstm_cell_1/bias:0', 'sequential/bidirectional_1/forward_rnn_1/peephole_lstm_cell_1/input_gate_peephole_weights:0', 'sequential/bidirectional_1/forward_rnn_1/peephole_lstm_cell_1/forget_gate_peephole_weights:0', 'sequential/bidirectional_1/forward_rnn_1/peephole_lstm_cell_1/output_gate_peephole_weights:0', 'sequential/bidirectional_1/backward_rnn_1/peephole_lstm_cell_1/kernel:0', 'sequential/bidirectional_1/backward_rnn_1/peephole_lstm_cell_1/recurrent_kernel:0', 'sequential/bidirectional_1/backward_rnn_1/peephole_lstm_cell_1/bias:0', 'sequential/bidirectional_1/backward_rnn_1/peephole_lstm_cell_1/input_gate_peephole_weights:0', 'sequential/bidirectional_1/backward_rnn_1/peephole_lstm_cell_1/forget_gate_peephole_weights:0', 'sequential/bidirectional_1/backward_rnn_1/peephole_lstm_cell_1/output_gate_peephole_weights:0', 'sequential/bidirectional_2/forward_rnn_2/peephole_lstm_cell_2/kernel:0', 'sequential/bidirectional_2/forward_rnn_2/peephole_lstm_cell_2/recurrent_kernel:0', 'sequential/bidirectional_2/forward_rnn_2/peephole_lstm_cell_2/bias:0', 'sequential/bidirectional_2/forward_rnn_2/peephole_lstm_cell_2/input_gate_peephole_weights:0', 'sequential/bidirectional_2/forward_rnn_2/peephole_lstm_cell_2/forget_gate_peephole_weights:0', 'sequential/bidirectional_2/forward_rnn_2/peephole_lstm_cell_2/output_gate_peephole_weights:0', 'sequential/bidirectional_2/backward_rnn_2/peephole_lstm_cell_2/kernel:0', 'sequential/bidirectional_2/backward_rnn_2/peephole_lstm_cell_2/recurrent_kernel:0', 'sequential/bidirectional_2/backward_rnn_2/peephole_lstm_cell_2/bias:0', 'sequential/bidirectional_2/backward_rnn_2/peephole_lstm_cell_2/input_gate_peephole_weights:0', 'sequential/bidirectional_2/backward_rnn_2/peephole_lstm_cell_2/forget_gate_peephole_weights:0', 'sequential/bidirectional_2/backward_rnn_2/peephole_lstm_cell_2/output_gate_peephole_weights:0', 'sequential/bidirectional_3/forward_rnn_3/peephole_lstm_cell_3/kernel:0', 'sequential/bidirectional_3/forward_rnn_3/peephole_lstm_cell_3/recurrent_kernel:0', 'sequential/bidirectional_3/forward_rnn_3/peephole_lstm_cell_3/bias:0', 'sequential/bidirectional_3/forward_rnn_3/peephole_lstm_cell_3/input_gate_peephole_weights:0', 'sequential/bidirectional_3/forward_rnn_3/peephole_lstm_cell_3/forget_gate_peephole_weights:0', 'sequential/bidirectional_3/forward_rnn_3/peephole_lstm_cell_3/output_gate_peephole_weights:0', 'sequential/bidirectional_3/backward_rnn_3/peephole_lstm_cell_3/kernel:0', 'sequential/bidirectional_3/backward_rnn_3/peephole_lstm_cell_3/recurrent_kernel:0', 'sequential/bidirectional_3/backward_rnn_3/peephole_lstm_cell_3/bias:0', 'sequential/bidirectional_3/backward_rnn_3/peephole_lstm_cell_3/input_gate_peephole_weights:0', 'sequential/bidirectional_3/backward_rnn_3/peephole_lstm_cell_3/forget_gate_peephole_weights:0', 'sequential/bidirectional_3/backward_rnn_3/peephole_lstm_cell_3/output_gate_peephole_weights:0', 'sequential/time_distributed/kernel:0', 'sequential/time_distributed/bias:0'].
Traceback (most recent call last):
  File ".\_2_train.py", line 385, in train
    forecaster.fit(x_train, y_train, batch_size=batch_size, epochs=epochs, workers=workers,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 66, in _method_wrapper
    return method(self, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 785, in fit
    tmp_logs = train_function(iterator)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 580, in __call__
    result = self._call(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 627, in _call
    self._initialize(args, kwds, add_initializers_to=initializers)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 505, in _initialize
    self._stateful_fn._get_concrete_function_internal_garbage_collected(  # pylint: disable=protected-access
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2446, in _get_concrete_function_internal_garbage_collected
    graph_function, _, _ = self._maybe_define_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2777, in _maybe_define_function
    graph_function = self._create_graph_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2657, in _create_graph_function
    func_graph_module.func_graph_from_py_func(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 981, in func_graph_from_py_func
    func_outputs = python_func(*func_args, **func_kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 441, in wrapped_fn
    return weak_wrapped_fn().__wrapped__(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 968, in wrapper
    raise e.ag_error_metadata.to_exception(e)
ValueError: in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:474 train_step  **
        _minimize(self.distribute_strategy, tape, self.optimizer, loss,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:1740 _minimize
        gradients = optimizer._aggregate_gradients(zip(gradients,  # pylint: disable=protected-access
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\optimizer_v2\optimizer_v2.py:525 _aggregate_gradients
        filtered_grads_and_vars = _filter_grads(grads_and_vars)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\optimizer_v2\optimizer_v2.py:1202 _filter_grads
        raise ValueError("No gradients provided for any variable: %s." %

    ValueError: No gradients provided for any variable: ['sequential/bidirectional/forward_rnn/peephole_lstm_cell/kernel:0', 'sequential/bidirectional/forward_rnn/peephole_lstm_cell/recurrent_kernel:0', 'sequential/bidirectional/forward_rnn/peephole_lstm_cell/bias:0', 'sequential/bidirectional/forward_rnn/peephole_lstm_cell/input_gate_peephole_weights:0', 'sequential/bidirectional/forward_rnn/peephole_lstm_cell/forget_gate_peephole_weights:0', 'sequential/bidirectional/forward_rnn/peephole_lstm_cell/output_gate_peephole_weights:0', 'sequential/bidirectional/backward_rnn/peephole_lstm_cell/kernel:0', 'sequential/bidirectional/backward_rnn/peephole_lstm_cell/recurrent_kernel:0', 'sequential/bidirectional/backward_rnn/peephole_lstm_cell/bias:0', 'sequential/bidirectional/backward_rnn/peephole_lstm_cell/input_gate_peephole_weights:0', 'sequential/bidirectional/backward_rnn/peephole_lstm_cell/forget_gate_peephole_weights:0', 'sequential/bidirectional/backward_rnn/peephole_lstm_cell/output_gate_peephole_weights:0', 'sequential/bidirectional_1/forward_rnn_1/peephole_lstm_cell_1/kernel:0', 'sequential/bidirectional_1/forward_rnn_1/peephole_lstm_cell_1/recurrent_kernel:0', 'sequential/bidirectional_1/forward_rnn_1/peephole_lstm_cell_1/bias:0', 'sequential/bidirectional_1/forward_rnn_1/peephole_lstm_cell_1/input_gate_peephole_weights:0', 'sequential/bidirectional_1/forward_rnn_1/peephole_lstm_cell_1/forget_gate_peephole_weights:0', 'sequential/bidirectional_1/forward_rnn_1/peephole_lstm_cell_1/output_gate_peephole_weights:0', 'sequential/bidirectional_1/backward_rnn_1/peephole_lstm_cell_1/kernel:0', 'sequential/bidirectional_1/backward_rnn_1/peephole_lstm_cell_1/recurrent_kernel:0', 'sequential/bidirectional_1/backward_rnn_1/peephole_lstm_cell_1/bias:0', 'sequential/bidirectional_1/backward_rnn_1/peephole_lstm_cell_1/input_gate_peephole_weights:0', 'sequential/bidirectional_1/backward_rnn_1/peephole_lstm_cell_1/forget_gate_peephole_weights:0', 'sequential/bidirectional_1/backward_rnn_1/peephole_lstm_cell_1/output_gate_peephole_weights:0', 'sequential/bidirectional_2/forward_rnn_2/peephole_lstm_cell_2/kernel:0', 'sequential/bidirectional_2/forward_rnn_2/peephole_lstm_cell_2/recurrent_kernel:0', 'sequential/bidirectional_2/forward_rnn_2/peephole_lstm_cell_2/bias:0', 'sequential/bidirectional_2/forward_rnn_2/peephole_lstm_cell_2/input_gate_peephole_weights:0', 'sequential/bidirectional_2/forward_rnn_2/peephole_lstm_cell_2/forget_gate_peephole_weights:0', 'sequential/bidirectional_2/forward_rnn_2/peephole_lstm_cell_2/output_gate_peephole_weights:0', 'sequential/bidirectional_2/backward_rnn_2/peephole_lstm_cell_2/kernel:0', 'sequential/bidirectional_2/backward_rnn_2/peephole_lstm_cell_2/recurrent_kernel:0', 'sequential/bidirectional_2/backward_rnn_2/peephole_lstm_cell_2/bias:0', 'sequential/bidirectional_2/backward_rnn_2/peephole_lstm_cell_2/input_gate_peephole_weights:0', 'sequential/bidirectional_2/backward_rnn_2/peephole_lstm_cell_2/forget_gate_peephole_weights:0', 'sequential/bidirectional_2/backward_rnn_2/peephole_lstm_cell_2/output_gate_peephole_weights:0', 'sequential/bidirectional_3/forward_rnn_3/peephole_lstm_cell_3/kernel:0', 'sequential/bidirectional_3/forward_rnn_3/peephole_lstm_cell_3/recurrent_kernel:0', 'sequential/bidirectional_3/forward_rnn_3/peephole_lstm_cell_3/bias:0', 'sequential/bidirectional_3/forward_rnn_3/peephole_lstm_cell_3/input_gate_peephole_weights:0', 'sequential/bidirectional_3/forward_rnn_3/peephole_lstm_cell_3/forget_gate_peephole_weights:0', 'sequential/bidirectional_3/forward_rnn_3/peephole_lstm_cell_3/output_gate_peephole_weights:0', 'sequential/bidirectional_3/backward_rnn_3/peephole_lstm_cell_3/kernel:0', 'sequential/bidirectional_3/backward_rnn_3/peephole_lstm_cell_3/recurrent_kernel:0', 'sequential/bidirectional_3/backward_rnn_3/peephole_lstm_cell_3/bias:0', 'sequential/bidirectional_3/backward_rnn_3/peephole_lstm_cell_3/input_gate_peephole_weights:0', 'sequential/bidirectional_3/backward_rnn_3/peephole_lstm_cell_3/forget_gate_peephole_weights:0', 'sequential/bidirectional_3/backward_rnn_3/peephole_lstm_cell_3/output_gate_peephole_weights:0', 'sequential/time_distributed/kernel:0', 'sequential/time_distributed/bias:0'].


10.May 2020 03:07:54 correct LSTM model creation and compilation

10.May 2020 03:07:54 correct LSTM model creation and compilation

10.May 2020 03:07:54 correct LSTM model creation and compilation

10.May 2020 03:07:56 model training error
in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:474 train_step  **
        _minimize(self.distribute_strategy, tape, self.optimizer, loss,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:1740 _minimize
        gradients = optimizer._aggregate_gradients(zip(gradients,  # pylint: disable=protected-access
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\optimizer_v2\optimizer_v2.py:525 _aggregate_gradients
        filtered_grads_and_vars = _filter_grads(grads_and_vars)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\optimizer_v2\optimizer_v2.py:1202 _filter_grads
        raise ValueError("No gradients provided for any variable: %s." %

    ValueError: No gradients provided for any variable: ['sequential/bidirectional/forward_rnn/peephole_lstm_cell/kernel:0', 'sequential/bidirectional/forward_rnn/peephole_lstm_cell/recurrent_kernel:0', 'sequential/bidirectional/forward_rnn/peephole_lstm_cell/bias:0', 'sequential/bidirectional/forward_rnn/peephole_lstm_cell/input_gate_peephole_weights:0', 'sequential/bidirectional/forward_rnn/peephole_lstm_cell/forget_gate_peephole_weights:0', 'sequential/bidirectional/forward_rnn/peephole_lstm_cell/output_gate_peephole_weights:0', 'sequential/bidirectional/backward_rnn/peephole_lstm_cell/kernel:0', 'sequential/bidirectional/backward_rnn/peephole_lstm_cell/recurrent_kernel:0', 'sequential/bidirectional/backward_rnn/peephole_lstm_cell/bias:0', 'sequential/bidirectional/backward_rnn/peephole_lstm_cell/input_gate_peephole_weights:0', 'sequential/bidirectional/backward_rnn/peephole_lstm_cell/forget_gate_peephole_weights:0', 'sequential/bidirectional/backward_rnn/peephole_lstm_cell/output_gate_peephole_weights:0', 'sequential/bidirectional_1/forward_rnn_1/peephole_lstm_cell_1/kernel:0', 'sequential/bidirectional_1/forward_rnn_1/peephole_lstm_cell_1/recurrent_kernel:0', 'sequential/bidirectional_1/forward_rnn_1/peephole_lstm_cell_1/bias:0', 'sequential/bidirectional_1/forward_rnn_1/peephole_lstm_cell_1/input_gate_peephole_weights:0', 'sequential/bidirectional_1/forward_rnn_1/peephole_lstm_cell_1/forget_gate_peephole_weights:0', 'sequential/bidirectional_1/forward_rnn_1/peephole_lstm_cell_1/output_gate_peephole_weights:0', 'sequential/bidirectional_1/backward_rnn_1/peephole_lstm_cell_1/kernel:0', 'sequential/bidirectional_1/backward_rnn_1/peephole_lstm_cell_1/recurrent_kernel:0', 'sequential/bidirectional_1/backward_rnn_1/peephole_lstm_cell_1/bias:0', 'sequential/bidirectional_1/backward_rnn_1/peephole_lstm_cell_1/input_gate_peephole_weights:0', 'sequential/bidirectional_1/backward_rnn_1/peephole_lstm_cell_1/forget_gate_peephole_weights:0', 'sequential/bidirectional_1/backward_rnn_1/peephole_lstm_cell_1/output_gate_peephole_weights:0', 'sequential/bidirectional_2/forward_rnn_2/peephole_lstm_cell_2/kernel:0', 'sequential/bidirectional_2/forward_rnn_2/peephole_lstm_cell_2/recurrent_kernel:0', 'sequential/bidirectional_2/forward_rnn_2/peephole_lstm_cell_2/bias:0', 'sequential/bidirectional_2/forward_rnn_2/peephole_lstm_cell_2/input_gate_peephole_weights:0', 'sequential/bidirectional_2/forward_rnn_2/peephole_lstm_cell_2/forget_gate_peephole_weights:0', 'sequential/bidirectional_2/forward_rnn_2/peephole_lstm_cell_2/output_gate_peephole_weights:0', 'sequential/bidirectional_2/backward_rnn_2/peephole_lstm_cell_2/kernel:0', 'sequential/bidirectional_2/backward_rnn_2/peephole_lstm_cell_2/recurrent_kernel:0', 'sequential/bidirectional_2/backward_rnn_2/peephole_lstm_cell_2/bias:0', 'sequential/bidirectional_2/backward_rnn_2/peephole_lstm_cell_2/input_gate_peephole_weights:0', 'sequential/bidirectional_2/backward_rnn_2/peephole_lstm_cell_2/forget_gate_peephole_weights:0', 'sequential/bidirectional_2/backward_rnn_2/peephole_lstm_cell_2/output_gate_peephole_weights:0', 'sequential/bidirectional_3/forward_rnn_3/peephole_lstm_cell_3/kernel:0', 'sequential/bidirectional_3/forward_rnn_3/peephole_lstm_cell_3/recurrent_kernel:0', 'sequential/bidirectional_3/forward_rnn_3/peephole_lstm_cell_3/bias:0', 'sequential/bidirectional_3/forward_rnn_3/peephole_lstm_cell_3/input_gate_peephole_weights:0', 'sequential/bidirectional_3/forward_rnn_3/peephole_lstm_cell_3/forget_gate_peephole_weights:0', 'sequential/bidirectional_3/forward_rnn_3/peephole_lstm_cell_3/output_gate_peephole_weights:0', 'sequential/bidirectional_3/backward_rnn_3/peephole_lstm_cell_3/kernel:0', 'sequential/bidirectional_3/backward_rnn_3/peephole_lstm_cell_3/recurrent_kernel:0', 'sequential/bidirectional_3/backward_rnn_3/peephole_lstm_cell_3/bias:0', 'sequential/bidirectional_3/backward_rnn_3/peephole_lstm_cell_3/input_gate_peephole_weights:0', 'sequential/bidirectional_3/backward_rnn_3/peephole_lstm_cell_3/forget_gate_peephole_weights:0', 'sequential/bidirectional_3/backward_rnn_3/peephole_lstm_cell_3/output_gate_peephole_weights:0', 'sequential/time_distributed/kernel:0', 'sequential/time_distributed/bias:0'].
Traceback (most recent call last):
  File ".\_2_train.py", line 386, in train
    forecaster.fit(x_train, y_train, batch_size=batch_size, epochs=epochs, workers=workers,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 66, in _method_wrapper
    return method(self, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 785, in fit
    tmp_logs = train_function(iterator)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 580, in __call__
    result = self._call(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 627, in _call
    self._initialize(args, kwds, add_initializers_to=initializers)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 505, in _initialize
    self._stateful_fn._get_concrete_function_internal_garbage_collected(  # pylint: disable=protected-access
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2446, in _get_concrete_function_internal_garbage_collected
    graph_function, _, _ = self._maybe_define_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2777, in _maybe_define_function
    graph_function = self._create_graph_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2657, in _create_graph_function
    func_graph_module.func_graph_from_py_func(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 981, in func_graph_from_py_func
    func_outputs = python_func(*func_args, **func_kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 441, in wrapped_fn
    return weak_wrapped_fn().__wrapped__(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 968, in wrapper
    raise e.ag_error_metadata.to_exception(e)
ValueError: in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:474 train_step  **
        _minimize(self.distribute_strategy, tape, self.optimizer, loss,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:1740 _minimize
        gradients = optimizer._aggregate_gradients(zip(gradients,  # pylint: disable=protected-access
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\optimizer_v2\optimizer_v2.py:525 _aggregate_gradients
        filtered_grads_and_vars = _filter_grads(grads_and_vars)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\optimizer_v2\optimizer_v2.py:1202 _filter_grads
        raise ValueError("No gradients provided for any variable: %s." %

    ValueError: No gradients provided for any variable: ['sequential/bidirectional/forward_rnn/peephole_lstm_cell/kernel:0', 'sequential/bidirectional/forward_rnn/peephole_lstm_cell/recurrent_kernel:0', 'sequential/bidirectional/forward_rnn/peephole_lstm_cell/bias:0', 'sequential/bidirectional/forward_rnn/peephole_lstm_cell/input_gate_peephole_weights:0', 'sequential/bidirectional/forward_rnn/peephole_lstm_cell/forget_gate_peephole_weights:0', 'sequential/bidirectional/forward_rnn/peephole_lstm_cell/output_gate_peephole_weights:0', 'sequential/bidirectional/backward_rnn/peephole_lstm_cell/kernel:0', 'sequential/bidirectional/backward_rnn/peephole_lstm_cell/recurrent_kernel:0', 'sequential/bidirectional/backward_rnn/peephole_lstm_cell/bias:0', 'sequential/bidirectional/backward_rnn/peephole_lstm_cell/input_gate_peephole_weights:0', 'sequential/bidirectional/backward_rnn/peephole_lstm_cell/forget_gate_peephole_weights:0', 'sequential/bidirectional/backward_rnn/peephole_lstm_cell/output_gate_peephole_weights:0', 'sequential/bidirectional_1/forward_rnn_1/peephole_lstm_cell_1/kernel:0', 'sequential/bidirectional_1/forward_rnn_1/peephole_lstm_cell_1/recurrent_kernel:0', 'sequential/bidirectional_1/forward_rnn_1/peephole_lstm_cell_1/bias:0', 'sequential/bidirectional_1/forward_rnn_1/peephole_lstm_cell_1/input_gate_peephole_weights:0', 'sequential/bidirectional_1/forward_rnn_1/peephole_lstm_cell_1/forget_gate_peephole_weights:0', 'sequential/bidirectional_1/forward_rnn_1/peephole_lstm_cell_1/output_gate_peephole_weights:0', 'sequential/bidirectional_1/backward_rnn_1/peephole_lstm_cell_1/kernel:0', 'sequential/bidirectional_1/backward_rnn_1/peephole_lstm_cell_1/recurrent_kernel:0', 'sequential/bidirectional_1/backward_rnn_1/peephole_lstm_cell_1/bias:0', 'sequential/bidirectional_1/backward_rnn_1/peephole_lstm_cell_1/input_gate_peephole_weights:0', 'sequential/bidirectional_1/backward_rnn_1/peephole_lstm_cell_1/forget_gate_peephole_weights:0', 'sequential/bidirectional_1/backward_rnn_1/peephole_lstm_cell_1/output_gate_peephole_weights:0', 'sequential/bidirectional_2/forward_rnn_2/peephole_lstm_cell_2/kernel:0', 'sequential/bidirectional_2/forward_rnn_2/peephole_lstm_cell_2/recurrent_kernel:0', 'sequential/bidirectional_2/forward_rnn_2/peephole_lstm_cell_2/bias:0', 'sequential/bidirectional_2/forward_rnn_2/peephole_lstm_cell_2/input_gate_peephole_weights:0', 'sequential/bidirectional_2/forward_rnn_2/peephole_lstm_cell_2/forget_gate_peephole_weights:0', 'sequential/bidirectional_2/forward_rnn_2/peephole_lstm_cell_2/output_gate_peephole_weights:0', 'sequential/bidirectional_2/backward_rnn_2/peephole_lstm_cell_2/kernel:0', 'sequential/bidirectional_2/backward_rnn_2/peephole_lstm_cell_2/recurrent_kernel:0', 'sequential/bidirectional_2/backward_rnn_2/peephole_lstm_cell_2/bias:0', 'sequential/bidirectional_2/backward_rnn_2/peephole_lstm_cell_2/input_gate_peephole_weights:0', 'sequential/bidirectional_2/backward_rnn_2/peephole_lstm_cell_2/forget_gate_peephole_weights:0', 'sequential/bidirectional_2/backward_rnn_2/peephole_lstm_cell_2/output_gate_peephole_weights:0', 'sequential/bidirectional_3/forward_rnn_3/peephole_lstm_cell_3/kernel:0', 'sequential/bidirectional_3/forward_rnn_3/peephole_lstm_cell_3/recurrent_kernel:0', 'sequential/bidirectional_3/forward_rnn_3/peephole_lstm_cell_3/bias:0', 'sequential/bidirectional_3/forward_rnn_3/peephole_lstm_cell_3/input_gate_peephole_weights:0', 'sequential/bidirectional_3/forward_rnn_3/peephole_lstm_cell_3/forget_gate_peephole_weights:0', 'sequential/bidirectional_3/forward_rnn_3/peephole_lstm_cell_3/output_gate_peephole_weights:0', 'sequential/bidirectional_3/backward_rnn_3/peephole_lstm_cell_3/kernel:0', 'sequential/bidirectional_3/backward_rnn_3/peephole_lstm_cell_3/recurrent_kernel:0', 'sequential/bidirectional_3/backward_rnn_3/peephole_lstm_cell_3/bias:0', 'sequential/bidirectional_3/backward_rnn_3/peephole_lstm_cell_3/input_gate_peephole_weights:0', 'sequential/bidirectional_3/backward_rnn_3/peephole_lstm_cell_3/forget_gate_peephole_weights:0', 'sequential/bidirectional_3/backward_rnn_3/peephole_lstm_cell_3/output_gate_peephole_weights:0', 'sequential/time_distributed/kernel:0', 'sequential/time_distributed/bias:0'].


10.May 2020 03:19:21 model training error
name 'modified_mape' is not defined
Traceback (most recent call last):
  File ".\_2_train.py", line 173, in train
    losses_list.append(modified_mape)
NameError: name 'modified_mape' is not defined

10.May 2020 03:22:38 correct LSTM model creation and compilation

10.May 2020 03:22:38 correct LSTM model creation and compilation

10.May 2020 03:22:38 correct LSTM model creation and compilation

10.May 2020 03:22:40 model training error
in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:466 train_step  **
        loss = self.compiled_loss(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:204 __call__
        loss_value = loss_obj(y_t, y_p, sample_weight=sw)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\losses.py:143 __call__
        losses = self.call(y_true, y_pred)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\losses.py:246 call
        return self.fn(y_true, y_pred, **self._fn_kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\losses.py:94 __init__
        losses_utils.ReductionV2.validate(reduction)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\losses\loss_reduction.py:67 validate
        if key not in cls.all():
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\math_ops.py:1491 tensor_equals
        return gen_math_ops.equal(self, other, incompatible_shape_error=False)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\gen_math_ops.py:3222 equal
        _, _, _op, _outputs = _op_def_library._apply_op_helper(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\op_def_library.py:475 _apply_op_helper
        raise TypeError(

    TypeError: Expected float32 passed to parameter 'y' of op 'Equal', got 'auto' of type 'str' instead. Error: Expected float32, got 'auto' of type 'str' instead.
Traceback (most recent call last):
  File ".\_2_train.py", line 387, in train
    forecaster.fit(x_train, y_train, batch_size=batch_size, epochs=epochs, workers=workers,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 66, in _method_wrapper
    return method(self, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 785, in fit
    tmp_logs = train_function(iterator)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 580, in __call__
    result = self._call(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 627, in _call
    self._initialize(args, kwds, add_initializers_to=initializers)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 505, in _initialize
    self._stateful_fn._get_concrete_function_internal_garbage_collected(  # pylint: disable=protected-access
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2446, in _get_concrete_function_internal_garbage_collected
    graph_function, _, _ = self._maybe_define_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2777, in _maybe_define_function
    graph_function = self._create_graph_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2657, in _create_graph_function
    func_graph_module.func_graph_from_py_func(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 981, in func_graph_from_py_func
    func_outputs = python_func(*func_args, **func_kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 441, in wrapped_fn
    return weak_wrapped_fn().__wrapped__(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 968, in wrapper
    raise e.ag_error_metadata.to_exception(e)
TypeError: in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:466 train_step  **
        loss = self.compiled_loss(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:204 __call__
        loss_value = loss_obj(y_t, y_p, sample_weight=sw)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\losses.py:143 __call__
        losses = self.call(y_true, y_pred)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\losses.py:246 call
        return self.fn(y_true, y_pred, **self._fn_kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\losses.py:94 __init__
        losses_utils.ReductionV2.validate(reduction)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\losses\loss_reduction.py:67 validate
        if key not in cls.all():
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\math_ops.py:1491 tensor_equals
        return gen_math_ops.equal(self, other, incompatible_shape_error=False)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\gen_math_ops.py:3222 equal
        _, _, _op, _outputs = _op_def_library._apply_op_helper(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\op_def_library.py:475 _apply_op_helper
        raise TypeError(

    TypeError: Expected float32 passed to parameter 'y' of op 'Equal', got 'auto' of type 'str' instead. Error: Expected float32, got 'auto' of type 'str' instead.


10.May 2020 03:26:47 correct LSTM model creation and compilation

10.May 2020 03:26:47 correct LSTM model creation and compilation

10.May 2020 03:26:47 correct LSTM model creation and compilation

10.May 2020 03:26:48 model training error
in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:466 train_step  **
        loss = self.compiled_loss(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:204 __call__
        loss_value = loss_obj(y_t, y_p, sample_weight=sw)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\losses.py:143 __call__
        losses = self.call(y_true, y_pred)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\losses.py:246 call
        return self.fn(y_true, y_pred, **self._fn_kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\losses.py:94 __init__
        losses_utils.ReductionV2.validate(reduction)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\losses\loss_reduction.py:67 validate
        if key not in cls.all():
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\math_ops.py:1491 tensor_equals
        return gen_math_ops.equal(self, other, incompatible_shape_error=False)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\gen_math_ops.py:3222 equal
        _, _, _op, _outputs = _op_def_library._apply_op_helper(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\op_def_library.py:475 _apply_op_helper
        raise TypeError(

    TypeError: Expected float32 passed to parameter 'y' of op 'Equal', got 'auto' of type 'str' instead. Error: Expected float32, got 'auto' of type 'str' instead.
Traceback (most recent call last):
  File ".\_2_train.py", line 385, in train
    forecaster.fit(x_train, y_train, batch_size=batch_size, epochs=epochs, workers=workers,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 66, in _method_wrapper
    return method(self, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 785, in fit
    tmp_logs = train_function(iterator)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 580, in __call__
    result = self._call(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 627, in _call
    self._initialize(args, kwds, add_initializers_to=initializers)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 505, in _initialize
    self._stateful_fn._get_concrete_function_internal_garbage_collected(  # pylint: disable=protected-access
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2446, in _get_concrete_function_internal_garbage_collected
    graph_function, _, _ = self._maybe_define_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2777, in _maybe_define_function
    graph_function = self._create_graph_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2657, in _create_graph_function
    func_graph_module.func_graph_from_py_func(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 981, in func_graph_from_py_func
    func_outputs = python_func(*func_args, **func_kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 441, in wrapped_fn
    return weak_wrapped_fn().__wrapped__(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 968, in wrapper
    raise e.ag_error_metadata.to_exception(e)
TypeError: in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:466 train_step  **
        loss = self.compiled_loss(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:204 __call__
        loss_value = loss_obj(y_t, y_p, sample_weight=sw)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\losses.py:143 __call__
        losses = self.call(y_true, y_pred)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\losses.py:246 call
        return self.fn(y_true, y_pred, **self._fn_kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\losses.py:94 __init__
        losses_utils.ReductionV2.validate(reduction)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\losses\loss_reduction.py:67 validate
        if key not in cls.all():
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\math_ops.py:1491 tensor_equals
        return gen_math_ops.equal(self, other, incompatible_shape_error=False)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\gen_math_ops.py:3222 equal
        _, _, _op, _outputs = _op_def_library._apply_op_helper(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\op_def_library.py:475 _apply_op_helper
        raise TypeError(

    TypeError: Expected float32 passed to parameter 'y' of op 'Equal', got 'auto' of type 'str' instead. Error: Expected float32, got 'auto' of type 'str' instead.


10.May 2020 03:29:06 correct LSTM model creation and compilation

10.May 2020 03:29:06 correct LSTM model creation and compilation

10.May 2020 03:29:06 correct LSTM model creation and compilation

10.May 2020 03:29:08 model training error
in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:474 train_step  **
        _minimize(self.distribute_strategy, tape, self.optimizer, loss,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:1740 _minimize
        gradients = optimizer._aggregate_gradients(zip(gradients,  # pylint: disable=protected-access
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\optimizer_v2\optimizer_v2.py:525 _aggregate_gradients
        filtered_grads_and_vars = _filter_grads(grads_and_vars)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\optimizer_v2\optimizer_v2.py:1202 _filter_grads
        raise ValueError("No gradients provided for any variable: %s." %

    ValueError: No gradients provided for any variable: ['sequential/bidirectional/forward_rnn/peephole_lstm_cell/kernel:0', 'sequential/bidirectional/forward_rnn/peephole_lstm_cell/recurrent_kernel:0', 'sequential/bidirectional/forward_rnn/peephole_lstm_cell/bias:0', 'sequential/bidirectional/forward_rnn/peephole_lstm_cell/input_gate_peephole_weights:0', 'sequential/bidirectional/forward_rnn/peephole_lstm_cell/forget_gate_peephole_weights:0', 'sequential/bidirectional/forward_rnn/peephole_lstm_cell/output_gate_peephole_weights:0', 'sequential/bidirectional/backward_rnn/peephole_lstm_cell/kernel:0', 'sequential/bidirectional/backward_rnn/peephole_lstm_cell/recurrent_kernel:0', 'sequential/bidirectional/backward_rnn/peephole_lstm_cell/bias:0', 'sequential/bidirectional/backward_rnn/peephole_lstm_cell/input_gate_peephole_weights:0', 'sequential/bidirectional/backward_rnn/peephole_lstm_cell/forget_gate_peephole_weights:0', 'sequential/bidirectional/backward_rnn/peephole_lstm_cell/output_gate_peephole_weights:0', 'sequential/bidirectional_1/forward_rnn_1/peephole_lstm_cell_1/kernel:0', 'sequential/bidirectional_1/forward_rnn_1/peephole_lstm_cell_1/recurrent_kernel:0', 'sequential/bidirectional_1/forward_rnn_1/peephole_lstm_cell_1/bias:0', 'sequential/bidirectional_1/forward_rnn_1/peephole_lstm_cell_1/input_gate_peephole_weights:0', 'sequential/bidirectional_1/forward_rnn_1/peephole_lstm_cell_1/forget_gate_peephole_weights:0', 'sequential/bidirectional_1/forward_rnn_1/peephole_lstm_cell_1/output_gate_peephole_weights:0', 'sequential/bidirectional_1/backward_rnn_1/peephole_lstm_cell_1/kernel:0', 'sequential/bidirectional_1/backward_rnn_1/peephole_lstm_cell_1/recurrent_kernel:0', 'sequential/bidirectional_1/backward_rnn_1/peephole_lstm_cell_1/bias:0', 'sequential/bidirectional_1/backward_rnn_1/peephole_lstm_cell_1/input_gate_peephole_weights:0', 'sequential/bidirectional_1/backward_rnn_1/peephole_lstm_cell_1/forget_gate_peephole_weights:0', 'sequential/bidirectional_1/backward_rnn_1/peephole_lstm_cell_1/output_gate_peephole_weights:0', 'sequential/bidirectional_2/forward_rnn_2/peephole_lstm_cell_2/kernel:0', 'sequential/bidirectional_2/forward_rnn_2/peephole_lstm_cell_2/recurrent_kernel:0', 'sequential/bidirectional_2/forward_rnn_2/peephole_lstm_cell_2/bias:0', 'sequential/bidirectional_2/forward_rnn_2/peephole_lstm_cell_2/input_gate_peephole_weights:0', 'sequential/bidirectional_2/forward_rnn_2/peephole_lstm_cell_2/forget_gate_peephole_weights:0', 'sequential/bidirectional_2/forward_rnn_2/peephole_lstm_cell_2/output_gate_peephole_weights:0', 'sequential/bidirectional_2/backward_rnn_2/peephole_lstm_cell_2/kernel:0', 'sequential/bidirectional_2/backward_rnn_2/peephole_lstm_cell_2/recurrent_kernel:0', 'sequential/bidirectional_2/backward_rnn_2/peephole_lstm_cell_2/bias:0', 'sequential/bidirectional_2/backward_rnn_2/peephole_lstm_cell_2/input_gate_peephole_weights:0', 'sequential/bidirectional_2/backward_rnn_2/peephole_lstm_cell_2/forget_gate_peephole_weights:0', 'sequential/bidirectional_2/backward_rnn_2/peephole_lstm_cell_2/output_gate_peephole_weights:0', 'sequential/bidirectional_3/forward_rnn_3/peephole_lstm_cell_3/kernel:0', 'sequential/bidirectional_3/forward_rnn_3/peephole_lstm_cell_3/recurrent_kernel:0', 'sequential/bidirectional_3/forward_rnn_3/peephole_lstm_cell_3/bias:0', 'sequential/bidirectional_3/forward_rnn_3/peephole_lstm_cell_3/input_gate_peephole_weights:0', 'sequential/bidirectional_3/forward_rnn_3/peephole_lstm_cell_3/forget_gate_peephole_weights:0', 'sequential/bidirectional_3/forward_rnn_3/peephole_lstm_cell_3/output_gate_peephole_weights:0', 'sequential/bidirectional_3/backward_rnn_3/peephole_lstm_cell_3/kernel:0', 'sequential/bidirectional_3/backward_rnn_3/peephole_lstm_cell_3/recurrent_kernel:0', 'sequential/bidirectional_3/backward_rnn_3/peephole_lstm_cell_3/bias:0', 'sequential/bidirectional_3/backward_rnn_3/peephole_lstm_cell_3/input_gate_peephole_weights:0', 'sequential/bidirectional_3/backward_rnn_3/peephole_lstm_cell_3/forget_gate_peephole_weights:0', 'sequential/bidirectional_3/backward_rnn_3/peephole_lstm_cell_3/output_gate_peephole_weights:0', 'sequential/time_distributed/kernel:0', 'sequential/time_distributed/bias:0'].
Traceback (most recent call last):
  File ".\_2_train.py", line 385, in train
    forecaster.fit(x_train, y_train, batch_size=batch_size, epochs=epochs, workers=workers,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 66, in _method_wrapper
    return method(self, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 785, in fit
    tmp_logs = train_function(iterator)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 580, in __call__
    result = self._call(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 627, in _call
    self._initialize(args, kwds, add_initializers_to=initializers)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 505, in _initialize
    self._stateful_fn._get_concrete_function_internal_garbage_collected(  # pylint: disable=protected-access
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2446, in _get_concrete_function_internal_garbage_collected
    graph_function, _, _ = self._maybe_define_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2777, in _maybe_define_function
    graph_function = self._create_graph_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2657, in _create_graph_function
    func_graph_module.func_graph_from_py_func(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 981, in func_graph_from_py_func
    func_outputs = python_func(*func_args, **func_kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 441, in wrapped_fn
    return weak_wrapped_fn().__wrapped__(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 968, in wrapper
    raise e.ag_error_metadata.to_exception(e)
ValueError: in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:474 train_step  **
        _minimize(self.distribute_strategy, tape, self.optimizer, loss,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:1740 _minimize
        gradients = optimizer._aggregate_gradients(zip(gradients,  # pylint: disable=protected-access
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\optimizer_v2\optimizer_v2.py:525 _aggregate_gradients
        filtered_grads_and_vars = _filter_grads(grads_and_vars)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\optimizer_v2\optimizer_v2.py:1202 _filter_grads
        raise ValueError("No gradients provided for any variable: %s." %

    ValueError: No gradients provided for any variable: ['sequential/bidirectional/forward_rnn/peephole_lstm_cell/kernel:0', 'sequential/bidirectional/forward_rnn/peephole_lstm_cell/recurrent_kernel:0', 'sequential/bidirectional/forward_rnn/peephole_lstm_cell/bias:0', 'sequential/bidirectional/forward_rnn/peephole_lstm_cell/input_gate_peephole_weights:0', 'sequential/bidirectional/forward_rnn/peephole_lstm_cell/forget_gate_peephole_weights:0', 'sequential/bidirectional/forward_rnn/peephole_lstm_cell/output_gate_peephole_weights:0', 'sequential/bidirectional/backward_rnn/peephole_lstm_cell/kernel:0', 'sequential/bidirectional/backward_rnn/peephole_lstm_cell/recurrent_kernel:0', 'sequential/bidirectional/backward_rnn/peephole_lstm_cell/bias:0', 'sequential/bidirectional/backward_rnn/peephole_lstm_cell/input_gate_peephole_weights:0', 'sequential/bidirectional/backward_rnn/peephole_lstm_cell/forget_gate_peephole_weights:0', 'sequential/bidirectional/backward_rnn/peephole_lstm_cell/output_gate_peephole_weights:0', 'sequential/bidirectional_1/forward_rnn_1/peephole_lstm_cell_1/kernel:0', 'sequential/bidirectional_1/forward_rnn_1/peephole_lstm_cell_1/recurrent_kernel:0', 'sequential/bidirectional_1/forward_rnn_1/peephole_lstm_cell_1/bias:0', 'sequential/bidirectional_1/forward_rnn_1/peephole_lstm_cell_1/input_gate_peephole_weights:0', 'sequential/bidirectional_1/forward_rnn_1/peephole_lstm_cell_1/forget_gate_peephole_weights:0', 'sequential/bidirectional_1/forward_rnn_1/peephole_lstm_cell_1/output_gate_peephole_weights:0', 'sequential/bidirectional_1/backward_rnn_1/peephole_lstm_cell_1/kernel:0', 'sequential/bidirectional_1/backward_rnn_1/peephole_lstm_cell_1/recurrent_kernel:0', 'sequential/bidirectional_1/backward_rnn_1/peephole_lstm_cell_1/bias:0', 'sequential/bidirectional_1/backward_rnn_1/peephole_lstm_cell_1/input_gate_peephole_weights:0', 'sequential/bidirectional_1/backward_rnn_1/peephole_lstm_cell_1/forget_gate_peephole_weights:0', 'sequential/bidirectional_1/backward_rnn_1/peephole_lstm_cell_1/output_gate_peephole_weights:0', 'sequential/bidirectional_2/forward_rnn_2/peephole_lstm_cell_2/kernel:0', 'sequential/bidirectional_2/forward_rnn_2/peephole_lstm_cell_2/recurrent_kernel:0', 'sequential/bidirectional_2/forward_rnn_2/peephole_lstm_cell_2/bias:0', 'sequential/bidirectional_2/forward_rnn_2/peephole_lstm_cell_2/input_gate_peephole_weights:0', 'sequential/bidirectional_2/forward_rnn_2/peephole_lstm_cell_2/forget_gate_peephole_weights:0', 'sequential/bidirectional_2/forward_rnn_2/peephole_lstm_cell_2/output_gate_peephole_weights:0', 'sequential/bidirectional_2/backward_rnn_2/peephole_lstm_cell_2/kernel:0', 'sequential/bidirectional_2/backward_rnn_2/peephole_lstm_cell_2/recurrent_kernel:0', 'sequential/bidirectional_2/backward_rnn_2/peephole_lstm_cell_2/bias:0', 'sequential/bidirectional_2/backward_rnn_2/peephole_lstm_cell_2/input_gate_peephole_weights:0', 'sequential/bidirectional_2/backward_rnn_2/peephole_lstm_cell_2/forget_gate_peephole_weights:0', 'sequential/bidirectional_2/backward_rnn_2/peephole_lstm_cell_2/output_gate_peephole_weights:0', 'sequential/bidirectional_3/forward_rnn_3/peephole_lstm_cell_3/kernel:0', 'sequential/bidirectional_3/forward_rnn_3/peephole_lstm_cell_3/recurrent_kernel:0', 'sequential/bidirectional_3/forward_rnn_3/peephole_lstm_cell_3/bias:0', 'sequential/bidirectional_3/forward_rnn_3/peephole_lstm_cell_3/input_gate_peephole_weights:0', 'sequential/bidirectional_3/forward_rnn_3/peephole_lstm_cell_3/forget_gate_peephole_weights:0', 'sequential/bidirectional_3/forward_rnn_3/peephole_lstm_cell_3/output_gate_peephole_weights:0', 'sequential/bidirectional_3/backward_rnn_3/peephole_lstm_cell_3/kernel:0', 'sequential/bidirectional_3/backward_rnn_3/peephole_lstm_cell_3/recurrent_kernel:0', 'sequential/bidirectional_3/backward_rnn_3/peephole_lstm_cell_3/bias:0', 'sequential/bidirectional_3/backward_rnn_3/peephole_lstm_cell_3/input_gate_peephole_weights:0', 'sequential/bidirectional_3/backward_rnn_3/peephole_lstm_cell_3/forget_gate_peephole_weights:0', 'sequential/bidirectional_3/backward_rnn_3/peephole_lstm_cell_3/output_gate_peephole_weights:0', 'sequential/time_distributed/kernel:0', 'sequential/time_distributed/bias:0'].


10.May 2020 03:30:04 correct LSTM model creation and compilation

10.May 2020 03:30:04 correct LSTM model creation and compilation

10.May 2020 03:30:04 correct LSTM model creation and compilation

10.May 2020 03:30:06 model training error
in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:474 train_step  **
        _minimize(self.distribute_strategy, tape, self.optimizer, loss,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:1740 _minimize
        gradients = optimizer._aggregate_gradients(zip(gradients,  # pylint: disable=protected-access
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\optimizer_v2\optimizer_v2.py:525 _aggregate_gradients
        filtered_grads_and_vars = _filter_grads(grads_and_vars)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\optimizer_v2\optimizer_v2.py:1202 _filter_grads
        raise ValueError("No gradients provided for any variable: %s." %

    ValueError: No gradients provided for any variable: ['sequential/bidirectional/forward_rnn/peephole_lstm_cell/kernel:0', 'sequential/bidirectional/forward_rnn/peephole_lstm_cell/recurrent_kernel:0', 'sequential/bidirectional/forward_rnn/peephole_lstm_cell/bias:0', 'sequential/bidirectional/forward_rnn/peephole_lstm_cell/input_gate_peephole_weights:0', 'sequential/bidirectional/forward_rnn/peephole_lstm_cell/forget_gate_peephole_weights:0', 'sequential/bidirectional/forward_rnn/peephole_lstm_cell/output_gate_peephole_weights:0', 'sequential/bidirectional/backward_rnn/peephole_lstm_cell/kernel:0', 'sequential/bidirectional/backward_rnn/peephole_lstm_cell/recurrent_kernel:0', 'sequential/bidirectional/backward_rnn/peephole_lstm_cell/bias:0', 'sequential/bidirectional/backward_rnn/peephole_lstm_cell/input_gate_peephole_weights:0', 'sequential/bidirectional/backward_rnn/peephole_lstm_cell/forget_gate_peephole_weights:0', 'sequential/bidirectional/backward_rnn/peephole_lstm_cell/output_gate_peephole_weights:0', 'sequential/bidirectional_1/forward_rnn_1/peephole_lstm_cell_1/kernel:0', 'sequential/bidirectional_1/forward_rnn_1/peephole_lstm_cell_1/recurrent_kernel:0', 'sequential/bidirectional_1/forward_rnn_1/peephole_lstm_cell_1/bias:0', 'sequential/bidirectional_1/forward_rnn_1/peephole_lstm_cell_1/input_gate_peephole_weights:0', 'sequential/bidirectional_1/forward_rnn_1/peephole_lstm_cell_1/forget_gate_peephole_weights:0', 'sequential/bidirectional_1/forward_rnn_1/peephole_lstm_cell_1/output_gate_peephole_weights:0', 'sequential/bidirectional_1/backward_rnn_1/peephole_lstm_cell_1/kernel:0', 'sequential/bidirectional_1/backward_rnn_1/peephole_lstm_cell_1/recurrent_kernel:0', 'sequential/bidirectional_1/backward_rnn_1/peephole_lstm_cell_1/bias:0', 'sequential/bidirectional_1/backward_rnn_1/peephole_lstm_cell_1/input_gate_peephole_weights:0', 'sequential/bidirectional_1/backward_rnn_1/peephole_lstm_cell_1/forget_gate_peephole_weights:0', 'sequential/bidirectional_1/backward_rnn_1/peephole_lstm_cell_1/output_gate_peephole_weights:0', 'sequential/bidirectional_2/forward_rnn_2/peephole_lstm_cell_2/kernel:0', 'sequential/bidirectional_2/forward_rnn_2/peephole_lstm_cell_2/recurrent_kernel:0', 'sequential/bidirectional_2/forward_rnn_2/peephole_lstm_cell_2/bias:0', 'sequential/bidirectional_2/forward_rnn_2/peephole_lstm_cell_2/input_gate_peephole_weights:0', 'sequential/bidirectional_2/forward_rnn_2/peephole_lstm_cell_2/forget_gate_peephole_weights:0', 'sequential/bidirectional_2/forward_rnn_2/peephole_lstm_cell_2/output_gate_peephole_weights:0', 'sequential/bidirectional_2/backward_rnn_2/peephole_lstm_cell_2/kernel:0', 'sequential/bidirectional_2/backward_rnn_2/peephole_lstm_cell_2/recurrent_kernel:0', 'sequential/bidirectional_2/backward_rnn_2/peephole_lstm_cell_2/bias:0', 'sequential/bidirectional_2/backward_rnn_2/peephole_lstm_cell_2/input_gate_peephole_weights:0', 'sequential/bidirectional_2/backward_rnn_2/peephole_lstm_cell_2/forget_gate_peephole_weights:0', 'sequential/bidirectional_2/backward_rnn_2/peephole_lstm_cell_2/output_gate_peephole_weights:0', 'sequential/bidirectional_3/forward_rnn_3/peephole_lstm_cell_3/kernel:0', 'sequential/bidirectional_3/forward_rnn_3/peephole_lstm_cell_3/recurrent_kernel:0', 'sequential/bidirectional_3/forward_rnn_3/peephole_lstm_cell_3/bias:0', 'sequential/bidirectional_3/forward_rnn_3/peephole_lstm_cell_3/input_gate_peephole_weights:0', 'sequential/bidirectional_3/forward_rnn_3/peephole_lstm_cell_3/forget_gate_peephole_weights:0', 'sequential/bidirectional_3/forward_rnn_3/peephole_lstm_cell_3/output_gate_peephole_weights:0', 'sequential/bidirectional_3/backward_rnn_3/peephole_lstm_cell_3/kernel:0', 'sequential/bidirectional_3/backward_rnn_3/peephole_lstm_cell_3/recurrent_kernel:0', 'sequential/bidirectional_3/backward_rnn_3/peephole_lstm_cell_3/bias:0', 'sequential/bidirectional_3/backward_rnn_3/peephole_lstm_cell_3/input_gate_peephole_weights:0', 'sequential/bidirectional_3/backward_rnn_3/peephole_lstm_cell_3/forget_gate_peephole_weights:0', 'sequential/bidirectional_3/backward_rnn_3/peephole_lstm_cell_3/output_gate_peephole_weights:0', 'sequential/time_distributed/kernel:0', 'sequential/time_distributed/bias:0'].
Traceback (most recent call last):
  File ".\_2_train.py", line 387, in train
    forecaster.fit(x_train, y_train, batch_size=batch_size, epochs=epochs, workers=workers,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 66, in _method_wrapper
    return method(self, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 785, in fit
    tmp_logs = train_function(iterator)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 580, in __call__
    result = self._call(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 627, in _call
    self._initialize(args, kwds, add_initializers_to=initializers)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 505, in _initialize
    self._stateful_fn._get_concrete_function_internal_garbage_collected(  # pylint: disable=protected-access
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2446, in _get_concrete_function_internal_garbage_collected
    graph_function, _, _ = self._maybe_define_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2777, in _maybe_define_function
    graph_function = self._create_graph_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2657, in _create_graph_function
    func_graph_module.func_graph_from_py_func(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 981, in func_graph_from_py_func
    func_outputs = python_func(*func_args, **func_kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 441, in wrapped_fn
    return weak_wrapped_fn().__wrapped__(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 968, in wrapper
    raise e.ag_error_metadata.to_exception(e)
ValueError: in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:474 train_step  **
        _minimize(self.distribute_strategy, tape, self.optimizer, loss,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:1740 _minimize
        gradients = optimizer._aggregate_gradients(zip(gradients,  # pylint: disable=protected-access
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\optimizer_v2\optimizer_v2.py:525 _aggregate_gradients
        filtered_grads_and_vars = _filter_grads(grads_and_vars)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\optimizer_v2\optimizer_v2.py:1202 _filter_grads
        raise ValueError("No gradients provided for any variable: %s." %

    ValueError: No gradients provided for any variable: ['sequential/bidirectional/forward_rnn/peephole_lstm_cell/kernel:0', 'sequential/bidirectional/forward_rnn/peephole_lstm_cell/recurrent_kernel:0', 'sequential/bidirectional/forward_rnn/peephole_lstm_cell/bias:0', 'sequential/bidirectional/forward_rnn/peephole_lstm_cell/input_gate_peephole_weights:0', 'sequential/bidirectional/forward_rnn/peephole_lstm_cell/forget_gate_peephole_weights:0', 'sequential/bidirectional/forward_rnn/peephole_lstm_cell/output_gate_peephole_weights:0', 'sequential/bidirectional/backward_rnn/peephole_lstm_cell/kernel:0', 'sequential/bidirectional/backward_rnn/peephole_lstm_cell/recurrent_kernel:0', 'sequential/bidirectional/backward_rnn/peephole_lstm_cell/bias:0', 'sequential/bidirectional/backward_rnn/peephole_lstm_cell/input_gate_peephole_weights:0', 'sequential/bidirectional/backward_rnn/peephole_lstm_cell/forget_gate_peephole_weights:0', 'sequential/bidirectional/backward_rnn/peephole_lstm_cell/output_gate_peephole_weights:0', 'sequential/bidirectional_1/forward_rnn_1/peephole_lstm_cell_1/kernel:0', 'sequential/bidirectional_1/forward_rnn_1/peephole_lstm_cell_1/recurrent_kernel:0', 'sequential/bidirectional_1/forward_rnn_1/peephole_lstm_cell_1/bias:0', 'sequential/bidirectional_1/forward_rnn_1/peephole_lstm_cell_1/input_gate_peephole_weights:0', 'sequential/bidirectional_1/forward_rnn_1/peephole_lstm_cell_1/forget_gate_peephole_weights:0', 'sequential/bidirectional_1/forward_rnn_1/peephole_lstm_cell_1/output_gate_peephole_weights:0', 'sequential/bidirectional_1/backward_rnn_1/peephole_lstm_cell_1/kernel:0', 'sequential/bidirectional_1/backward_rnn_1/peephole_lstm_cell_1/recurrent_kernel:0', 'sequential/bidirectional_1/backward_rnn_1/peephole_lstm_cell_1/bias:0', 'sequential/bidirectional_1/backward_rnn_1/peephole_lstm_cell_1/input_gate_peephole_weights:0', 'sequential/bidirectional_1/backward_rnn_1/peephole_lstm_cell_1/forget_gate_peephole_weights:0', 'sequential/bidirectional_1/backward_rnn_1/peephole_lstm_cell_1/output_gate_peephole_weights:0', 'sequential/bidirectional_2/forward_rnn_2/peephole_lstm_cell_2/kernel:0', 'sequential/bidirectional_2/forward_rnn_2/peephole_lstm_cell_2/recurrent_kernel:0', 'sequential/bidirectional_2/forward_rnn_2/peephole_lstm_cell_2/bias:0', 'sequential/bidirectional_2/forward_rnn_2/peephole_lstm_cell_2/input_gate_peephole_weights:0', 'sequential/bidirectional_2/forward_rnn_2/peephole_lstm_cell_2/forget_gate_peephole_weights:0', 'sequential/bidirectional_2/forward_rnn_2/peephole_lstm_cell_2/output_gate_peephole_weights:0', 'sequential/bidirectional_2/backward_rnn_2/peephole_lstm_cell_2/kernel:0', 'sequential/bidirectional_2/backward_rnn_2/peephole_lstm_cell_2/recurrent_kernel:0', 'sequential/bidirectional_2/backward_rnn_2/peephole_lstm_cell_2/bias:0', 'sequential/bidirectional_2/backward_rnn_2/peephole_lstm_cell_2/input_gate_peephole_weights:0', 'sequential/bidirectional_2/backward_rnn_2/peephole_lstm_cell_2/forget_gate_peephole_weights:0', 'sequential/bidirectional_2/backward_rnn_2/peephole_lstm_cell_2/output_gate_peephole_weights:0', 'sequential/bidirectional_3/forward_rnn_3/peephole_lstm_cell_3/kernel:0', 'sequential/bidirectional_3/forward_rnn_3/peephole_lstm_cell_3/recurrent_kernel:0', 'sequential/bidirectional_3/forward_rnn_3/peephole_lstm_cell_3/bias:0', 'sequential/bidirectional_3/forward_rnn_3/peephole_lstm_cell_3/input_gate_peephole_weights:0', 'sequential/bidirectional_3/forward_rnn_3/peephole_lstm_cell_3/forget_gate_peephole_weights:0', 'sequential/bidirectional_3/forward_rnn_3/peephole_lstm_cell_3/output_gate_peephole_weights:0', 'sequential/bidirectional_3/backward_rnn_3/peephole_lstm_cell_3/kernel:0', 'sequential/bidirectional_3/backward_rnn_3/peephole_lstm_cell_3/recurrent_kernel:0', 'sequential/bidirectional_3/backward_rnn_3/peephole_lstm_cell_3/bias:0', 'sequential/bidirectional_3/backward_rnn_3/peephole_lstm_cell_3/input_gate_peephole_weights:0', 'sequential/bidirectional_3/backward_rnn_3/peephole_lstm_cell_3/forget_gate_peephole_weights:0', 'sequential/bidirectional_3/backward_rnn_3/peephole_lstm_cell_3/output_gate_peephole_weights:0', 'sequential/time_distributed/kernel:0', 'sequential/time_distributed/bias:0'].


10.May 2020 03:31:37 correct LSTM model creation and compilation

10.May 2020 03:31:37 correct LSTM model creation and compilation

10.May 2020 03:31:37 correct LSTM model creation and compilation

10.May 2020 03:31:39 model training error
in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:474 train_step  **
        _minimize(self.distribute_strategy, tape, self.optimizer, loss,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:1740 _minimize
        gradients = optimizer._aggregate_gradients(zip(gradients,  # pylint: disable=protected-access
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\optimizer_v2\optimizer_v2.py:525 _aggregate_gradients
        filtered_grads_and_vars = _filter_grads(grads_and_vars)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\optimizer_v2\optimizer_v2.py:1202 _filter_grads
        raise ValueError("No gradients provided for any variable: %s." %

    ValueError: No gradients provided for any variable: ['sequential/bidirectional/forward_rnn/peephole_lstm_cell/kernel:0', 'sequential/bidirectional/forward_rnn/peephole_lstm_cell/recurrent_kernel:0', 'sequential/bidirectional/forward_rnn/peephole_lstm_cell/bias:0', 'sequential/bidirectional/forward_rnn/peephole_lstm_cell/input_gate_peephole_weights:0', 'sequential/bidirectional/forward_rnn/peephole_lstm_cell/forget_gate_peephole_weights:0', 'sequential/bidirectional/forward_rnn/peephole_lstm_cell/output_gate_peephole_weights:0', 'sequential/bidirectional/backward_rnn/peephole_lstm_cell/kernel:0', 'sequential/bidirectional/backward_rnn/peephole_lstm_cell/recurrent_kernel:0', 'sequential/bidirectional/backward_rnn/peephole_lstm_cell/bias:0', 'sequential/bidirectional/backward_rnn/peephole_lstm_cell/input_gate_peephole_weights:0', 'sequential/bidirectional/backward_rnn/peephole_lstm_cell/forget_gate_peephole_weights:0', 'sequential/bidirectional/backward_rnn/peephole_lstm_cell/output_gate_peephole_weights:0', 'sequential/bidirectional_1/forward_rnn_1/peephole_lstm_cell_1/kernel:0', 'sequential/bidirectional_1/forward_rnn_1/peephole_lstm_cell_1/recurrent_kernel:0', 'sequential/bidirectional_1/forward_rnn_1/peephole_lstm_cell_1/bias:0', 'sequential/bidirectional_1/forward_rnn_1/peephole_lstm_cell_1/input_gate_peephole_weights:0', 'sequential/bidirectional_1/forward_rnn_1/peephole_lstm_cell_1/forget_gate_peephole_weights:0', 'sequential/bidirectional_1/forward_rnn_1/peephole_lstm_cell_1/output_gate_peephole_weights:0', 'sequential/bidirectional_1/backward_rnn_1/peephole_lstm_cell_1/kernel:0', 'sequential/bidirectional_1/backward_rnn_1/peephole_lstm_cell_1/recurrent_kernel:0', 'sequential/bidirectional_1/backward_rnn_1/peephole_lstm_cell_1/bias:0', 'sequential/bidirectional_1/backward_rnn_1/peephole_lstm_cell_1/input_gate_peephole_weights:0', 'sequential/bidirectional_1/backward_rnn_1/peephole_lstm_cell_1/forget_gate_peephole_weights:0', 'sequential/bidirectional_1/backward_rnn_1/peephole_lstm_cell_1/output_gate_peephole_weights:0', 'sequential/bidirectional_2/forward_rnn_2/peephole_lstm_cell_2/kernel:0', 'sequential/bidirectional_2/forward_rnn_2/peephole_lstm_cell_2/recurrent_kernel:0', 'sequential/bidirectional_2/forward_rnn_2/peephole_lstm_cell_2/bias:0', 'sequential/bidirectional_2/forward_rnn_2/peephole_lstm_cell_2/input_gate_peephole_weights:0', 'sequential/bidirectional_2/forward_rnn_2/peephole_lstm_cell_2/forget_gate_peephole_weights:0', 'sequential/bidirectional_2/forward_rnn_2/peephole_lstm_cell_2/output_gate_peephole_weights:0', 'sequential/bidirectional_2/backward_rnn_2/peephole_lstm_cell_2/kernel:0', 'sequential/bidirectional_2/backward_rnn_2/peephole_lstm_cell_2/recurrent_kernel:0', 'sequential/bidirectional_2/backward_rnn_2/peephole_lstm_cell_2/bias:0', 'sequential/bidirectional_2/backward_rnn_2/peephole_lstm_cell_2/input_gate_peephole_weights:0', 'sequential/bidirectional_2/backward_rnn_2/peephole_lstm_cell_2/forget_gate_peephole_weights:0', 'sequential/bidirectional_2/backward_rnn_2/peephole_lstm_cell_2/output_gate_peephole_weights:0', 'sequential/bidirectional_3/forward_rnn_3/peephole_lstm_cell_3/kernel:0', 'sequential/bidirectional_3/forward_rnn_3/peephole_lstm_cell_3/recurrent_kernel:0', 'sequential/bidirectional_3/forward_rnn_3/peephole_lstm_cell_3/bias:0', 'sequential/bidirectional_3/forward_rnn_3/peephole_lstm_cell_3/input_gate_peephole_weights:0', 'sequential/bidirectional_3/forward_rnn_3/peephole_lstm_cell_3/forget_gate_peephole_weights:0', 'sequential/bidirectional_3/forward_rnn_3/peephole_lstm_cell_3/output_gate_peephole_weights:0', 'sequential/bidirectional_3/backward_rnn_3/peephole_lstm_cell_3/kernel:0', 'sequential/bidirectional_3/backward_rnn_3/peephole_lstm_cell_3/recurrent_kernel:0', 'sequential/bidirectional_3/backward_rnn_3/peephole_lstm_cell_3/bias:0', 'sequential/bidirectional_3/backward_rnn_3/peephole_lstm_cell_3/input_gate_peephole_weights:0', 'sequential/bidirectional_3/backward_rnn_3/peephole_lstm_cell_3/forget_gate_peephole_weights:0', 'sequential/bidirectional_3/backward_rnn_3/peephole_lstm_cell_3/output_gate_peephole_weights:0', 'sequential/time_distributed/kernel:0', 'sequential/time_distributed/bias:0'].
Traceback (most recent call last):
  File ".\_2_train.py", line 388, in train
    forecaster.fit(x_train, y_train, batch_size=batch_size, epochs=epochs, workers=workers,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 66, in _method_wrapper
    return method(self, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 785, in fit
    tmp_logs = train_function(iterator)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 580, in __call__
    result = self._call(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 627, in _call
    self._initialize(args, kwds, add_initializers_to=initializers)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 505, in _initialize
    self._stateful_fn._get_concrete_function_internal_garbage_collected(  # pylint: disable=protected-access
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2446, in _get_concrete_function_internal_garbage_collected
    graph_function, _, _ = self._maybe_define_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2777, in _maybe_define_function
    graph_function = self._create_graph_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2657, in _create_graph_function
    func_graph_module.func_graph_from_py_func(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 981, in func_graph_from_py_func
    func_outputs = python_func(*func_args, **func_kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 441, in wrapped_fn
    return weak_wrapped_fn().__wrapped__(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 968, in wrapper
    raise e.ag_error_metadata.to_exception(e)
ValueError: in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:474 train_step  **
        _minimize(self.distribute_strategy, tape, self.optimizer, loss,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:1740 _minimize
        gradients = optimizer._aggregate_gradients(zip(gradients,  # pylint: disable=protected-access
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\optimizer_v2\optimizer_v2.py:525 _aggregate_gradients
        filtered_grads_and_vars = _filter_grads(grads_and_vars)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\optimizer_v2\optimizer_v2.py:1202 _filter_grads
        raise ValueError("No gradients provided for any variable: %s." %

    ValueError: No gradients provided for any variable: ['sequential/bidirectional/forward_rnn/peephole_lstm_cell/kernel:0', 'sequential/bidirectional/forward_rnn/peephole_lstm_cell/recurrent_kernel:0', 'sequential/bidirectional/forward_rnn/peephole_lstm_cell/bias:0', 'sequential/bidirectional/forward_rnn/peephole_lstm_cell/input_gate_peephole_weights:0', 'sequential/bidirectional/forward_rnn/peephole_lstm_cell/forget_gate_peephole_weights:0', 'sequential/bidirectional/forward_rnn/peephole_lstm_cell/output_gate_peephole_weights:0', 'sequential/bidirectional/backward_rnn/peephole_lstm_cell/kernel:0', 'sequential/bidirectional/backward_rnn/peephole_lstm_cell/recurrent_kernel:0', 'sequential/bidirectional/backward_rnn/peephole_lstm_cell/bias:0', 'sequential/bidirectional/backward_rnn/peephole_lstm_cell/input_gate_peephole_weights:0', 'sequential/bidirectional/backward_rnn/peephole_lstm_cell/forget_gate_peephole_weights:0', 'sequential/bidirectional/backward_rnn/peephole_lstm_cell/output_gate_peephole_weights:0', 'sequential/bidirectional_1/forward_rnn_1/peephole_lstm_cell_1/kernel:0', 'sequential/bidirectional_1/forward_rnn_1/peephole_lstm_cell_1/recurrent_kernel:0', 'sequential/bidirectional_1/forward_rnn_1/peephole_lstm_cell_1/bias:0', 'sequential/bidirectional_1/forward_rnn_1/peephole_lstm_cell_1/input_gate_peephole_weights:0', 'sequential/bidirectional_1/forward_rnn_1/peephole_lstm_cell_1/forget_gate_peephole_weights:0', 'sequential/bidirectional_1/forward_rnn_1/peephole_lstm_cell_1/output_gate_peephole_weights:0', 'sequential/bidirectional_1/backward_rnn_1/peephole_lstm_cell_1/kernel:0', 'sequential/bidirectional_1/backward_rnn_1/peephole_lstm_cell_1/recurrent_kernel:0', 'sequential/bidirectional_1/backward_rnn_1/peephole_lstm_cell_1/bias:0', 'sequential/bidirectional_1/backward_rnn_1/peephole_lstm_cell_1/input_gate_peephole_weights:0', 'sequential/bidirectional_1/backward_rnn_1/peephole_lstm_cell_1/forget_gate_peephole_weights:0', 'sequential/bidirectional_1/backward_rnn_1/peephole_lstm_cell_1/output_gate_peephole_weights:0', 'sequential/bidirectional_2/forward_rnn_2/peephole_lstm_cell_2/kernel:0', 'sequential/bidirectional_2/forward_rnn_2/peephole_lstm_cell_2/recurrent_kernel:0', 'sequential/bidirectional_2/forward_rnn_2/peephole_lstm_cell_2/bias:0', 'sequential/bidirectional_2/forward_rnn_2/peephole_lstm_cell_2/input_gate_peephole_weights:0', 'sequential/bidirectional_2/forward_rnn_2/peephole_lstm_cell_2/forget_gate_peephole_weights:0', 'sequential/bidirectional_2/forward_rnn_2/peephole_lstm_cell_2/output_gate_peephole_weights:0', 'sequential/bidirectional_2/backward_rnn_2/peephole_lstm_cell_2/kernel:0', 'sequential/bidirectional_2/backward_rnn_2/peephole_lstm_cell_2/recurrent_kernel:0', 'sequential/bidirectional_2/backward_rnn_2/peephole_lstm_cell_2/bias:0', 'sequential/bidirectional_2/backward_rnn_2/peephole_lstm_cell_2/input_gate_peephole_weights:0', 'sequential/bidirectional_2/backward_rnn_2/peephole_lstm_cell_2/forget_gate_peephole_weights:0', 'sequential/bidirectional_2/backward_rnn_2/peephole_lstm_cell_2/output_gate_peephole_weights:0', 'sequential/bidirectional_3/forward_rnn_3/peephole_lstm_cell_3/kernel:0', 'sequential/bidirectional_3/forward_rnn_3/peephole_lstm_cell_3/recurrent_kernel:0', 'sequential/bidirectional_3/forward_rnn_3/peephole_lstm_cell_3/bias:0', 'sequential/bidirectional_3/forward_rnn_3/peephole_lstm_cell_3/input_gate_peephole_weights:0', 'sequential/bidirectional_3/forward_rnn_3/peephole_lstm_cell_3/forget_gate_peephole_weights:0', 'sequential/bidirectional_3/forward_rnn_3/peephole_lstm_cell_3/output_gate_peephole_weights:0', 'sequential/bidirectional_3/backward_rnn_3/peephole_lstm_cell_3/kernel:0', 'sequential/bidirectional_3/backward_rnn_3/peephole_lstm_cell_3/recurrent_kernel:0', 'sequential/bidirectional_3/backward_rnn_3/peephole_lstm_cell_3/bias:0', 'sequential/bidirectional_3/backward_rnn_3/peephole_lstm_cell_3/input_gate_peephole_weights:0', 'sequential/bidirectional_3/backward_rnn_3/peephole_lstm_cell_3/forget_gate_peephole_weights:0', 'sequential/bidirectional_3/backward_rnn_3/peephole_lstm_cell_3/output_gate_peephole_weights:0', 'sequential/time_distributed/kernel:0', 'sequential/time_distributed/bias:0'].


10.May 2020 03:32:54 correct LSTM model creation and compilation

10.May 2020 03:32:54 correct LSTM model creation and compilation

10.May 2020 03:32:54 correct LSTM model creation and compilation

10.May 2020 03:32:56 model training error
in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    .\_2_train.py:96 call  *
        local_loss2 = tf.tf.numpy_function(forecast_error, [local_true, local_pred], tf.float32)

    AttributeError: module 'tensorflow' has no attribute 'tf'
Traceback (most recent call last):
  File ".\_2_train.py", line 389, in train
    forecaster.fit(x_train, y_train, batch_size=batch_size, epochs=epochs, workers=workers,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 66, in _method_wrapper
    return method(self, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 785, in fit
    tmp_logs = train_function(iterator)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 580, in __call__
    result = self._call(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 627, in _call
    self._initialize(args, kwds, add_initializers_to=initializers)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 505, in _initialize
    self._stateful_fn._get_concrete_function_internal_garbage_collected(  # pylint: disable=protected-access
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2446, in _get_concrete_function_internal_garbage_collected
    graph_function, _, _ = self._maybe_define_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2777, in _maybe_define_function
    graph_function = self._create_graph_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2657, in _create_graph_function
    func_graph_module.func_graph_from_py_func(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 981, in func_graph_from_py_func
    func_outputs = python_func(*func_args, **func_kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 441, in wrapped_fn
    return weak_wrapped_fn().__wrapped__(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 968, in wrapper
    raise e.ag_error_metadata.to_exception(e)
AttributeError: in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    .\_2_train.py:96 call  *
        local_loss2 = tf.tf.numpy_function(forecast_error, [local_true, local_pred], tf.float32)

    AttributeError: module 'tensorflow' has no attribute 'tf'


10.May 2020 03:33:15 correct LSTM model creation and compilation

10.May 2020 03:33:15 correct LSTM model creation and compilation

10.May 2020 03:33:15 correct LSTM model creation and compilation

10.May 2020 03:33:17 model training error
in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:474 train_step  **
        _minimize(self.distribute_strategy, tape, self.optimizer, loss,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:1740 _minimize
        gradients = optimizer._aggregate_gradients(zip(gradients,  # pylint: disable=protected-access
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\optimizer_v2\optimizer_v2.py:525 _aggregate_gradients
        filtered_grads_and_vars = _filter_grads(grads_and_vars)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\optimizer_v2\optimizer_v2.py:1202 _filter_grads
        raise ValueError("No gradients provided for any variable: %s." %

    ValueError: No gradients provided for any variable: ['sequential/bidirectional/forward_rnn/peephole_lstm_cell/kernel:0', 'sequential/bidirectional/forward_rnn/peephole_lstm_cell/recurrent_kernel:0', 'sequential/bidirectional/forward_rnn/peephole_lstm_cell/bias:0', 'sequential/bidirectional/forward_rnn/peephole_lstm_cell/input_gate_peephole_weights:0', 'sequential/bidirectional/forward_rnn/peephole_lstm_cell/forget_gate_peephole_weights:0', 'sequential/bidirectional/forward_rnn/peephole_lstm_cell/output_gate_peephole_weights:0', 'sequential/bidirectional/backward_rnn/peephole_lstm_cell/kernel:0', 'sequential/bidirectional/backward_rnn/peephole_lstm_cell/recurrent_kernel:0', 'sequential/bidirectional/backward_rnn/peephole_lstm_cell/bias:0', 'sequential/bidirectional/backward_rnn/peephole_lstm_cell/input_gate_peephole_weights:0', 'sequential/bidirectional/backward_rnn/peephole_lstm_cell/forget_gate_peephole_weights:0', 'sequential/bidirectional/backward_rnn/peephole_lstm_cell/output_gate_peephole_weights:0', 'sequential/bidirectional_1/forward_rnn_1/peephole_lstm_cell_1/kernel:0', 'sequential/bidirectional_1/forward_rnn_1/peephole_lstm_cell_1/recurrent_kernel:0', 'sequential/bidirectional_1/forward_rnn_1/peephole_lstm_cell_1/bias:0', 'sequential/bidirectional_1/forward_rnn_1/peephole_lstm_cell_1/input_gate_peephole_weights:0', 'sequential/bidirectional_1/forward_rnn_1/peephole_lstm_cell_1/forget_gate_peephole_weights:0', 'sequential/bidirectional_1/forward_rnn_1/peephole_lstm_cell_1/output_gate_peephole_weights:0', 'sequential/bidirectional_1/backward_rnn_1/peephole_lstm_cell_1/kernel:0', 'sequential/bidirectional_1/backward_rnn_1/peephole_lstm_cell_1/recurrent_kernel:0', 'sequential/bidirectional_1/backward_rnn_1/peephole_lstm_cell_1/bias:0', 'sequential/bidirectional_1/backward_rnn_1/peephole_lstm_cell_1/input_gate_peephole_weights:0', 'sequential/bidirectional_1/backward_rnn_1/peephole_lstm_cell_1/forget_gate_peephole_weights:0', 'sequential/bidirectional_1/backward_rnn_1/peephole_lstm_cell_1/output_gate_peephole_weights:0', 'sequential/bidirectional_2/forward_rnn_2/peephole_lstm_cell_2/kernel:0', 'sequential/bidirectional_2/forward_rnn_2/peephole_lstm_cell_2/recurrent_kernel:0', 'sequential/bidirectional_2/forward_rnn_2/peephole_lstm_cell_2/bias:0', 'sequential/bidirectional_2/forward_rnn_2/peephole_lstm_cell_2/input_gate_peephole_weights:0', 'sequential/bidirectional_2/forward_rnn_2/peephole_lstm_cell_2/forget_gate_peephole_weights:0', 'sequential/bidirectional_2/forward_rnn_2/peephole_lstm_cell_2/output_gate_peephole_weights:0', 'sequential/bidirectional_2/backward_rnn_2/peephole_lstm_cell_2/kernel:0', 'sequential/bidirectional_2/backward_rnn_2/peephole_lstm_cell_2/recurrent_kernel:0', 'sequential/bidirectional_2/backward_rnn_2/peephole_lstm_cell_2/bias:0', 'sequential/bidirectional_2/backward_rnn_2/peephole_lstm_cell_2/input_gate_peephole_weights:0', 'sequential/bidirectional_2/backward_rnn_2/peephole_lstm_cell_2/forget_gate_peephole_weights:0', 'sequential/bidirectional_2/backward_rnn_2/peephole_lstm_cell_2/output_gate_peephole_weights:0', 'sequential/bidirectional_3/forward_rnn_3/peephole_lstm_cell_3/kernel:0', 'sequential/bidirectional_3/forward_rnn_3/peephole_lstm_cell_3/recurrent_kernel:0', 'sequential/bidirectional_3/forward_rnn_3/peephole_lstm_cell_3/bias:0', 'sequential/bidirectional_3/forward_rnn_3/peephole_lstm_cell_3/input_gate_peephole_weights:0', 'sequential/bidirectional_3/forward_rnn_3/peephole_lstm_cell_3/forget_gate_peephole_weights:0', 'sequential/bidirectional_3/forward_rnn_3/peephole_lstm_cell_3/output_gate_peephole_weights:0', 'sequential/bidirectional_3/backward_rnn_3/peephole_lstm_cell_3/kernel:0', 'sequential/bidirectional_3/backward_rnn_3/peephole_lstm_cell_3/recurrent_kernel:0', 'sequential/bidirectional_3/backward_rnn_3/peephole_lstm_cell_3/bias:0', 'sequential/bidirectional_3/backward_rnn_3/peephole_lstm_cell_3/input_gate_peephole_weights:0', 'sequential/bidirectional_3/backward_rnn_3/peephole_lstm_cell_3/forget_gate_peephole_weights:0', 'sequential/bidirectional_3/backward_rnn_3/peephole_lstm_cell_3/output_gate_peephole_weights:0', 'sequential/time_distributed/kernel:0', 'sequential/time_distributed/bias:0'].
Traceback (most recent call last):
  File ".\_2_train.py", line 389, in train
    forecaster.fit(x_train, y_train, batch_size=batch_size, epochs=epochs, workers=workers,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 66, in _method_wrapper
    return method(self, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 785, in fit
    tmp_logs = train_function(iterator)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 580, in __call__
    result = self._call(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 627, in _call
    self._initialize(args, kwds, add_initializers_to=initializers)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 505, in _initialize
    self._stateful_fn._get_concrete_function_internal_garbage_collected(  # pylint: disable=protected-access
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2446, in _get_concrete_function_internal_garbage_collected
    graph_function, _, _ = self._maybe_define_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2777, in _maybe_define_function
    graph_function = self._create_graph_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2657, in _create_graph_function
    func_graph_module.func_graph_from_py_func(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 981, in func_graph_from_py_func
    func_outputs = python_func(*func_args, **func_kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 441, in wrapped_fn
    return weak_wrapped_fn().__wrapped__(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 968, in wrapper
    raise e.ag_error_metadata.to_exception(e)
ValueError: in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:474 train_step  **
        _minimize(self.distribute_strategy, tape, self.optimizer, loss,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:1740 _minimize
        gradients = optimizer._aggregate_gradients(zip(gradients,  # pylint: disable=protected-access
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\optimizer_v2\optimizer_v2.py:525 _aggregate_gradients
        filtered_grads_and_vars = _filter_grads(grads_and_vars)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\optimizer_v2\optimizer_v2.py:1202 _filter_grads
        raise ValueError("No gradients provided for any variable: %s." %

    ValueError: No gradients provided for any variable: ['sequential/bidirectional/forward_rnn/peephole_lstm_cell/kernel:0', 'sequential/bidirectional/forward_rnn/peephole_lstm_cell/recurrent_kernel:0', 'sequential/bidirectional/forward_rnn/peephole_lstm_cell/bias:0', 'sequential/bidirectional/forward_rnn/peephole_lstm_cell/input_gate_peephole_weights:0', 'sequential/bidirectional/forward_rnn/peephole_lstm_cell/forget_gate_peephole_weights:0', 'sequential/bidirectional/forward_rnn/peephole_lstm_cell/output_gate_peephole_weights:0', 'sequential/bidirectional/backward_rnn/peephole_lstm_cell/kernel:0', 'sequential/bidirectional/backward_rnn/peephole_lstm_cell/recurrent_kernel:0', 'sequential/bidirectional/backward_rnn/peephole_lstm_cell/bias:0', 'sequential/bidirectional/backward_rnn/peephole_lstm_cell/input_gate_peephole_weights:0', 'sequential/bidirectional/backward_rnn/peephole_lstm_cell/forget_gate_peephole_weights:0', 'sequential/bidirectional/backward_rnn/peephole_lstm_cell/output_gate_peephole_weights:0', 'sequential/bidirectional_1/forward_rnn_1/peephole_lstm_cell_1/kernel:0', 'sequential/bidirectional_1/forward_rnn_1/peephole_lstm_cell_1/recurrent_kernel:0', 'sequential/bidirectional_1/forward_rnn_1/peephole_lstm_cell_1/bias:0', 'sequential/bidirectional_1/forward_rnn_1/peephole_lstm_cell_1/input_gate_peephole_weights:0', 'sequential/bidirectional_1/forward_rnn_1/peephole_lstm_cell_1/forget_gate_peephole_weights:0', 'sequential/bidirectional_1/forward_rnn_1/peephole_lstm_cell_1/output_gate_peephole_weights:0', 'sequential/bidirectional_1/backward_rnn_1/peephole_lstm_cell_1/kernel:0', 'sequential/bidirectional_1/backward_rnn_1/peephole_lstm_cell_1/recurrent_kernel:0', 'sequential/bidirectional_1/backward_rnn_1/peephole_lstm_cell_1/bias:0', 'sequential/bidirectional_1/backward_rnn_1/peephole_lstm_cell_1/input_gate_peephole_weights:0', 'sequential/bidirectional_1/backward_rnn_1/peephole_lstm_cell_1/forget_gate_peephole_weights:0', 'sequential/bidirectional_1/backward_rnn_1/peephole_lstm_cell_1/output_gate_peephole_weights:0', 'sequential/bidirectional_2/forward_rnn_2/peephole_lstm_cell_2/kernel:0', 'sequential/bidirectional_2/forward_rnn_2/peephole_lstm_cell_2/recurrent_kernel:0', 'sequential/bidirectional_2/forward_rnn_2/peephole_lstm_cell_2/bias:0', 'sequential/bidirectional_2/forward_rnn_2/peephole_lstm_cell_2/input_gate_peephole_weights:0', 'sequential/bidirectional_2/forward_rnn_2/peephole_lstm_cell_2/forget_gate_peephole_weights:0', 'sequential/bidirectional_2/forward_rnn_2/peephole_lstm_cell_2/output_gate_peephole_weights:0', 'sequential/bidirectional_2/backward_rnn_2/peephole_lstm_cell_2/kernel:0', 'sequential/bidirectional_2/backward_rnn_2/peephole_lstm_cell_2/recurrent_kernel:0', 'sequential/bidirectional_2/backward_rnn_2/peephole_lstm_cell_2/bias:0', 'sequential/bidirectional_2/backward_rnn_2/peephole_lstm_cell_2/input_gate_peephole_weights:0', 'sequential/bidirectional_2/backward_rnn_2/peephole_lstm_cell_2/forget_gate_peephole_weights:0', 'sequential/bidirectional_2/backward_rnn_2/peephole_lstm_cell_2/output_gate_peephole_weights:0', 'sequential/bidirectional_3/forward_rnn_3/peephole_lstm_cell_3/kernel:0', 'sequential/bidirectional_3/forward_rnn_3/peephole_lstm_cell_3/recurrent_kernel:0', 'sequential/bidirectional_3/forward_rnn_3/peephole_lstm_cell_3/bias:0', 'sequential/bidirectional_3/forward_rnn_3/peephole_lstm_cell_3/input_gate_peephole_weights:0', 'sequential/bidirectional_3/forward_rnn_3/peephole_lstm_cell_3/forget_gate_peephole_weights:0', 'sequential/bidirectional_3/forward_rnn_3/peephole_lstm_cell_3/output_gate_peephole_weights:0', 'sequential/bidirectional_3/backward_rnn_3/peephole_lstm_cell_3/kernel:0', 'sequential/bidirectional_3/backward_rnn_3/peephole_lstm_cell_3/recurrent_kernel:0', 'sequential/bidirectional_3/backward_rnn_3/peephole_lstm_cell_3/bias:0', 'sequential/bidirectional_3/backward_rnn_3/peephole_lstm_cell_3/input_gate_peephole_weights:0', 'sequential/bidirectional_3/backward_rnn_3/peephole_lstm_cell_3/forget_gate_peephole_weights:0', 'sequential/bidirectional_3/backward_rnn_3/peephole_lstm_cell_3/output_gate_peephole_weights:0', 'sequential/time_distributed/kernel:0', 'sequential/time_distributed/bias:0'].


10.May 2020 03:35:06 correct LSTM model creation and compilation

10.May 2020 03:35:06 correct LSTM model creation and compilation

10.May 2020 03:35:06 correct LSTM model creation and compilation

10.May 2020 03:35:07 model training error
in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:474 train_step  **
        _minimize(self.distribute_strategy, tape, self.optimizer, loss,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:1740 _minimize
        gradients = optimizer._aggregate_gradients(zip(gradients,  # pylint: disable=protected-access
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\optimizer_v2\optimizer_v2.py:525 _aggregate_gradients
        filtered_grads_and_vars = _filter_grads(grads_and_vars)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\optimizer_v2\optimizer_v2.py:1202 _filter_grads
        raise ValueError("No gradients provided for any variable: %s." %

    ValueError: No gradients provided for any variable: ['sequential/bidirectional/forward_rnn/peephole_lstm_cell/kernel:0', 'sequential/bidirectional/forward_rnn/peephole_lstm_cell/recurrent_kernel:0', 'sequential/bidirectional/forward_rnn/peephole_lstm_cell/bias:0', 'sequential/bidirectional/forward_rnn/peephole_lstm_cell/input_gate_peephole_weights:0', 'sequential/bidirectional/forward_rnn/peephole_lstm_cell/forget_gate_peephole_weights:0', 'sequential/bidirectional/forward_rnn/peephole_lstm_cell/output_gate_peephole_weights:0', 'sequential/bidirectional/backward_rnn/peephole_lstm_cell/kernel:0', 'sequential/bidirectional/backward_rnn/peephole_lstm_cell/recurrent_kernel:0', 'sequential/bidirectional/backward_rnn/peephole_lstm_cell/bias:0', 'sequential/bidirectional/backward_rnn/peephole_lstm_cell/input_gate_peephole_weights:0', 'sequential/bidirectional/backward_rnn/peephole_lstm_cell/forget_gate_peephole_weights:0', 'sequential/bidirectional/backward_rnn/peephole_lstm_cell/output_gate_peephole_weights:0', 'sequential/bidirectional_1/forward_rnn_1/peephole_lstm_cell_1/kernel:0', 'sequential/bidirectional_1/forward_rnn_1/peephole_lstm_cell_1/recurrent_kernel:0', 'sequential/bidirectional_1/forward_rnn_1/peephole_lstm_cell_1/bias:0', 'sequential/bidirectional_1/forward_rnn_1/peephole_lstm_cell_1/input_gate_peephole_weights:0', 'sequential/bidirectional_1/forward_rnn_1/peephole_lstm_cell_1/forget_gate_peephole_weights:0', 'sequential/bidirectional_1/forward_rnn_1/peephole_lstm_cell_1/output_gate_peephole_weights:0', 'sequential/bidirectional_1/backward_rnn_1/peephole_lstm_cell_1/kernel:0', 'sequential/bidirectional_1/backward_rnn_1/peephole_lstm_cell_1/recurrent_kernel:0', 'sequential/bidirectional_1/backward_rnn_1/peephole_lstm_cell_1/bias:0', 'sequential/bidirectional_1/backward_rnn_1/peephole_lstm_cell_1/input_gate_peephole_weights:0', 'sequential/bidirectional_1/backward_rnn_1/peephole_lstm_cell_1/forget_gate_peephole_weights:0', 'sequential/bidirectional_1/backward_rnn_1/peephole_lstm_cell_1/output_gate_peephole_weights:0', 'sequential/bidirectional_2/forward_rnn_2/peephole_lstm_cell_2/kernel:0', 'sequential/bidirectional_2/forward_rnn_2/peephole_lstm_cell_2/recurrent_kernel:0', 'sequential/bidirectional_2/forward_rnn_2/peephole_lstm_cell_2/bias:0', 'sequential/bidirectional_2/forward_rnn_2/peephole_lstm_cell_2/input_gate_peephole_weights:0', 'sequential/bidirectional_2/forward_rnn_2/peephole_lstm_cell_2/forget_gate_peephole_weights:0', 'sequential/bidirectional_2/forward_rnn_2/peephole_lstm_cell_2/output_gate_peephole_weights:0', 'sequential/bidirectional_2/backward_rnn_2/peephole_lstm_cell_2/kernel:0', 'sequential/bidirectional_2/backward_rnn_2/peephole_lstm_cell_2/recurrent_kernel:0', 'sequential/bidirectional_2/backward_rnn_2/peephole_lstm_cell_2/bias:0', 'sequential/bidirectional_2/backward_rnn_2/peephole_lstm_cell_2/input_gate_peephole_weights:0', 'sequential/bidirectional_2/backward_rnn_2/peephole_lstm_cell_2/forget_gate_peephole_weights:0', 'sequential/bidirectional_2/backward_rnn_2/peephole_lstm_cell_2/output_gate_peephole_weights:0', 'sequential/bidirectional_3/forward_rnn_3/peephole_lstm_cell_3/kernel:0', 'sequential/bidirectional_3/forward_rnn_3/peephole_lstm_cell_3/recurrent_kernel:0', 'sequential/bidirectional_3/forward_rnn_3/peephole_lstm_cell_3/bias:0', 'sequential/bidirectional_3/forward_rnn_3/peephole_lstm_cell_3/input_gate_peephole_weights:0', 'sequential/bidirectional_3/forward_rnn_3/peephole_lstm_cell_3/forget_gate_peephole_weights:0', 'sequential/bidirectional_3/forward_rnn_3/peephole_lstm_cell_3/output_gate_peephole_weights:0', 'sequential/bidirectional_3/backward_rnn_3/peephole_lstm_cell_3/kernel:0', 'sequential/bidirectional_3/backward_rnn_3/peephole_lstm_cell_3/recurrent_kernel:0', 'sequential/bidirectional_3/backward_rnn_3/peephole_lstm_cell_3/bias:0', 'sequential/bidirectional_3/backward_rnn_3/peephole_lstm_cell_3/input_gate_peephole_weights:0', 'sequential/bidirectional_3/backward_rnn_3/peephole_lstm_cell_3/forget_gate_peephole_weights:0', 'sequential/bidirectional_3/backward_rnn_3/peephole_lstm_cell_3/output_gate_peephole_weights:0', 'sequential/time_distributed/kernel:0', 'sequential/time_distributed/bias:0'].
Traceback (most recent call last):
  File ".\_2_train.py", line 388, in train
    forecaster.fit(x_train, y_train, batch_size=batch_size, epochs=epochs, workers=workers,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 66, in _method_wrapper
    return method(self, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 785, in fit
    tmp_logs = train_function(iterator)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 580, in __call__
    result = self._call(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 627, in _call
    self._initialize(args, kwds, add_initializers_to=initializers)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 505, in _initialize
    self._stateful_fn._get_concrete_function_internal_garbage_collected(  # pylint: disable=protected-access
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2446, in _get_concrete_function_internal_garbage_collected
    graph_function, _, _ = self._maybe_define_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2777, in _maybe_define_function
    graph_function = self._create_graph_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2657, in _create_graph_function
    func_graph_module.func_graph_from_py_func(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 981, in func_graph_from_py_func
    func_outputs = python_func(*func_args, **func_kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 441, in wrapped_fn
    return weak_wrapped_fn().__wrapped__(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 968, in wrapper
    raise e.ag_error_metadata.to_exception(e)
ValueError: in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:474 train_step  **
        _minimize(self.distribute_strategy, tape, self.optimizer, loss,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:1740 _minimize
        gradients = optimizer._aggregate_gradients(zip(gradients,  # pylint: disable=protected-access
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\optimizer_v2\optimizer_v2.py:525 _aggregate_gradients
        filtered_grads_and_vars = _filter_grads(grads_and_vars)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\optimizer_v2\optimizer_v2.py:1202 _filter_grads
        raise ValueError("No gradients provided for any variable: %s." %

    ValueError: No gradients provided for any variable: ['sequential/bidirectional/forward_rnn/peephole_lstm_cell/kernel:0', 'sequential/bidirectional/forward_rnn/peephole_lstm_cell/recurrent_kernel:0', 'sequential/bidirectional/forward_rnn/peephole_lstm_cell/bias:0', 'sequential/bidirectional/forward_rnn/peephole_lstm_cell/input_gate_peephole_weights:0', 'sequential/bidirectional/forward_rnn/peephole_lstm_cell/forget_gate_peephole_weights:0', 'sequential/bidirectional/forward_rnn/peephole_lstm_cell/output_gate_peephole_weights:0', 'sequential/bidirectional/backward_rnn/peephole_lstm_cell/kernel:0', 'sequential/bidirectional/backward_rnn/peephole_lstm_cell/recurrent_kernel:0', 'sequential/bidirectional/backward_rnn/peephole_lstm_cell/bias:0', 'sequential/bidirectional/backward_rnn/peephole_lstm_cell/input_gate_peephole_weights:0', 'sequential/bidirectional/backward_rnn/peephole_lstm_cell/forget_gate_peephole_weights:0', 'sequential/bidirectional/backward_rnn/peephole_lstm_cell/output_gate_peephole_weights:0', 'sequential/bidirectional_1/forward_rnn_1/peephole_lstm_cell_1/kernel:0', 'sequential/bidirectional_1/forward_rnn_1/peephole_lstm_cell_1/recurrent_kernel:0', 'sequential/bidirectional_1/forward_rnn_1/peephole_lstm_cell_1/bias:0', 'sequential/bidirectional_1/forward_rnn_1/peephole_lstm_cell_1/input_gate_peephole_weights:0', 'sequential/bidirectional_1/forward_rnn_1/peephole_lstm_cell_1/forget_gate_peephole_weights:0', 'sequential/bidirectional_1/forward_rnn_1/peephole_lstm_cell_1/output_gate_peephole_weights:0', 'sequential/bidirectional_1/backward_rnn_1/peephole_lstm_cell_1/kernel:0', 'sequential/bidirectional_1/backward_rnn_1/peephole_lstm_cell_1/recurrent_kernel:0', 'sequential/bidirectional_1/backward_rnn_1/peephole_lstm_cell_1/bias:0', 'sequential/bidirectional_1/backward_rnn_1/peephole_lstm_cell_1/input_gate_peephole_weights:0', 'sequential/bidirectional_1/backward_rnn_1/peephole_lstm_cell_1/forget_gate_peephole_weights:0', 'sequential/bidirectional_1/backward_rnn_1/peephole_lstm_cell_1/output_gate_peephole_weights:0', 'sequential/bidirectional_2/forward_rnn_2/peephole_lstm_cell_2/kernel:0', 'sequential/bidirectional_2/forward_rnn_2/peephole_lstm_cell_2/recurrent_kernel:0', 'sequential/bidirectional_2/forward_rnn_2/peephole_lstm_cell_2/bias:0', 'sequential/bidirectional_2/forward_rnn_2/peephole_lstm_cell_2/input_gate_peephole_weights:0', 'sequential/bidirectional_2/forward_rnn_2/peephole_lstm_cell_2/forget_gate_peephole_weights:0', 'sequential/bidirectional_2/forward_rnn_2/peephole_lstm_cell_2/output_gate_peephole_weights:0', 'sequential/bidirectional_2/backward_rnn_2/peephole_lstm_cell_2/kernel:0', 'sequential/bidirectional_2/backward_rnn_2/peephole_lstm_cell_2/recurrent_kernel:0', 'sequential/bidirectional_2/backward_rnn_2/peephole_lstm_cell_2/bias:0', 'sequential/bidirectional_2/backward_rnn_2/peephole_lstm_cell_2/input_gate_peephole_weights:0', 'sequential/bidirectional_2/backward_rnn_2/peephole_lstm_cell_2/forget_gate_peephole_weights:0', 'sequential/bidirectional_2/backward_rnn_2/peephole_lstm_cell_2/output_gate_peephole_weights:0', 'sequential/bidirectional_3/forward_rnn_3/peephole_lstm_cell_3/kernel:0', 'sequential/bidirectional_3/forward_rnn_3/peephole_lstm_cell_3/recurrent_kernel:0', 'sequential/bidirectional_3/forward_rnn_3/peephole_lstm_cell_3/bias:0', 'sequential/bidirectional_3/forward_rnn_3/peephole_lstm_cell_3/input_gate_peephole_weights:0', 'sequential/bidirectional_3/forward_rnn_3/peephole_lstm_cell_3/forget_gate_peephole_weights:0', 'sequential/bidirectional_3/forward_rnn_3/peephole_lstm_cell_3/output_gate_peephole_weights:0', 'sequential/bidirectional_3/backward_rnn_3/peephole_lstm_cell_3/kernel:0', 'sequential/bidirectional_3/backward_rnn_3/peephole_lstm_cell_3/recurrent_kernel:0', 'sequential/bidirectional_3/backward_rnn_3/peephole_lstm_cell_3/bias:0', 'sequential/bidirectional_3/backward_rnn_3/peephole_lstm_cell_3/input_gate_peephole_weights:0', 'sequential/bidirectional_3/backward_rnn_3/peephole_lstm_cell_3/forget_gate_peephole_weights:0', 'sequential/bidirectional_3/backward_rnn_3/peephole_lstm_cell_3/output_gate_peephole_weights:0', 'sequential/time_distributed/kernel:0', 'sequential/time_distributed/bias:0'].


10.May 2020 03:36:24 correct LSTM model creation and compilation

10.May 2020 03:36:24 correct LSTM model creation and compilation

10.May 2020 03:36:24 correct LSTM model creation and compilation

10.May 2020 03:36:26 model training error
in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:474 train_step  **
        _minimize(self.distribute_strategy, tape, self.optimizer, loss,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:1740 _minimize
        gradients = optimizer._aggregate_gradients(zip(gradients,  # pylint: disable=protected-access
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\optimizer_v2\optimizer_v2.py:525 _aggregate_gradients
        filtered_grads_and_vars = _filter_grads(grads_and_vars)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\optimizer_v2\optimizer_v2.py:1202 _filter_grads
        raise ValueError("No gradients provided for any variable: %s." %

    ValueError: No gradients provided for any variable: ['sequential/bidirectional/forward_rnn/peephole_lstm_cell/kernel:0', 'sequential/bidirectional/forward_rnn/peephole_lstm_cell/recurrent_kernel:0', 'sequential/bidirectional/forward_rnn/peephole_lstm_cell/bias:0', 'sequential/bidirectional/forward_rnn/peephole_lstm_cell/input_gate_peephole_weights:0', 'sequential/bidirectional/forward_rnn/peephole_lstm_cell/forget_gate_peephole_weights:0', 'sequential/bidirectional/forward_rnn/peephole_lstm_cell/output_gate_peephole_weights:0', 'sequential/bidirectional/backward_rnn/peephole_lstm_cell/kernel:0', 'sequential/bidirectional/backward_rnn/peephole_lstm_cell/recurrent_kernel:0', 'sequential/bidirectional/backward_rnn/peephole_lstm_cell/bias:0', 'sequential/bidirectional/backward_rnn/peephole_lstm_cell/input_gate_peephole_weights:0', 'sequential/bidirectional/backward_rnn/peephole_lstm_cell/forget_gate_peephole_weights:0', 'sequential/bidirectional/backward_rnn/peephole_lstm_cell/output_gate_peephole_weights:0', 'sequential/bidirectional_1/forward_rnn_1/peephole_lstm_cell_1/kernel:0', 'sequential/bidirectional_1/forward_rnn_1/peephole_lstm_cell_1/recurrent_kernel:0', 'sequential/bidirectional_1/forward_rnn_1/peephole_lstm_cell_1/bias:0', 'sequential/bidirectional_1/forward_rnn_1/peephole_lstm_cell_1/input_gate_peephole_weights:0', 'sequential/bidirectional_1/forward_rnn_1/peephole_lstm_cell_1/forget_gate_peephole_weights:0', 'sequential/bidirectional_1/forward_rnn_1/peephole_lstm_cell_1/output_gate_peephole_weights:0', 'sequential/bidirectional_1/backward_rnn_1/peephole_lstm_cell_1/kernel:0', 'sequential/bidirectional_1/backward_rnn_1/peephole_lstm_cell_1/recurrent_kernel:0', 'sequential/bidirectional_1/backward_rnn_1/peephole_lstm_cell_1/bias:0', 'sequential/bidirectional_1/backward_rnn_1/peephole_lstm_cell_1/input_gate_peephole_weights:0', 'sequential/bidirectional_1/backward_rnn_1/peephole_lstm_cell_1/forget_gate_peephole_weights:0', 'sequential/bidirectional_1/backward_rnn_1/peephole_lstm_cell_1/output_gate_peephole_weights:0', 'sequential/bidirectional_2/forward_rnn_2/peephole_lstm_cell_2/kernel:0', 'sequential/bidirectional_2/forward_rnn_2/peephole_lstm_cell_2/recurrent_kernel:0', 'sequential/bidirectional_2/forward_rnn_2/peephole_lstm_cell_2/bias:0', 'sequential/bidirectional_2/forward_rnn_2/peephole_lstm_cell_2/input_gate_peephole_weights:0', 'sequential/bidirectional_2/forward_rnn_2/peephole_lstm_cell_2/forget_gate_peephole_weights:0', 'sequential/bidirectional_2/forward_rnn_2/peephole_lstm_cell_2/output_gate_peephole_weights:0', 'sequential/bidirectional_2/backward_rnn_2/peephole_lstm_cell_2/kernel:0', 'sequential/bidirectional_2/backward_rnn_2/peephole_lstm_cell_2/recurrent_kernel:0', 'sequential/bidirectional_2/backward_rnn_2/peephole_lstm_cell_2/bias:0', 'sequential/bidirectional_2/backward_rnn_2/peephole_lstm_cell_2/input_gate_peephole_weights:0', 'sequential/bidirectional_2/backward_rnn_2/peephole_lstm_cell_2/forget_gate_peephole_weights:0', 'sequential/bidirectional_2/backward_rnn_2/peephole_lstm_cell_2/output_gate_peephole_weights:0', 'sequential/bidirectional_3/forward_rnn_3/peephole_lstm_cell_3/kernel:0', 'sequential/bidirectional_3/forward_rnn_3/peephole_lstm_cell_3/recurrent_kernel:0', 'sequential/bidirectional_3/forward_rnn_3/peephole_lstm_cell_3/bias:0', 'sequential/bidirectional_3/forward_rnn_3/peephole_lstm_cell_3/input_gate_peephole_weights:0', 'sequential/bidirectional_3/forward_rnn_3/peephole_lstm_cell_3/forget_gate_peephole_weights:0', 'sequential/bidirectional_3/forward_rnn_3/peephole_lstm_cell_3/output_gate_peephole_weights:0', 'sequential/bidirectional_3/backward_rnn_3/peephole_lstm_cell_3/kernel:0', 'sequential/bidirectional_3/backward_rnn_3/peephole_lstm_cell_3/recurrent_kernel:0', 'sequential/bidirectional_3/backward_rnn_3/peephole_lstm_cell_3/bias:0', 'sequential/bidirectional_3/backward_rnn_3/peephole_lstm_cell_3/input_gate_peephole_weights:0', 'sequential/bidirectional_3/backward_rnn_3/peephole_lstm_cell_3/forget_gate_peephole_weights:0', 'sequential/bidirectional_3/backward_rnn_3/peephole_lstm_cell_3/output_gate_peephole_weights:0', 'sequential/time_distributed/kernel:0', 'sequential/time_distributed/bias:0'].
Traceback (most recent call last):
  File ".\_2_train.py", line 388, in train
    forecaster.fit(x_train, y_train, batch_size=batch_size, epochs=epochs, workers=workers,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 66, in _method_wrapper
    return method(self, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 785, in fit
    tmp_logs = train_function(iterator)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 580, in __call__
    result = self._call(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 627, in _call
    self._initialize(args, kwds, add_initializers_to=initializers)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 505, in _initialize
    self._stateful_fn._get_concrete_function_internal_garbage_collected(  # pylint: disable=protected-access
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2446, in _get_concrete_function_internal_garbage_collected
    graph_function, _, _ = self._maybe_define_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2777, in _maybe_define_function
    graph_function = self._create_graph_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2657, in _create_graph_function
    func_graph_module.func_graph_from_py_func(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 981, in func_graph_from_py_func
    func_outputs = python_func(*func_args, **func_kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 441, in wrapped_fn
    return weak_wrapped_fn().__wrapped__(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 968, in wrapper
    raise e.ag_error_metadata.to_exception(e)
ValueError: in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:474 train_step  **
        _minimize(self.distribute_strategy, tape, self.optimizer, loss,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:1740 _minimize
        gradients = optimizer._aggregate_gradients(zip(gradients,  # pylint: disable=protected-access
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\optimizer_v2\optimizer_v2.py:525 _aggregate_gradients
        filtered_grads_and_vars = _filter_grads(grads_and_vars)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\optimizer_v2\optimizer_v2.py:1202 _filter_grads
        raise ValueError("No gradients provided for any variable: %s." %

    ValueError: No gradients provided for any variable: ['sequential/bidirectional/forward_rnn/peephole_lstm_cell/kernel:0', 'sequential/bidirectional/forward_rnn/peephole_lstm_cell/recurrent_kernel:0', 'sequential/bidirectional/forward_rnn/peephole_lstm_cell/bias:0', 'sequential/bidirectional/forward_rnn/peephole_lstm_cell/input_gate_peephole_weights:0', 'sequential/bidirectional/forward_rnn/peephole_lstm_cell/forget_gate_peephole_weights:0', 'sequential/bidirectional/forward_rnn/peephole_lstm_cell/output_gate_peephole_weights:0', 'sequential/bidirectional/backward_rnn/peephole_lstm_cell/kernel:0', 'sequential/bidirectional/backward_rnn/peephole_lstm_cell/recurrent_kernel:0', 'sequential/bidirectional/backward_rnn/peephole_lstm_cell/bias:0', 'sequential/bidirectional/backward_rnn/peephole_lstm_cell/input_gate_peephole_weights:0', 'sequential/bidirectional/backward_rnn/peephole_lstm_cell/forget_gate_peephole_weights:0', 'sequential/bidirectional/backward_rnn/peephole_lstm_cell/output_gate_peephole_weights:0', 'sequential/bidirectional_1/forward_rnn_1/peephole_lstm_cell_1/kernel:0', 'sequential/bidirectional_1/forward_rnn_1/peephole_lstm_cell_1/recurrent_kernel:0', 'sequential/bidirectional_1/forward_rnn_1/peephole_lstm_cell_1/bias:0', 'sequential/bidirectional_1/forward_rnn_1/peephole_lstm_cell_1/input_gate_peephole_weights:0', 'sequential/bidirectional_1/forward_rnn_1/peephole_lstm_cell_1/forget_gate_peephole_weights:0', 'sequential/bidirectional_1/forward_rnn_1/peephole_lstm_cell_1/output_gate_peephole_weights:0', 'sequential/bidirectional_1/backward_rnn_1/peephole_lstm_cell_1/kernel:0', 'sequential/bidirectional_1/backward_rnn_1/peephole_lstm_cell_1/recurrent_kernel:0', 'sequential/bidirectional_1/backward_rnn_1/peephole_lstm_cell_1/bias:0', 'sequential/bidirectional_1/backward_rnn_1/peephole_lstm_cell_1/input_gate_peephole_weights:0', 'sequential/bidirectional_1/backward_rnn_1/peephole_lstm_cell_1/forget_gate_peephole_weights:0', 'sequential/bidirectional_1/backward_rnn_1/peephole_lstm_cell_1/output_gate_peephole_weights:0', 'sequential/bidirectional_2/forward_rnn_2/peephole_lstm_cell_2/kernel:0', 'sequential/bidirectional_2/forward_rnn_2/peephole_lstm_cell_2/recurrent_kernel:0', 'sequential/bidirectional_2/forward_rnn_2/peephole_lstm_cell_2/bias:0', 'sequential/bidirectional_2/forward_rnn_2/peephole_lstm_cell_2/input_gate_peephole_weights:0', 'sequential/bidirectional_2/forward_rnn_2/peephole_lstm_cell_2/forget_gate_peephole_weights:0', 'sequential/bidirectional_2/forward_rnn_2/peephole_lstm_cell_2/output_gate_peephole_weights:0', 'sequential/bidirectional_2/backward_rnn_2/peephole_lstm_cell_2/kernel:0', 'sequential/bidirectional_2/backward_rnn_2/peephole_lstm_cell_2/recurrent_kernel:0', 'sequential/bidirectional_2/backward_rnn_2/peephole_lstm_cell_2/bias:0', 'sequential/bidirectional_2/backward_rnn_2/peephole_lstm_cell_2/input_gate_peephole_weights:0', 'sequential/bidirectional_2/backward_rnn_2/peephole_lstm_cell_2/forget_gate_peephole_weights:0', 'sequential/bidirectional_2/backward_rnn_2/peephole_lstm_cell_2/output_gate_peephole_weights:0', 'sequential/bidirectional_3/forward_rnn_3/peephole_lstm_cell_3/kernel:0', 'sequential/bidirectional_3/forward_rnn_3/peephole_lstm_cell_3/recurrent_kernel:0', 'sequential/bidirectional_3/forward_rnn_3/peephole_lstm_cell_3/bias:0', 'sequential/bidirectional_3/forward_rnn_3/peephole_lstm_cell_3/input_gate_peephole_weights:0', 'sequential/bidirectional_3/forward_rnn_3/peephole_lstm_cell_3/forget_gate_peephole_weights:0', 'sequential/bidirectional_3/forward_rnn_3/peephole_lstm_cell_3/output_gate_peephole_weights:0', 'sequential/bidirectional_3/backward_rnn_3/peephole_lstm_cell_3/kernel:0', 'sequential/bidirectional_3/backward_rnn_3/peephole_lstm_cell_3/recurrent_kernel:0', 'sequential/bidirectional_3/backward_rnn_3/peephole_lstm_cell_3/bias:0', 'sequential/bidirectional_3/backward_rnn_3/peephole_lstm_cell_3/input_gate_peephole_weights:0', 'sequential/bidirectional_3/backward_rnn_3/peephole_lstm_cell_3/forget_gate_peephole_weights:0', 'sequential/bidirectional_3/backward_rnn_3/peephole_lstm_cell_3/output_gate_peephole_weights:0', 'sequential/time_distributed/kernel:0', 'sequential/time_distributed/bias:0'].


10.May 2020 03:37:24 correct LSTM model creation and compilation

10.May 2020 03:37:24 correct LSTM model creation and compilation

10.May 2020 03:37:24 correct LSTM model creation and compilation

10.May 2020 03:37:26 model training error
in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:474 train_step  **
        _minimize(self.distribute_strategy, tape, self.optimizer, loss,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:1740 _minimize
        gradients = optimizer._aggregate_gradients(zip(gradients,  # pylint: disable=protected-access
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\optimizer_v2\optimizer_v2.py:525 _aggregate_gradients
        filtered_grads_and_vars = _filter_grads(grads_and_vars)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\optimizer_v2\optimizer_v2.py:1202 _filter_grads
        raise ValueError("No gradients provided for any variable: %s." %

    ValueError: No gradients provided for any variable: ['sequential/bidirectional/forward_rnn/peephole_lstm_cell/kernel:0', 'sequential/bidirectional/forward_rnn/peephole_lstm_cell/recurrent_kernel:0', 'sequential/bidirectional/forward_rnn/peephole_lstm_cell/bias:0', 'sequential/bidirectional/forward_rnn/peephole_lstm_cell/input_gate_peephole_weights:0', 'sequential/bidirectional/forward_rnn/peephole_lstm_cell/forget_gate_peephole_weights:0', 'sequential/bidirectional/forward_rnn/peephole_lstm_cell/output_gate_peephole_weights:0', 'sequential/bidirectional/backward_rnn/peephole_lstm_cell/kernel:0', 'sequential/bidirectional/backward_rnn/peephole_lstm_cell/recurrent_kernel:0', 'sequential/bidirectional/backward_rnn/peephole_lstm_cell/bias:0', 'sequential/bidirectional/backward_rnn/peephole_lstm_cell/input_gate_peephole_weights:0', 'sequential/bidirectional/backward_rnn/peephole_lstm_cell/forget_gate_peephole_weights:0', 'sequential/bidirectional/backward_rnn/peephole_lstm_cell/output_gate_peephole_weights:0', 'sequential/bidirectional_1/forward_rnn_1/peephole_lstm_cell_1/kernel:0', 'sequential/bidirectional_1/forward_rnn_1/peephole_lstm_cell_1/recurrent_kernel:0', 'sequential/bidirectional_1/forward_rnn_1/peephole_lstm_cell_1/bias:0', 'sequential/bidirectional_1/forward_rnn_1/peephole_lstm_cell_1/input_gate_peephole_weights:0', 'sequential/bidirectional_1/forward_rnn_1/peephole_lstm_cell_1/forget_gate_peephole_weights:0', 'sequential/bidirectional_1/forward_rnn_1/peephole_lstm_cell_1/output_gate_peephole_weights:0', 'sequential/bidirectional_1/backward_rnn_1/peephole_lstm_cell_1/kernel:0', 'sequential/bidirectional_1/backward_rnn_1/peephole_lstm_cell_1/recurrent_kernel:0', 'sequential/bidirectional_1/backward_rnn_1/peephole_lstm_cell_1/bias:0', 'sequential/bidirectional_1/backward_rnn_1/peephole_lstm_cell_1/input_gate_peephole_weights:0', 'sequential/bidirectional_1/backward_rnn_1/peephole_lstm_cell_1/forget_gate_peephole_weights:0', 'sequential/bidirectional_1/backward_rnn_1/peephole_lstm_cell_1/output_gate_peephole_weights:0', 'sequential/bidirectional_2/forward_rnn_2/peephole_lstm_cell_2/kernel:0', 'sequential/bidirectional_2/forward_rnn_2/peephole_lstm_cell_2/recurrent_kernel:0', 'sequential/bidirectional_2/forward_rnn_2/peephole_lstm_cell_2/bias:0', 'sequential/bidirectional_2/forward_rnn_2/peephole_lstm_cell_2/input_gate_peephole_weights:0', 'sequential/bidirectional_2/forward_rnn_2/peephole_lstm_cell_2/forget_gate_peephole_weights:0', 'sequential/bidirectional_2/forward_rnn_2/peephole_lstm_cell_2/output_gate_peephole_weights:0', 'sequential/bidirectional_2/backward_rnn_2/peephole_lstm_cell_2/kernel:0', 'sequential/bidirectional_2/backward_rnn_2/peephole_lstm_cell_2/recurrent_kernel:0', 'sequential/bidirectional_2/backward_rnn_2/peephole_lstm_cell_2/bias:0', 'sequential/bidirectional_2/backward_rnn_2/peephole_lstm_cell_2/input_gate_peephole_weights:0', 'sequential/bidirectional_2/backward_rnn_2/peephole_lstm_cell_2/forget_gate_peephole_weights:0', 'sequential/bidirectional_2/backward_rnn_2/peephole_lstm_cell_2/output_gate_peephole_weights:0', 'sequential/bidirectional_3/forward_rnn_3/peephole_lstm_cell_3/kernel:0', 'sequential/bidirectional_3/forward_rnn_3/peephole_lstm_cell_3/recurrent_kernel:0', 'sequential/bidirectional_3/forward_rnn_3/peephole_lstm_cell_3/bias:0', 'sequential/bidirectional_3/forward_rnn_3/peephole_lstm_cell_3/input_gate_peephole_weights:0', 'sequential/bidirectional_3/forward_rnn_3/peephole_lstm_cell_3/forget_gate_peephole_weights:0', 'sequential/bidirectional_3/forward_rnn_3/peephole_lstm_cell_3/output_gate_peephole_weights:0', 'sequential/bidirectional_3/backward_rnn_3/peephole_lstm_cell_3/kernel:0', 'sequential/bidirectional_3/backward_rnn_3/peephole_lstm_cell_3/recurrent_kernel:0', 'sequential/bidirectional_3/backward_rnn_3/peephole_lstm_cell_3/bias:0', 'sequential/bidirectional_3/backward_rnn_3/peephole_lstm_cell_3/input_gate_peephole_weights:0', 'sequential/bidirectional_3/backward_rnn_3/peephole_lstm_cell_3/forget_gate_peephole_weights:0', 'sequential/bidirectional_3/backward_rnn_3/peephole_lstm_cell_3/output_gate_peephole_weights:0', 'sequential/time_distributed/kernel:0', 'sequential/time_distributed/bias:0'].
Traceback (most recent call last):
  File ".\_2_train.py", line 388, in train
    forecaster.fit(x_train, y_train, batch_size=batch_size, epochs=epochs, workers=workers,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 66, in _method_wrapper
    return method(self, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 785, in fit
    tmp_logs = train_function(iterator)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 580, in __call__
    result = self._call(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 627, in _call
    self._initialize(args, kwds, add_initializers_to=initializers)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 505, in _initialize
    self._stateful_fn._get_concrete_function_internal_garbage_collected(  # pylint: disable=protected-access
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2446, in _get_concrete_function_internal_garbage_collected
    graph_function, _, _ = self._maybe_define_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2777, in _maybe_define_function
    graph_function = self._create_graph_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2657, in _create_graph_function
    func_graph_module.func_graph_from_py_func(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 981, in func_graph_from_py_func
    func_outputs = python_func(*func_args, **func_kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 441, in wrapped_fn
    return weak_wrapped_fn().__wrapped__(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 968, in wrapper
    raise e.ag_error_metadata.to_exception(e)
ValueError: in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:474 train_step  **
        _minimize(self.distribute_strategy, tape, self.optimizer, loss,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:1740 _minimize
        gradients = optimizer._aggregate_gradients(zip(gradients,  # pylint: disable=protected-access
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\optimizer_v2\optimizer_v2.py:525 _aggregate_gradients
        filtered_grads_and_vars = _filter_grads(grads_and_vars)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\optimizer_v2\optimizer_v2.py:1202 _filter_grads
        raise ValueError("No gradients provided for any variable: %s." %

    ValueError: No gradients provided for any variable: ['sequential/bidirectional/forward_rnn/peephole_lstm_cell/kernel:0', 'sequential/bidirectional/forward_rnn/peephole_lstm_cell/recurrent_kernel:0', 'sequential/bidirectional/forward_rnn/peephole_lstm_cell/bias:0', 'sequential/bidirectional/forward_rnn/peephole_lstm_cell/input_gate_peephole_weights:0', 'sequential/bidirectional/forward_rnn/peephole_lstm_cell/forget_gate_peephole_weights:0', 'sequential/bidirectional/forward_rnn/peephole_lstm_cell/output_gate_peephole_weights:0', 'sequential/bidirectional/backward_rnn/peephole_lstm_cell/kernel:0', 'sequential/bidirectional/backward_rnn/peephole_lstm_cell/recurrent_kernel:0', 'sequential/bidirectional/backward_rnn/peephole_lstm_cell/bias:0', 'sequential/bidirectional/backward_rnn/peephole_lstm_cell/input_gate_peephole_weights:0', 'sequential/bidirectional/backward_rnn/peephole_lstm_cell/forget_gate_peephole_weights:0', 'sequential/bidirectional/backward_rnn/peephole_lstm_cell/output_gate_peephole_weights:0', 'sequential/bidirectional_1/forward_rnn_1/peephole_lstm_cell_1/kernel:0', 'sequential/bidirectional_1/forward_rnn_1/peephole_lstm_cell_1/recurrent_kernel:0', 'sequential/bidirectional_1/forward_rnn_1/peephole_lstm_cell_1/bias:0', 'sequential/bidirectional_1/forward_rnn_1/peephole_lstm_cell_1/input_gate_peephole_weights:0', 'sequential/bidirectional_1/forward_rnn_1/peephole_lstm_cell_1/forget_gate_peephole_weights:0', 'sequential/bidirectional_1/forward_rnn_1/peephole_lstm_cell_1/output_gate_peephole_weights:0', 'sequential/bidirectional_1/backward_rnn_1/peephole_lstm_cell_1/kernel:0', 'sequential/bidirectional_1/backward_rnn_1/peephole_lstm_cell_1/recurrent_kernel:0', 'sequential/bidirectional_1/backward_rnn_1/peephole_lstm_cell_1/bias:0', 'sequential/bidirectional_1/backward_rnn_1/peephole_lstm_cell_1/input_gate_peephole_weights:0', 'sequential/bidirectional_1/backward_rnn_1/peephole_lstm_cell_1/forget_gate_peephole_weights:0', 'sequential/bidirectional_1/backward_rnn_1/peephole_lstm_cell_1/output_gate_peephole_weights:0', 'sequential/bidirectional_2/forward_rnn_2/peephole_lstm_cell_2/kernel:0', 'sequential/bidirectional_2/forward_rnn_2/peephole_lstm_cell_2/recurrent_kernel:0', 'sequential/bidirectional_2/forward_rnn_2/peephole_lstm_cell_2/bias:0', 'sequential/bidirectional_2/forward_rnn_2/peephole_lstm_cell_2/input_gate_peephole_weights:0', 'sequential/bidirectional_2/forward_rnn_2/peephole_lstm_cell_2/forget_gate_peephole_weights:0', 'sequential/bidirectional_2/forward_rnn_2/peephole_lstm_cell_2/output_gate_peephole_weights:0', 'sequential/bidirectional_2/backward_rnn_2/peephole_lstm_cell_2/kernel:0', 'sequential/bidirectional_2/backward_rnn_2/peephole_lstm_cell_2/recurrent_kernel:0', 'sequential/bidirectional_2/backward_rnn_2/peephole_lstm_cell_2/bias:0', 'sequential/bidirectional_2/backward_rnn_2/peephole_lstm_cell_2/input_gate_peephole_weights:0', 'sequential/bidirectional_2/backward_rnn_2/peephole_lstm_cell_2/forget_gate_peephole_weights:0', 'sequential/bidirectional_2/backward_rnn_2/peephole_lstm_cell_2/output_gate_peephole_weights:0', 'sequential/bidirectional_3/forward_rnn_3/peephole_lstm_cell_3/kernel:0', 'sequential/bidirectional_3/forward_rnn_3/peephole_lstm_cell_3/recurrent_kernel:0', 'sequential/bidirectional_3/forward_rnn_3/peephole_lstm_cell_3/bias:0', 'sequential/bidirectional_3/forward_rnn_3/peephole_lstm_cell_3/input_gate_peephole_weights:0', 'sequential/bidirectional_3/forward_rnn_3/peephole_lstm_cell_3/forget_gate_peephole_weights:0', 'sequential/bidirectional_3/forward_rnn_3/peephole_lstm_cell_3/output_gate_peephole_weights:0', 'sequential/bidirectional_3/backward_rnn_3/peephole_lstm_cell_3/kernel:0', 'sequential/bidirectional_3/backward_rnn_3/peephole_lstm_cell_3/recurrent_kernel:0', 'sequential/bidirectional_3/backward_rnn_3/peephole_lstm_cell_3/bias:0', 'sequential/bidirectional_3/backward_rnn_3/peephole_lstm_cell_3/input_gate_peephole_weights:0', 'sequential/bidirectional_3/backward_rnn_3/peephole_lstm_cell_3/forget_gate_peephole_weights:0', 'sequential/bidirectional_3/backward_rnn_3/peephole_lstm_cell_3/output_gate_peephole_weights:0', 'sequential/time_distributed/kernel:0', 'sequential/time_distributed/bias:0'].


10.May 2020 03:38:16 correct LSTM model creation and compilation

10.May 2020 03:38:16 correct LSTM model creation and compilation

10.May 2020 03:38:16 correct LSTM model creation and compilation

10.May 2020 03:42:15 correct LSTM model creation and compilation

10.May 2020 03:42:15 correct LSTM model creation and compilation

10.May 2020 03:42:15 correct LSTM model creation and compilation

10.May 2020 03:44:26 correct LSTM model creation and compilation

10.May 2020 03:44:26 correct LSTM model creation and compilation

10.May 2020 03:44:26 correct LSTM model creation and compilation

10.May 2020 03:46:47 correct LSTM model creation and compilation

10.May 2020 03:46:47 correct LSTM model creation and compilation

10.May 2020 03:46:47 correct LSTM model creation and compilation

10.May 2020 03:46:49 model training error
in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    .\_2_train.py:96 call  *
        denominator = tf.numpy_function(m_mape(), [local_true], tf.float32)

    TypeError: tf__m_mape() missing 1 required positional argument: 'local_true'
Traceback (most recent call last):
  File ".\_2_train.py", line 389, in train
    forecaster.fit(x_train, y_train, batch_size=batch_size, epochs=epochs, workers=workers,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 66, in _method_wrapper
    return method(self, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 785, in fit
    tmp_logs = train_function(iterator)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 580, in __call__
    result = self._call(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 627, in _call
    self._initialize(args, kwds, add_initializers_to=initializers)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 505, in _initialize
    self._stateful_fn._get_concrete_function_internal_garbage_collected(  # pylint: disable=protected-access
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2446, in _get_concrete_function_internal_garbage_collected
    graph_function, _, _ = self._maybe_define_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2777, in _maybe_define_function
    graph_function = self._create_graph_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2657, in _create_graph_function
    func_graph_module.func_graph_from_py_func(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 981, in func_graph_from_py_func
    func_outputs = python_func(*func_args, **func_kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 441, in wrapped_fn
    return weak_wrapped_fn().__wrapped__(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 968, in wrapper
    raise e.ag_error_metadata.to_exception(e)
TypeError: in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    .\_2_train.py:96 call  *
        denominator = tf.numpy_function(m_mape(), [local_true], tf.float32)

    TypeError: tf__m_mape() missing 1 required positional argument: 'local_true'


10.May 2020 03:49:43 correct LSTM model creation and compilation

10.May 2020 03:49:43 correct LSTM model creation and compilation

10.May 2020 03:49:43 correct LSTM model creation and compilation

10.May 2020 03:49:45 model training error
in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    .\_2_train.py:96 call  *
        denominator = tf.add(1, tf.abs(local_true))
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\gen_math_ops.py:346 add  **
        _, _, _op, _outputs = _op_def_library._apply_op_helper(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\op_def_library.py:503 _apply_op_helper
        raise TypeError(

    TypeError: Input 'y' of 'Add' Op has type float32 that does not match type int32 of argument 'x'.
Traceback (most recent call last):
  File ".\_2_train.py", line 389, in train
    forecaster.fit(x_train, y_train, batch_size=batch_size, epochs=epochs, workers=workers,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 66, in _method_wrapper
    return method(self, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 785, in fit
    tmp_logs = train_function(iterator)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 580, in __call__
    result = self._call(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 627, in _call
    self._initialize(args, kwds, add_initializers_to=initializers)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 505, in _initialize
    self._stateful_fn._get_concrete_function_internal_garbage_collected(  # pylint: disable=protected-access
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2446, in _get_concrete_function_internal_garbage_collected
    graph_function, _, _ = self._maybe_define_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2777, in _maybe_define_function
    graph_function = self._create_graph_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2657, in _create_graph_function
    func_graph_module.func_graph_from_py_func(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 981, in func_graph_from_py_func
    func_outputs = python_func(*func_args, **func_kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 441, in wrapped_fn
    return weak_wrapped_fn().__wrapped__(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 968, in wrapper
    raise e.ag_error_metadata.to_exception(e)
TypeError: in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    .\_2_train.py:96 call  *
        denominator = tf.add(1, tf.abs(local_true))
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\gen_math_ops.py:346 add  **
        _, _, _op, _outputs = _op_def_library._apply_op_helper(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\op_def_library.py:503 _apply_op_helper
        raise TypeError(

    TypeError: Input 'y' of 'Add' Op has type float32 that does not match type int32 of argument 'x'.


10.May 2020 03:50:08 correct LSTM model creation and compilation

10.May 2020 03:50:08 correct LSTM model creation and compilation

10.May 2020 03:50:08 correct LSTM model creation and compilation

10.May 2020 03:54:02 correct LSTM model creation and compilation

10.May 2020 03:54:02 correct LSTM model creation and compilation

10.May 2020 03:54:02 correct LSTM model creation and compilation

10.May 2020 03:54:30 model training error
2 root error(s) found.
  (0) Invalid argument:  0-th value returned by pyfunc_0 is double, but expects float
	 [[{{node custom_forecast_error/StatefulPartitionedCall/PyFunc}}]]
  (1) Invalid argument:  0-th value returned by pyfunc_0 is double, but expects float
	 [[{{node custom_forecast_error/StatefulPartitionedCall/PyFunc}}]]
	 [[custom_forecast_error/StatefulPartitionedCall/PyFunc/_1349]]
0 successful operations.
0 derived errors ignored. [Op:__inference_train_function_34685]

Function call stack:
train_function -> train_function
Traceback (most recent call last):
  File ".\_2_train.py", line 381, in train
    forecaster.fit(x_train, y_train, batch_size=batch_size, epochs=epochs, workers=workers,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 66, in _method_wrapper
    return method(self, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 785, in fit
    tmp_logs = train_function(iterator)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 580, in __call__
    result = self._call(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 644, in _call
    return self._stateless_fn(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2420, in __call__
    return graph_function._filtered_call(args, kwargs)  # pylint: disable=protected-access
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 1661, in _filtered_call
    return self._call_flat(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 1745, in _call_flat
    return self._build_call_outputs(self._inference_function.call(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 593, in call
    outputs = execute.execute(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\execute.py", line 59, in quick_execute
    tensors = pywrap_tfe.TFE_Py_Execute(ctx._handle, device_name, op_name,
tensorflow.python.framework.errors_impl.InvalidArgumentError: 2 root error(s) found.
  (0) Invalid argument:  0-th value returned by pyfunc_0 is double, but expects float
	 [[{{node custom_forecast_error/StatefulPartitionedCall/PyFunc}}]]
  (1) Invalid argument:  0-th value returned by pyfunc_0 is double, but expects float
	 [[{{node custom_forecast_error/StatefulPartitionedCall/PyFunc}}]]
	 [[custom_forecast_error/StatefulPartitionedCall/PyFunc/_1349]]
0 successful operations.
0 derived errors ignored. [Op:__inference_train_function_34685]

Function call stack:
train_function -> train_function


10.May 2020 03:55:38 correct LSTM model creation and compilation

10.May 2020 03:55:38 correct LSTM model creation and compilation

10.May 2020 03:55:38 correct LSTM model creation and compilation

10.May 2020 03:58:40 correct LSTM model creation and compilation

10.May 2020 03:58:40 correct LSTM model creation and compilation

10.May 2020 03:58:40 correct LSTM model creation and compilation

10.May 2020 03:58:42 model training error
in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    .\_2_train.py:105 call  *
        denominator = tf.where(tf.equal(local_pred, local_true), 1, denominator)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\array_ops.py:4346 where_v2  **
        return gen_math_ops.select_v2(condition=condition, t=x, e=y, name=name)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\gen_math_ops.py:8642 select_v2
        _, _, _op, _outputs = _op_def_library._apply_op_helper(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\op_def_library.py:503 _apply_op_helper
        raise TypeError(

    TypeError: Input 'e' of 'SelectV2' Op has type float32 that does not match type int32 of argument 't'.
Traceback (most recent call last):
  File ".\_2_train.py", line 382, in train
    forecaster.fit(x_train, y_train, batch_size=batch_size, epochs=epochs, workers=workers,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 66, in _method_wrapper
    return method(self, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 785, in fit
    tmp_logs = train_function(iterator)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 580, in __call__
    result = self._call(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 627, in _call
    self._initialize(args, kwds, add_initializers_to=initializers)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 505, in _initialize
    self._stateful_fn._get_concrete_function_internal_garbage_collected(  # pylint: disable=protected-access
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2446, in _get_concrete_function_internal_garbage_collected
    graph_function, _, _ = self._maybe_define_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2777, in _maybe_define_function
    graph_function = self._create_graph_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2657, in _create_graph_function
    func_graph_module.func_graph_from_py_func(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 981, in func_graph_from_py_func
    func_outputs = python_func(*func_args, **func_kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 441, in wrapped_fn
    return weak_wrapped_fn().__wrapped__(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 968, in wrapper
    raise e.ag_error_metadata.to_exception(e)
TypeError: in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    .\_2_train.py:105 call  *
        denominator = tf.where(tf.equal(local_pred, local_true), 1, denominator)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\array_ops.py:4346 where_v2  **
        return gen_math_ops.select_v2(condition=condition, t=x, e=y, name=name)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\gen_math_ops.py:8642 select_v2
        _, _, _op, _outputs = _op_def_library._apply_op_helper(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\op_def_library.py:503 _apply_op_helper
        raise TypeError(

    TypeError: Input 'e' of 'SelectV2' Op has type float32 that does not match type int32 of argument 't'.


10.May 2020 03:59:16 correct LSTM model creation and compilation

10.May 2020 03:59:16 correct LSTM model creation and compilation

10.May 2020 03:59:16 correct LSTM model creation and compilation

10.May 2020 04:02:15 correct LSTM model creation and compilation

10.May 2020 04:02:15 correct LSTM model creation and compilation

10.May 2020 04:02:15 correct LSTM model creation and compilation

10.May 2020 04:04:13 correct LSTM model creation and compilation

10.May 2020 04:04:13 correct LSTM model creation and compilation

10.May 2020 04:04:13 correct LSTM model creation and compilation

10.May 2020 04:04:15 model training error
in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    .\_2_train.py:105 call  *
        denominator = tf.where(tf.equal(local_pred, local_true), tf.constant([1]), denominator)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\array_ops.py:4346 where_v2  **
        return gen_math_ops.select_v2(condition=condition, t=x, e=y, name=name)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\gen_math_ops.py:8642 select_v2
        _, _, _op, _outputs = _op_def_library._apply_op_helper(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\op_def_library.py:503 _apply_op_helper
        raise TypeError(

    TypeError: Input 'e' of 'SelectV2' Op has type float32 that does not match type int32 of argument 't'.
Traceback (most recent call last):
  File ".\_2_train.py", line 375, in train
    forecaster.fit(x_train, y_train, batch_size=batch_size, epochs=epochs, workers=workers,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 66, in _method_wrapper
    return method(self, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 785, in fit
    tmp_logs = train_function(iterator)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 580, in __call__
    result = self._call(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 627, in _call
    self._initialize(args, kwds, add_initializers_to=initializers)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 505, in _initialize
    self._stateful_fn._get_concrete_function_internal_garbage_collected(  # pylint: disable=protected-access
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2446, in _get_concrete_function_internal_garbage_collected
    graph_function, _, _ = self._maybe_define_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2777, in _maybe_define_function
    graph_function = self._create_graph_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2657, in _create_graph_function
    func_graph_module.func_graph_from_py_func(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 981, in func_graph_from_py_func
    func_outputs = python_func(*func_args, **func_kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 441, in wrapped_fn
    return weak_wrapped_fn().__wrapped__(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 968, in wrapper
    raise e.ag_error_metadata.to_exception(e)
TypeError: in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    .\_2_train.py:105 call  *
        denominator = tf.where(tf.equal(local_pred, local_true), tf.constant([1]), denominator)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\array_ops.py:4346 where_v2  **
        return gen_math_ops.select_v2(condition=condition, t=x, e=y, name=name)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\gen_math_ops.py:8642 select_v2
        _, _, _op, _outputs = _op_def_library._apply_op_helper(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\op_def_library.py:503 _apply_op_helper
        raise TypeError(

    TypeError: Input 'e' of 'SelectV2' Op has type float32 that does not match type int32 of argument 't'.


10.May 2020 04:04:30 correct LSTM model creation and compilation

10.May 2020 04:04:30 correct LSTM model creation and compilation

10.May 2020 04:04:30 correct LSTM model creation and compilation

10.May 2020 04:12:04 correct LSTM model creation and compilation

10.May 2020 04:12:04 correct LSTM model creation and compilation

10.May 2020 04:12:04 correct LSTM model creation and compilation

10.May 2020 04:13:45 correct LSTM model creation and compilation

10.May 2020 04:13:45 correct LSTM model creation and compilation

10.May 2020 04:13:45 correct LSTM model creation and compilation

10.May 2020 04:14:54 correct LSTM model creation and compilation

10.May 2020 04:14:54 correct LSTM model creation and compilation

10.May 2020 04:14:54 correct LSTM model creation and compilation

10.May 2020 04:17:52 correct LSTM model creation and compilation

10.May 2020 04:17:52 correct LSTM model creation and compilation

10.May 2020 04:17:52 correct LSTM model creation and compilation

10.May 2020 04:18:56 correct LSTM model creation and compilation

10.May 2020 04:18:56 correct LSTM model creation and compilation

10.May 2020 04:18:56 correct LSTM model creation and compilation

10.May 2020 04:20:23 correct LSTM model creation and compilation

10.May 2020 04:20:23 correct LSTM model creation and compilation

10.May 2020 04:20:23 correct LSTM model creation and compilation

10.May 2020 04:25:25 correct LSTM model creation and compilation

10.May 2020 04:25:25 correct LSTM model creation and compilation

10.May 2020 04:25:25 correct LSTM model creation and compilation

10.May 2020 04:28:19 correct LSTM model creation and compilation

10.May 2020 04:28:19 correct LSTM model creation and compilation

10.May 2020 04:28:19 correct LSTM model creation and compilation

10.May 2020 04:29:11 correct LSTM model creation and compilation

10.May 2020 04:29:11 correct LSTM model creation and compilation

10.May 2020 04:29:11 correct LSTM model creation and compilation

10.May 2020 04:37:12 correct LSTM model creation and compilation

10.May 2020 04:37:12 correct LSTM model creation and compilation

10.May 2020 04:37:12 correct LSTM model creation and compilation

10.May 2020 04:54:28 time series number (by group) saved to forecast settings

10.May 2020 04:54:28 correct model training, correct saving of model and weights

10.May 2020 04:54:28 settings modified and saved

10.May 2020 08:55:00 correct LSTM model creation and compilation

10.May 2020 08:55:00 correct LSTM model creation and compilation

10.May 2020 08:55:00 correct LSTM model creation and compilation

10.May 2020 09:19:22 correct LSTM model creation and compilation

10.May 2020 09:19:22 correct LSTM model creation and compilation

10.May 2020 09:19:22 correct LSTM model creation and compilation

10.May 2020 09:21:33 correct LSTM model creation and compilation

10.May 2020 09:21:33 correct LSTM model creation and compilation

10.May 2020 09:21:33 correct LSTM model creation and compilation

10.May 2020 09:52:39 correct LSTM model creation and compilation

10.May 2020 09:52:39 correct LSTM model creation and compilation

10.May 2020 09:52:39 correct LSTM model creation and compilation

10.May 2020 09:57:14 correct LSTM model creation and compilation

10.May 2020 09:57:14 correct LSTM model creation and compilation

10.May 2020 09:57:14 correct LSTM model creation and compilation

10.May 2020 09:58:19 correct LSTM model creation and compilation

10.May 2020 09:58:19 correct LSTM model creation and compilation

10.May 2020 09:58:19 correct LSTM model creation and compilation

10.May 2020 10:02:29 correct LSTM model creation and compilation

10.May 2020 10:02:29 correct LSTM model creation and compilation

10.May 2020 10:02:29 correct LSTM model creation and compilation

10.May 2020 10:04:04 correct LSTM model creation and compilation

10.May 2020 10:04:04 correct LSTM model creation and compilation

10.May 2020 10:04:04 correct LSTM model creation and compilation

10.May 2020 10:05:24 correct LSTM model creation and compilation

10.May 2020 10:05:24 correct LSTM model creation and compilation

10.May 2020 10:05:24 correct LSTM model creation and compilation

10.May 2020 10:16:13 correct LSTM model creation and compilation

10.May 2020 10:16:13 correct LSTM model creation and compilation

10.May 2020 10:16:13 correct LSTM model creation and compilation

10.May 2020 10:20:01 correct LSTM model creation and compilation

10.May 2020 10:20:01 correct LSTM model creation and compilation

10.May 2020 10:20:01 correct LSTM model creation and compilation

10.May 2020 10:22:23 correct LSTM model creation and compilation

10.May 2020 10:22:23 correct LSTM model creation and compilation

10.May 2020 10:22:23 correct LSTM model creation and compilation

10.May 2020 10:24:02 correct LSTM model creation and compilation

10.May 2020 10:24:02 correct LSTM model creation and compilation

10.May 2020 10:24:02 correct LSTM model creation and compilation

10.May 2020 10:34:38 correct LSTM model creation and compilation

10.May 2020 10:34:38 correct LSTM model creation and compilation

10.May 2020 10:34:38 correct LSTM model creation and compilation

10.May 2020 10:40:13 correct LSTM model creation and compilation

10.May 2020 10:40:13 correct LSTM model creation and compilation

10.May 2020 10:40:13 correct LSTM model creation and compilation

10.May 2020 10:41:08 correct LSTM model creation and compilation

10.May 2020 10:41:08 correct LSTM model creation and compilation

10.May 2020 10:41:08 correct LSTM model creation and compilation

10.May 2020 10:45:20 correct LSTM model creation and compilation

10.May 2020 10:45:20 correct LSTM model creation and compilation

10.May 2020 10:45:20 correct LSTM model creation and compilation

10.May 2020 10:59:11 correct LSTM model creation and compilation

10.May 2020 10:59:11 correct LSTM model creation and compilation

10.May 2020 10:59:11 correct LSTM model creation and compilation

10.May 2020 11:20:38 correct LSTM model creation and compilation

10.May 2020 11:20:38 correct LSTM model creation and compilation

10.May 2020 11:20:38 correct LSTM model creation and compilation

10.May 2020 11:24:45 correct LSTM model creation and compilation

10.May 2020 11:24:45 correct LSTM model creation and compilation

10.May 2020 11:24:45 correct LSTM model creation and compilation

10.May 2020 11:25:48 correct LSTM model creation and compilation

10.May 2020 11:25:48 correct LSTM model creation and compilation

10.May 2020 11:25:48 correct LSTM model creation and compilation

10.May 2020 11:34:49 correct LSTM model creation and compilation

10.May 2020 11:34:49 correct LSTM model creation and compilation

10.May 2020 11:34:49 correct LSTM model creation and compilation

10.May 2020 11:37:25 correct LSTM model creation and compilation

10.May 2020 11:37:25 correct LSTM model creation and compilation

10.May 2020 11:37:25 correct LSTM model creation and compilation

10.May 2020 11:37:27 model training error
in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    .\_2_train.py:108 call  *
        denominator = tf.cast(np.maximum(local_pred.numpy(), local_true.numpy()), dtype=tf.float32)

    AttributeError: 'Tensor' object has no attribute 'numpy'
Traceback (most recent call last):
  File ".\_2_train.py", line 378, in train
    forecaster.fit(x_train, y_train, batch_size=batch_size, epochs=epochs, workers=workers,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 66, in _method_wrapper
    return method(self, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 785, in fit
    tmp_logs = train_function(iterator)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 580, in __call__
    result = self._call(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 627, in _call
    self._initialize(args, kwds, add_initializers_to=initializers)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 505, in _initialize
    self._stateful_fn._get_concrete_function_internal_garbage_collected(  # pylint: disable=protected-access
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2446, in _get_concrete_function_internal_garbage_collected
    graph_function, _, _ = self._maybe_define_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2777, in _maybe_define_function
    graph_function = self._create_graph_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2657, in _create_graph_function
    func_graph_module.func_graph_from_py_func(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 981, in func_graph_from_py_func
    func_outputs = python_func(*func_args, **func_kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 441, in wrapped_fn
    return weak_wrapped_fn().__wrapped__(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 968, in wrapper
    raise e.ag_error_metadata.to_exception(e)
AttributeError: in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    .\_2_train.py:108 call  *
        denominator = tf.cast(np.maximum(local_pred.numpy(), local_true.numpy()), dtype=tf.float32)

    AttributeError: 'Tensor' object has no attribute 'numpy'

2020-05-10 11:41:36,035 INFO root 
starting main program..
current models hyperparameters settings:
{'current_model_name': '_LSTM_all_features'
 'model_type': 'Bidirectional_PeepHoleLSTM_Encode_Decode'
 'regularizers_l1_l2': 'True'
 'l1': 0.001
 'l2': 0.001
 'units_layer_1': 48
 'activation_1': 'softsign'
 'return_sequences_layer_1': 'True'
 'time_steps_days': 56
 'features': 'aggregated_by_group'
 'dropout_layer_1': 0.125
 'units_layer_2': 48
 'activation_2': 'softsign'
 'return_sequences_layer_2': 'True'
 'dropout_layer_2': 0.125
 'units_layer_3': 48
 'activation_3': 'softsign'
 'return_sequences_layer_3': 'True'
 'dropout_layer_3': 0.125
 'units_layer_4': 48
 'activation_4': 'softsign'
 'return_sequences_layer_4': 'False'
 'dropout_layer_4': 0.125
 'units_final_layer': 1
 'activation_final_layer': 'None'
 'repeat_vector': 28
 'optimizer': 'adam'
 'learning_rate': 0.00175
 'loss1': 'ex_post_forecast_error'
 'loss2': 'None'
 'loss3': 'None'
 'metrics1': 'mse'
 'metrics2': 'None'
 'epochs': 250
 'batch_size': 8
 'early_stopping_patience': 7
 'workers': 6}

10.May 2020 11:49:18 correct LSTM model creation and compilation

10.May 2020 11:49:18 correct LSTM model creation and compilation

10.May 2020 11:49:18 correct LSTM model creation and compilation

10.May 2020 11:50:31 correct LSTM model creation and compilation

10.May 2020 11:50:31 correct LSTM model creation and compilation

10.May 2020 11:50:31 correct LSTM model creation and compilation

10.May 2020 11:53:30 correct LSTM model creation and compilation

10.May 2020 11:53:30 correct LSTM model creation and compilation

10.May 2020 11:53:30 correct LSTM model creation and compilation

10.May 2020 11:53:32 model training error
in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    .\_2_train.py:108 call  *
        denominator = tf.reduce_max(local_pred, local_true)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\dispatch.py:180 wrapper  **
        return target(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\math_ops.py:2419 reduce_max
        return reduce_max_with_dims(input_tensor, axis, keepdims, name,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\math_ops.py:2431 reduce_max_with_dims
        gen_math_ops._max(input_tensor, dims, keepdims, name=name))
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\gen_math_ops.py:5663 _max
        _, _, _op, _outputs = _op_def_library._apply_op_helper(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\op_def_library.py:576 _apply_op_helper
        _SatisfiesTypeConstraint(base_type,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\op_def_library.py:57 _SatisfiesTypeConstraint
        raise TypeError(

    TypeError: Value passed to parameter 'reduction_indices' has DataType float32 not in list of allowed values: int32, int64
Traceback (most recent call last):
  File ".\_2_train.py", line 378, in train
    forecaster.fit(x_train, y_train, batch_size=batch_size, epochs=epochs, workers=workers,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 66, in _method_wrapper
    return method(self, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 785, in fit
    tmp_logs = train_function(iterator)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 580, in __call__
    result = self._call(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 627, in _call
    self._initialize(args, kwds, add_initializers_to=initializers)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 505, in _initialize
    self._stateful_fn._get_concrete_function_internal_garbage_collected(  # pylint: disable=protected-access
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2446, in _get_concrete_function_internal_garbage_collected
    graph_function, _, _ = self._maybe_define_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2777, in _maybe_define_function
    graph_function = self._create_graph_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2657, in _create_graph_function
    func_graph_module.func_graph_from_py_func(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 981, in func_graph_from_py_func
    func_outputs = python_func(*func_args, **func_kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 441, in wrapped_fn
    return weak_wrapped_fn().__wrapped__(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 968, in wrapper
    raise e.ag_error_metadata.to_exception(e)
TypeError: in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    .\_2_train.py:108 call  *
        denominator = tf.reduce_max(local_pred, local_true)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\dispatch.py:180 wrapper  **
        return target(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\math_ops.py:2419 reduce_max
        return reduce_max_with_dims(input_tensor, axis, keepdims, name,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\math_ops.py:2431 reduce_max_with_dims
        gen_math_ops._max(input_tensor, dims, keepdims, name=name))
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\gen_math_ops.py:5663 _max
        _, _, _op, _outputs = _op_def_library._apply_op_helper(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\op_def_library.py:576 _apply_op_helper
        _SatisfiesTypeConstraint(base_type,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\op_def_library.py:57 _SatisfiesTypeConstraint
        raise TypeError(

    TypeError: Value passed to parameter 'reduction_indices' has DataType float32 not in list of allowed values: int32, int64


10.May 2020 11:56:35 correct LSTM model creation and compilation

10.May 2020 11:56:35 correct LSTM model creation and compilation

10.May 2020 11:56:35 correct LSTM model creation and compilation

10.May 2020 11:59:35 correct LSTM model creation and compilation

10.May 2020 11:59:35 correct LSTM model creation and compilation

10.May 2020 11:59:35 correct LSTM model creation and compilation

10.May 2020 12:05:21 correct LSTM model creation and compilation

10.May 2020 12:05:21 correct LSTM model creation and compilation

10.May 2020 12:05:22 correct LSTM model creation and compilation

10.May 2020 12:05:23 model training error
in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    .\_2_train.py:109 call  *
        return tf.math.divide_no_nan(numerator, denominator)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\dispatch.py:180 wrapper  **
        return target(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\math_ops.py:1198 div_no_nan
        return gen_math_ops.div_no_nan(x, y, name=name)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\gen_math_ops.py:3147 div_no_nan
        _, _, _op, _outputs = _op_def_library._apply_op_helper(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\op_def_library.py:742 _apply_op_helper
        op = g._create_op_internal(op_type_name, inputs, dtypes=None,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py:593 _create_op_internal
        return super(FuncGraph, self)._create_op_internal(  # pylint: disable=protected-access
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py:3319 _create_op_internal
        ret = Operation(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py:1816 __init__
        self._c_op = _create_c_op(self._graph, node_def, inputs,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py:1657 _create_c_op
        raise ValueError(str(e))

    ValueError: Dimensions must be equal, but are 1130 and 28 for '{{node div_no_nan}} = DivNoNan[T=DT_FLOAT](Abs, Max)' with input shapes: [?,28,1130], [2,?,28].
Traceback (most recent call last):
  File ".\_2_train.py", line 378, in train
    forecaster.fit(x_train, y_train, batch_size=batch_size, epochs=epochs, workers=workers,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 66, in _method_wrapper
    return method(self, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 785, in fit
    tmp_logs = train_function(iterator)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 580, in __call__
    result = self._call(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 627, in _call
    self._initialize(args, kwds, add_initializers_to=initializers)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 505, in _initialize
    self._stateful_fn._get_concrete_function_internal_garbage_collected(  # pylint: disable=protected-access
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2446, in _get_concrete_function_internal_garbage_collected
    graph_function, _, _ = self._maybe_define_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2777, in _maybe_define_function
    graph_function = self._create_graph_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2657, in _create_graph_function
    func_graph_module.func_graph_from_py_func(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 981, in func_graph_from_py_func
    func_outputs = python_func(*func_args, **func_kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 441, in wrapped_fn
    return weak_wrapped_fn().__wrapped__(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 968, in wrapper
    raise e.ag_error_metadata.to_exception(e)
ValueError: in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    .\_2_train.py:109 call  *
        return tf.math.divide_no_nan(numerator, denominator)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\dispatch.py:180 wrapper  **
        return target(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\math_ops.py:1198 div_no_nan
        return gen_math_ops.div_no_nan(x, y, name=name)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\gen_math_ops.py:3147 div_no_nan
        _, _, _op, _outputs = _op_def_library._apply_op_helper(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\op_def_library.py:742 _apply_op_helper
        op = g._create_op_internal(op_type_name, inputs, dtypes=None,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py:593 _create_op_internal
        return super(FuncGraph, self)._create_op_internal(  # pylint: disable=protected-access
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py:3319 _create_op_internal
        ret = Operation(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py:1816 __init__
        self._c_op = _create_c_op(self._graph, node_def, inputs,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py:1657 _create_c_op
        raise ValueError(str(e))

    ValueError: Dimensions must be equal, but are 1130 and 28 for '{{node div_no_nan}} = DivNoNan[T=DT_FLOAT](Abs, Max)' with input shapes: [?,28,1130], [2,?,28].


10.May 2020 12:06:22 correct LSTM model creation and compilation

10.May 2020 12:06:22 correct LSTM model creation and compilation

10.May 2020 12:06:22 correct LSTM model creation and compilation

10.May 2020 13:23:18 time series number (by group) saved to forecast settings

10.May 2020 13:23:18 correct model training, correct saving of model and weights

10.May 2020 13:23:18 settings modified and saved

10.May 2020 14:18:36 correct LSTM model creation and compilation

10.May 2020 14:18:37 correct LSTM model creation and compilation

10.May 2020 14:18:37 correct LSTM model creation and compilation

10.May 2020 14:39:25 time series number (by group) saved to forecast settings

10.May 2020 14:39:25 correct model training, correct saving of model and weights

10.May 2020 14:39:25 settings modified and saved

10.May 2020 15:10:41 correct LSTM model creation and compilation

10.May 2020 15:10:41 correct LSTM model creation and compilation

10.May 2020 15:10:41 correct LSTM model creation and compilation

10.May 2020 15:27:42 time series number (by group) saved to forecast settings

10.May 2020 15:27:42 correct model training, correct saving of model and weights

10.May 2020 15:27:42 settings modified and saved

10.May 2020 15:40:48 correct LSTM model creation and compilation

10.May 2020 15:40:48 correct LSTM model creation and compilation

10.May 2020 15:40:48 correct LSTM model creation and compilation

10.May 2020 16:05:53 time series number (by group) saved to forecast settings

10.May 2020 16:05:53 correct model training, correct saving of model and weights

10.May 2020 16:05:53 settings modified and saved

10.May 2020 16:27:16 correct LSTM model creation and compilation

10.May 2020 16:27:16 correct LSTM model creation and compilation

10.May 2020 16:27:16 correct LSTM model creation and compilation

10.May 2020 16:35:04 correct LSTM model creation and compilation

10.May 2020 16:35:04 correct LSTM model creation and compilation

10.May 2020 16:35:04 correct LSTM model creation and compilation

10.May 2020 16:38:06 correct LSTM model creation and compilation

10.May 2020 16:38:06 correct LSTM model creation and compilation

10.May 2020 16:38:06 correct LSTM model creation and compilation

10.May 2020 16:41:21 correct LSTM model creation and compilation

10.May 2020 16:41:21 correct LSTM model creation and compilation

10.May 2020 16:41:21 correct LSTM model creation and compilation

10.May 2020 16:41:22 model training error
in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    .\_2_train.py:107 call  *
        factor_difference = tf.reduce_mean(tf.abs(local_pred, -local_true))
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\dispatch.py:180 wrapper  **
        return target(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\math_ops.py:264 abs
        with ops.name_scope(name, "Abs", [x]) as name:
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py:6296 __enter__
        return self._name_scope.__enter__()
    C:\Users\Demo Windows 10\AppData\Local\Programs\Python\Python38\lib\contextlib.py:113 __enter__
        return next(self.gen)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py:4018 name_scope
        if name:
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py:778 __bool__
        self._disallow_bool_casting()
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py:544 _disallow_bool_casting
        self._disallow_when_autograph_enabled(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py:530 _disallow_when_autograph_enabled
        raise errors.OperatorNotAllowedInGraphError(

    OperatorNotAllowedInGraphError: using a `tf.Tensor` as a Python `bool` is not allowed: AutoGraph did not convert this function. Try decorating it directly with @tf.function.
Traceback (most recent call last):
  File ".\_2_train.py", line 378, in train
    forecaster.fit(x_train, y_train, batch_size=batch_size, epochs=epochs, workers=workers,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 66, in _method_wrapper
    return method(self, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 785, in fit
    tmp_logs = train_function(iterator)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 580, in __call__
    result = self._call(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 627, in _call
    self._initialize(args, kwds, add_initializers_to=initializers)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 505, in _initialize
    self._stateful_fn._get_concrete_function_internal_garbage_collected(  # pylint: disable=protected-access
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2446, in _get_concrete_function_internal_garbage_collected
    graph_function, _, _ = self._maybe_define_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2777, in _maybe_define_function
    graph_function = self._create_graph_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2657, in _create_graph_function
    func_graph_module.func_graph_from_py_func(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 981, in func_graph_from_py_func
    func_outputs = python_func(*func_args, **func_kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 441, in wrapped_fn
    return weak_wrapped_fn().__wrapped__(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 968, in wrapper
    raise e.ag_error_metadata.to_exception(e)
tensorflow.python.framework.errors_impl.OperatorNotAllowedInGraphError: in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    .\_2_train.py:107 call  *
        factor_difference = tf.reduce_mean(tf.abs(local_pred, -local_true))
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\util\dispatch.py:180 wrapper  **
        return target(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\math_ops.py:264 abs
        with ops.name_scope(name, "Abs", [x]) as name:
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py:6296 __enter__
        return self._name_scope.__enter__()
    C:\Users\Demo Windows 10\AppData\Local\Programs\Python\Python38\lib\contextlib.py:113 __enter__
        return next(self.gen)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py:4018 name_scope
        if name:
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py:778 __bool__
        self._disallow_bool_casting()
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py:544 _disallow_bool_casting
        self._disallow_when_autograph_enabled(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py:530 _disallow_when_autograph_enabled
        raise errors.OperatorNotAllowedInGraphError(

    OperatorNotAllowedInGraphError: using a `tf.Tensor` as a Python `bool` is not allowed: AutoGraph did not convert this function. Try decorating it directly with @tf.function.


10.May 2020 16:42:55 correct LSTM model creation and compilation

10.May 2020 16:42:56 correct LSTM model creation and compilation

10.May 2020 16:42:56 correct LSTM model creation and compilation

10.May 2020 17:08:11 time series number (by group) saved to forecast settings

10.May 2020 17:08:11 correct model training, correct saving of model and weights

10.May 2020 17:08:11 settings modified and saved

10.May 2020 18:08:52 correct LSTM model creation and compilation

10.May 2020 18:08:52 correct LSTM model creation and compilation

10.May 2020 18:08:52 correct LSTM model creation and compilation

10.May 2020 18:29:32 time series number (by group) saved to forecast settings

10.May 2020 18:29:32 correct model training, correct saving of model and weights

10.May 2020 18:29:32 settings modified and saved

10.May 2020 23:40:25 correct LSTM model creation and compilation

10.May 2020 23:40:25 correct LSTM model creation and compilation

10.May 2020 23:40:25 correct LSTM model creation and compilation

11.May 2020 00:01:32 time series number (by group) saved to forecast settings

11.May 2020 00:01:32 correct model training, correct saving of model and weights

11.May 2020 00:01:32 settings modified and saved

11.May 2020 00:05:15 correct LSTM model creation and compilation

11.May 2020 00:05:15 correct LSTM model creation and compilation

11.May 2020 00:05:15 correct LSTM model creation and compilation

11.May 2020 00:16:07 time series number (by group) saved to forecast settings

11.May 2020 00:16:07 correct model training, correct saving of model and weights

11.May 2020 00:16:07 settings modified and saved

11.May 2020 00:22:40 correct LSTM model creation and compilation

11.May 2020 00:22:40 correct LSTM model creation and compilation

11.May 2020 00:22:40 correct LSTM model creation and compilation

11.May 2020 00:22:41 model training error
in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:465 train_step  **
        y_pred = self(x, training=True)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py:927 __call__
        outputs = call_fn(cast_inputs, *args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\sequential.py:291 call
        outputs = layer(inputs, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py:885 __call__
        input_spec.assert_input_compatibility(self.input_spec, inputs,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\input_spec.py:176 assert_input_compatibility
        raise ValueError('Input ' + str(input_index) + ' of layer ' +

    ValueError: Input 0 of layer repeat_vector is incompatible with the layer: expected ndim=2, found ndim=3. Full shape received: [None, 28, 96]
Traceback (most recent call last):
  File ".\_2_train.py", line 378, in train
    forecaster.fit(x_train, y_train, batch_size=batch_size, epochs=epochs, workers=workers,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 66, in _method_wrapper
    return method(self, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 785, in fit
    tmp_logs = train_function(iterator)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 580, in __call__
    result = self._call(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 627, in _call
    self._initialize(args, kwds, add_initializers_to=initializers)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 505, in _initialize
    self._stateful_fn._get_concrete_function_internal_garbage_collected(  # pylint: disable=protected-access
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2446, in _get_concrete_function_internal_garbage_collected
    graph_function, _, _ = self._maybe_define_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2777, in _maybe_define_function
    graph_function = self._create_graph_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2657, in _create_graph_function
    func_graph_module.func_graph_from_py_func(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 981, in func_graph_from_py_func
    func_outputs = python_func(*func_args, **func_kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 441, in wrapped_fn
    return weak_wrapped_fn().__wrapped__(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 968, in wrapper
    raise e.ag_error_metadata.to_exception(e)
ValueError: in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:465 train_step  **
        y_pred = self(x, training=True)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py:927 __call__
        outputs = call_fn(cast_inputs, *args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\sequential.py:291 call
        outputs = layer(inputs, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py:885 __call__
        input_spec.assert_input_compatibility(self.input_spec, inputs,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\input_spec.py:176 assert_input_compatibility
        raise ValueError('Input ' + str(input_index) + ' of layer ' +

    ValueError: Input 0 of layer repeat_vector is incompatible with the layer: expected ndim=2, found ndim=3. Full shape received: [None, 28, 96]


11.May 2020 00:23:32 correct LSTM model creation and compilation

11.May 2020 00:23:32 correct LSTM model creation and compilation

11.May 2020 00:23:32 correct LSTM model creation and compilation

11.May 2020 00:28:54 time series number (by group) saved to forecast settings

11.May 2020 00:28:54 correct model training, correct saving of model and weights

11.May 2020 00:28:54 settings modified and saved

11.May 2020 00:38:09 correct LSTM model creation and compilation

11.May 2020 00:38:09 correct LSTM model creation and compilation

11.May 2020 00:38:09 correct LSTM model creation and compilation

11.May 2020 00:39:49 model training error
 OOM when allocating tensor with shape[17783,256] and type float on /job:localhost/replica:0/task:0/device:GPU:0 by allocator GPU_0_bfc
	 [[{{node sequential_1/bidirectional_1/backward_rnn_1/while/body/_492/peephole_lstm_cell_1/split}}]]
Hint: If you want to see a list of allocated tensors when OOM happens, add report_tensor_allocations_upon_oom to RunOptions for current allocation info.
 [Op:__inference_train_function_19164]

Function call stack:
train_function
Traceback (most recent call last):
  File ".\_2_train.py", line 378, in train
    forecaster.fit(x_train, y_train, batch_size=batch_size, epochs=epochs, workers=workers,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 66, in _method_wrapper
    return method(self, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 785, in fit
    tmp_logs = train_function(iterator)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 580, in __call__
    result = self._call(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 644, in _call
    return self._stateless_fn(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2420, in __call__
    return graph_function._filtered_call(args, kwargs)  # pylint: disable=protected-access
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 1661, in _filtered_call
    return self._call_flat(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 1745, in _call_flat
    return self._build_call_outputs(self._inference_function.call(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 593, in call
    outputs = execute.execute(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\execute.py", line 59, in quick_execute
    tensors = pywrap_tfe.TFE_Py_Execute(ctx._handle, device_name, op_name,
tensorflow.python.framework.errors_impl.ResourceExhaustedError:  OOM when allocating tensor with shape[17783,256] and type float on /job:localhost/replica:0/task:0/device:GPU:0 by allocator GPU_0_bfc
	 [[{{node sequential_1/bidirectional_1/backward_rnn_1/while/body/_492/peephole_lstm_cell_1/split}}]]
Hint: If you want to see a list of allocated tensors when OOM happens, add report_tensor_allocations_upon_oom to RunOptions for current allocation info.
 [Op:__inference_train_function_19164]

Function call stack:
train_function


11.May 2020 00:41:48 correct LSTM model creation and compilation

11.May 2020 00:41:48 correct LSTM model creation and compilation

11.May 2020 00:41:48 correct LSTM model creation and compilation

11.May 2020 00:43:21 model training error
 OOM when allocating tensor with shape[17783,256] and type float on /job:localhost/replica:0/task:0/device:GPU:0 by allocator GPU_0_bfc
	 [[{{node sequential_1/bidirectional_1/forward_rnn_1/while/body/_1/peephole_lstm_cell_1/split}}]]
Hint: If you want to see a list of allocated tensors when OOM happens, add report_tensor_allocations_upon_oom to RunOptions for current allocation info.
 [Op:__inference_train_function_19164]

Function call stack:
train_function
Traceback (most recent call last):
  File ".\_2_train.py", line 378, in train
    forecaster.fit(x_train, y_train, batch_size=batch_size, epochs=epochs, workers=workers,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 66, in _method_wrapper
    return method(self, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 785, in fit
    tmp_logs = train_function(iterator)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 580, in __call__
    result = self._call(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 644, in _call
    return self._stateless_fn(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2420, in __call__
    return graph_function._filtered_call(args, kwargs)  # pylint: disable=protected-access
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 1661, in _filtered_call
    return self._call_flat(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 1745, in _call_flat
    return self._build_call_outputs(self._inference_function.call(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 593, in call
    outputs = execute.execute(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\execute.py", line 59, in quick_execute
    tensors = pywrap_tfe.TFE_Py_Execute(ctx._handle, device_name, op_name,
tensorflow.python.framework.errors_impl.ResourceExhaustedError:  OOM when allocating tensor with shape[17783,256] and type float on /job:localhost/replica:0/task:0/device:GPU:0 by allocator GPU_0_bfc
	 [[{{node sequential_1/bidirectional_1/forward_rnn_1/while/body/_1/peephole_lstm_cell_1/split}}]]
Hint: If you want to see a list of allocated tensors when OOM happens, add report_tensor_allocations_upon_oom to RunOptions for current allocation info.
 [Op:__inference_train_function_19164]

Function call stack:
train_function


11.May 2020 00:56:22 correct LSTM model creation and compilation

11.May 2020 00:56:22 correct LSTM model creation and compilation

11.May 2020 00:56:22 correct LSTM model creation and compilation

11.May 2020 01:01:05 time series number (by group) saved to forecast settings

11.May 2020 01:01:05 correct model training, correct saving of model and weights

11.May 2020 01:01:05 settings modified and saved

11.May 2020 01:09:29 correct LSTM model creation and compilation

11.May 2020 01:09:29 correct LSTM model creation and compilation

11.May 2020 01:09:29 correct LSTM model creation and compilation

11.May 2020 01:13:52 correct LSTM model creation and compilation

11.May 2020 01:13:52 correct LSTM model creation and compilation

11.May 2020 01:13:52 correct LSTM model creation and compilation

11.May 2020 01:24:30 time series number (by group) saved to forecast settings

11.May 2020 01:24:30 correct model training, correct saving of model and weights

11.May 2020 01:24:30 settings modified and saved

11.May 2020 01:27:56 correct LSTM model creation and compilation

11.May 2020 01:27:56 correct LSTM model creation and compilation

11.May 2020 01:27:56 correct LSTM model creation and compilation

11.May 2020 01:29:25 model training error
 OOM when allocating tensor with shape[17783,128] and type float on /job:localhost/replica:0/task:0/device:GPU:0 by allocator GPU_0_bfc
	 [[{{node sequential_1/bidirectional_1/forward_rnn_1/while/body/_1/peephole_lstm_cell_1/split}}]]
Hint: If you want to see a list of allocated tensors when OOM happens, add report_tensor_allocations_upon_oom to RunOptions for current allocation info.
 [Op:__inference_train_function_19258]

Function call stack:
train_function
Traceback (most recent call last):
  File ".\_2_train.py", line 378, in train
    forecaster.fit(x_train, y_train, batch_size=batch_size, epochs=epochs, workers=workers,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 66, in _method_wrapper
    return method(self, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 785, in fit
    tmp_logs = train_function(iterator)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 580, in __call__
    result = self._call(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 611, in _call
    return self._stateless_fn(*args, **kwds)  # pylint: disable=not-callable
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2420, in __call__
    return graph_function._filtered_call(args, kwargs)  # pylint: disable=protected-access
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 1661, in _filtered_call
    return self._call_flat(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 1745, in _call_flat
    return self._build_call_outputs(self._inference_function.call(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 593, in call
    outputs = execute.execute(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\execute.py", line 59, in quick_execute
    tensors = pywrap_tfe.TFE_Py_Execute(ctx._handle, device_name, op_name,
tensorflow.python.framework.errors_impl.ResourceExhaustedError:  OOM when allocating tensor with shape[17783,128] and type float on /job:localhost/replica:0/task:0/device:GPU:0 by allocator GPU_0_bfc
	 [[{{node sequential_1/bidirectional_1/forward_rnn_1/while/body/_1/peephole_lstm_cell_1/split}}]]
Hint: If you want to see a list of allocated tensors when OOM happens, add report_tensor_allocations_upon_oom to RunOptions for current allocation info.
 [Op:__inference_train_function_19258]

Function call stack:
train_function


11.May 2020 06:57:37 correct LSTM model creation and compilation

11.May 2020 06:57:37 correct LSTM model creation and compilation

11.May 2020 06:57:37 correct LSTM model creation and compilation

11.May 2020 07:02:19 time series number (by group) saved to forecast settings

11.May 2020 07:02:19 correct model training, correct saving of model and weights

11.May 2020 07:02:19 settings modified and saved

11.May 2020 07:13:10 correct LSTM model creation and compilation

11.May 2020 07:13:10 correct LSTM model creation and compilation

11.May 2020 07:13:10 correct LSTM model creation and compilation

11.May 2020 07:17:41 time series number (by group) saved to forecast settings

11.May 2020 07:17:41 correct model training, correct saving of model and weights

11.May 2020 07:17:41 settings modified and saved

11.May 2020 07:21:43 correct LSTM model creation and compilation

11.May 2020 07:21:43 correct LSTM model creation and compilation

11.May 2020 07:21:43 correct LSTM model creation and compilation

11.May 2020 07:23:15 model training error
 OOM when allocating tensor with shape[17783,128] and type float on /job:localhost/replica:0/task:0/device:GPU:0 by allocator GPU_0_bfc
	 [[{{node sequential_1/bidirectional_1/forward_rnn_1/while/body/_1/peephole_lstm_cell_1/split}}]]
Hint: If you want to see a list of allocated tensors when OOM happens, add report_tensor_allocations_upon_oom to RunOptions for current allocation info.
 [Op:__inference_train_function_19258]

Function call stack:
train_function
Traceback (most recent call last):
  File ".\_2_train.py", line 381, in train
    forecaster.fit(x_train, y_train, batch_size=batch_size, epochs=epochs, workers=workers,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 66, in _method_wrapper
    return method(self, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 785, in fit
    tmp_logs = train_function(iterator)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 580, in __call__
    result = self._call(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 611, in _call
    return self._stateless_fn(*args, **kwds)  # pylint: disable=not-callable
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2420, in __call__
    return graph_function._filtered_call(args, kwargs)  # pylint: disable=protected-access
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 1661, in _filtered_call
    return self._call_flat(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 1745, in _call_flat
    return self._build_call_outputs(self._inference_function.call(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 593, in call
    outputs = execute.execute(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\execute.py", line 59, in quick_execute
    tensors = pywrap_tfe.TFE_Py_Execute(ctx._handle, device_name, op_name,
tensorflow.python.framework.errors_impl.ResourceExhaustedError:  OOM when allocating tensor with shape[17783,128] and type float on /job:localhost/replica:0/task:0/device:GPU:0 by allocator GPU_0_bfc
	 [[{{node sequential_1/bidirectional_1/forward_rnn_1/while/body/_1/peephole_lstm_cell_1/split}}]]
Hint: If you want to see a list of allocated tensors when OOM happens, add report_tensor_allocations_upon_oom to RunOptions for current allocation info.
 [Op:__inference_train_function_19258]

Function call stack:
train_function


11.May 2020 07:23:29 correct LSTM model creation and compilation

11.May 2020 07:23:29 correct LSTM model creation and compilation

11.May 2020 07:23:29 correct LSTM model creation and compilation

11.May 2020 07:28:06 time series number (by group) saved to forecast settings

11.May 2020 07:28:06 correct model training, correct saving of model and weights

11.May 2020 07:28:06 settings modified and saved

11.May 2020 07:32:20 correct LSTM model creation and compilation

11.May 2020 07:32:20 correct LSTM model creation and compilation

11.May 2020 07:32:20 correct LSTM model creation and compilation

11.May 2020 07:37:07 time series number (by group) saved to forecast settings

11.May 2020 07:37:07 correct model training, correct saving of model and weights

11.May 2020 07:37:07 settings modified and saved

11.May 2020 14:22:12 correct LSTM model creation and compilation

11.May 2020 14:22:12 correct LSTM model creation and compilation

11.May 2020 14:22:12 correct LSTM model creation and compilation

11.May 2020 14:26:41 time series number (by group) saved to forecast settings

11.May 2020 14:26:41 correct model training, correct saving of model and weights

11.May 2020 14:26:41 settings modified and saved

11.May 2020 15:21:04 correct LSTM model creation and compilation

11.May 2020 15:21:04 correct LSTM model creation and compilation

11.May 2020 15:21:04 correct LSTM model creation and compilation

11.May 2020 15:25:45 time series number (by group) saved to forecast settings

11.May 2020 15:25:45 correct model training, correct saving of model and weights

11.May 2020 15:25:45 settings modified and saved

11.May 2020 15:31:59 correct LSTM model creation and compilation

11.May 2020 15:31:59 correct LSTM model creation and compilation

11.May 2020 15:31:59 correct LSTM model creation and compilation

11.May 2020 15:36:52 time series number (by group) saved to forecast settings

11.May 2020 15:36:52 correct model training, correct saving of model and weights

11.May 2020 15:36:52 settings modified and saved

11.May 2020 15:41:23 correct LSTM model creation and compilation

11.May 2020 15:41:23 correct LSTM model creation and compilation

11.May 2020 15:41:23 correct LSTM model creation and compilation

11.May 2020 15:46:14 time series number (by group) saved to forecast settings

11.May 2020 15:46:14 correct model training, correct saving of model and weights

11.May 2020 15:46:14 settings modified and saved

11.May 2020 15:49:50 correct LSTM model creation and compilation

11.May 2020 15:49:50 correct LSTM model creation and compilation

11.May 2020 15:49:50 correct LSTM model creation and compilation

11.May 2020 15:51:41 time series number (by group) saved to forecast settings

11.May 2020 15:51:41 correct model training, correct saving of model and weights

11.May 2020 15:51:41 settings modified and saved

11.May 2020 16:05:17 correct LSTM model creation and compilation

11.May 2020 16:05:17 correct LSTM model creation and compilation

11.May 2020 16:05:17 correct LSTM model creation and compilation

11.May 2020 16:07:41 time series number (by group) saved to forecast settings

11.May 2020 16:07:41 correct model training, correct saving of model and weights

11.May 2020 16:07:41 settings modified and saved

11.May 2020 16:14:46 correct LSTM model creation and compilation

11.May 2020 16:14:46 correct LSTM model creation and compilation

11.May 2020 16:14:46 correct LSTM model creation and compilation

11.May 2020 16:17:18 time series number (by group) saved to forecast settings

11.May 2020 16:17:18 correct model training, correct saving of model and weights

11.May 2020 16:17:18 settings modified and saved

11.May 2020 16:42:16 correct LSTM model creation and compilation

11.May 2020 16:42:16 correct LSTM model creation and compilation

11.May 2020 16:42:16 correct LSTM model creation and compilation

11.May 2020 16:47:20 time series number (by group) saved to forecast settings

11.May 2020 16:47:20 correct model training, correct saving of model and weights

11.May 2020 16:47:20 settings modified and saved

11.May 2020 16:56:49 correct LSTM model creation and compilation

11.May 2020 16:56:49 correct LSTM model creation and compilation

11.May 2020 16:56:49 correct LSTM model creation and compilation

11.May 2020 16:59:36 time series number (by group) saved to forecast settings

11.May 2020 16:59:36 correct model training, correct saving of model and weights

11.May 2020 16:59:36 settings modified and saved

11.May 2020 17:03:41 correct LSTM model creation and compilation

11.May 2020 17:03:41 correct LSTM model creation and compilation

11.May 2020 17:03:41 correct LSTM model creation and compilation

11.May 2020 17:06:21 time series number (by group) saved to forecast settings

11.May 2020 17:06:21 correct model training, correct saving of model and weights

11.May 2020 17:06:21 settings modified and saved

11.May 2020 17:10:19 correct LSTM model creation and compilation

11.May 2020 17:10:19 correct LSTM model creation and compilation

11.May 2020 17:10:19 correct LSTM model creation and compilation

11.May 2020 17:13:25 time series number (by group) saved to forecast settings

11.May 2020 17:13:25 correct model training, correct saving of model and weights

11.May 2020 17:13:25 settings modified and saved

11.May 2020 19:50:17 correct LSTM model creation and compilation

11.May 2020 19:50:17 correct LSTM model creation and compilation

11.May 2020 19:50:17 correct LSTM model creation and compilation

11.May 2020 19:59:43 time series number (by group) saved to forecast settings

11.May 2020 19:59:43 correct model training, correct saving of model and weights

11.May 2020 19:59:43 settings modified and saved

12.May 2020 00:02:37 correct LSTM model creation and compilation

12.May 2020 00:02:37 correct LSTM model creation and compilation

12.May 2020 00:02:37 correct LSTM model creation and compilation

12.May 2020 00:02:38 model training error
in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:465 train_step  **
        y_pred = self(x, training=True)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py:927 __call__
        outputs = call_fn(cast_inputs, *args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\sequential.py:291 call
        outputs = layer(inputs, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py:885 __call__
        input_spec.assert_input_compatibility(self.input_spec, inputs,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\input_spec.py:176 assert_input_compatibility
        raise ValueError('Input ' + str(input_index) + ' of layer ' +

    ValueError: Input 0 of layer repeat_vector_1 is incompatible with the layer: expected ndim=2, found ndim=3. Full shape received: [None, 28, 96]
Traceback (most recent call last):
  File ".\_2_train.py", line 390, in train
    forecaster.fit(x_train, y_train, batch_size=batch_size, epochs=epochs, workers=workers,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 66, in _method_wrapper
    return method(self, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 785, in fit
    tmp_logs = train_function(iterator)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 580, in __call__
    result = self._call(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 627, in _call
    self._initialize(args, kwds, add_initializers_to=initializers)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 505, in _initialize
    self._stateful_fn._get_concrete_function_internal_garbage_collected(  # pylint: disable=protected-access
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2446, in _get_concrete_function_internal_garbage_collected
    graph_function, _, _ = self._maybe_define_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2777, in _maybe_define_function
    graph_function = self._create_graph_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2657, in _create_graph_function
    func_graph_module.func_graph_from_py_func(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 981, in func_graph_from_py_func
    func_outputs = python_func(*func_args, **func_kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 441, in wrapped_fn
    return weak_wrapped_fn().__wrapped__(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 968, in wrapper
    raise e.ag_error_metadata.to_exception(e)
ValueError: in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:465 train_step  **
        y_pred = self(x, training=True)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py:927 __call__
        outputs = call_fn(cast_inputs, *args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\sequential.py:291 call
        outputs = layer(inputs, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py:885 __call__
        input_spec.assert_input_compatibility(self.input_spec, inputs,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\input_spec.py:176 assert_input_compatibility
        raise ValueError('Input ' + str(input_index) + ' of layer ' +

    ValueError: Input 0 of layer repeat_vector_1 is incompatible with the layer: expected ndim=2, found ndim=3. Full shape received: [None, 28, 96]


12.May 2020 00:07:26 correct LSTM model creation and compilation

12.May 2020 00:07:26 correct LSTM model creation and compilation

12.May 2020 00:07:26 correct LSTM model creation and compilation

12.May 2020 00:19:57 time series number (by group) saved to forecast settings

12.May 2020 00:19:57 correct model training, correct saving of model and weights

12.May 2020 00:19:57 settings modified and saved

12.May 2020 00:32:53 correct LSTM model creation and compilation

12.May 2020 00:32:53 correct LSTM model creation and compilation

12.May 2020 00:32:53 correct LSTM model creation and compilation

12.May 2020 00:45:00 time series number (by group) saved to forecast settings

12.May 2020 00:45:00 correct model training, correct saving of model and weights

12.May 2020 00:45:00 settings modified and saved

12.May 2020 00:53:14 correct LSTM model creation and compilation

12.May 2020 00:53:14 correct LSTM model creation and compilation

12.May 2020 00:53:14 correct LSTM model creation and compilation

12.May 2020 01:12:03 time series number (by group) saved to forecast settings

12.May 2020 01:12:03 correct model training, correct saving of model and weights

12.May 2020 01:12:03 settings modified and saved

12.May 2020 07:07:17 correct LSTM model creation and compilation

12.May 2020 07:07:17 correct LSTM model creation and compilation

12.May 2020 07:07:17 correct LSTM model creation and compilation

12.May 2020 07:15:18 model training error
 OOM when allocating tensor with shape[17783,96] and type float on /job:localhost/replica:0/task:0/device:GPU:0 by allocator GPU_0_bfc
	 [[{{node sequential_1/bidirectional_2/forward_rnn_2/while/body/_1/peephole_lstm_cell_2/split}}]]
Hint: If you want to see a list of allocated tensors when OOM happens, add report_tensor_allocations_upon_oom to RunOptions for current allocation info.
 [Op:__inference_train_function_47585]

Function call stack:
train_function
Traceback (most recent call last):
  File ".\_2_train.py", line 395, in train
    forecaster.fit(x_train, y_train, batch_size=batch_size, epochs=epochs, workers=workers,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 66, in _method_wrapper
    return method(self, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 785, in fit
    tmp_logs = train_function(iterator)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 580, in __call__
    result = self._call(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 644, in _call
    return self._stateless_fn(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2420, in __call__
    return graph_function._filtered_call(args, kwargs)  # pylint: disable=protected-access
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 1661, in _filtered_call
    return self._call_flat(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 1745, in _call_flat
    return self._build_call_outputs(self._inference_function.call(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 593, in call
    outputs = execute.execute(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\execute.py", line 59, in quick_execute
    tensors = pywrap_tfe.TFE_Py_Execute(ctx._handle, device_name, op_name,
tensorflow.python.framework.errors_impl.ResourceExhaustedError:  OOM when allocating tensor with shape[17783,96] and type float on /job:localhost/replica:0/task:0/device:GPU:0 by allocator GPU_0_bfc
	 [[{{node sequential_1/bidirectional_2/forward_rnn_2/while/body/_1/peephole_lstm_cell_2/split}}]]
Hint: If you want to see a list of allocated tensors when OOM happens, add report_tensor_allocations_upon_oom to RunOptions for current allocation info.
 [Op:__inference_train_function_47585]

Function call stack:
train_function


12.May 2020 07:47:41 correct LSTM model creation and compilation

12.May 2020 07:47:41 correct LSTM model creation and compilation

12.May 2020 07:47:41 correct LSTM model creation and compilation

12.May 2020 08:03:32 time series number (by group) saved to forecast settings

12.May 2020 08:03:32 correct model training, correct saving of model and weights

12.May 2020 08:03:32 settings modified and saved

12.May 2020 14:19:19 correct LSTM model creation and compilation

12.May 2020 14:19:19 correct LSTM model creation and compilation

12.May 2020 14:19:19 correct LSTM model creation and compilation

12.May 2020 14:31:25 time series number (by group) saved to forecast settings

12.May 2020 14:31:25 correct model training, correct saving of model and weights

12.May 2020 14:31:25 settings modified and saved

12.May 2020 15:07:29 correct LSTM model creation and compilation

12.May 2020 15:07:29 correct LSTM model creation and compilation

12.May 2020 15:07:29 correct LSTM model creation and compilation

12.May 2020 15:23:16 time series number (by group) saved to forecast settings

12.May 2020 15:23:16 correct model training, correct saving of model and weights

12.May 2020 15:23:16 settings modified and saved

12.May 2020 15:53:30 correct LSTM model creation and compilation

12.May 2020 15:53:30 correct LSTM model creation and compilation

12.May 2020 15:53:30 correct LSTM model creation and compilation

12.May 2020 16:14:55 time series number (by group) saved to forecast settings

12.May 2020 16:14:55 correct model training, correct saving of model and weights

12.May 2020 16:14:55 settings modified and saved

12.May 2020 16:20:36 correct LSTM model creation and compilation

12.May 2020 16:20:36 correct LSTM model creation and compilation

12.May 2020 16:20:36 correct LSTM model creation and compilation

12.May 2020 16:37:50 time series number (by group) saved to forecast settings

12.May 2020 16:37:50 correct model training, correct saving of model and weights

12.May 2020 16:37:50 settings modified and saved

12.May 2020 16:40:10 correct LSTM model creation and compilation

12.May 2020 16:40:10 correct LSTM model creation and compilation

12.May 2020 16:40:10 correct LSTM model creation and compilation

12.May 2020 16:55:32 time series number (by group) saved to forecast settings

12.May 2020 16:55:32 correct model training, correct saving of model and weights

12.May 2020 16:55:32 settings modified and saved

12.May 2020 16:59:04 correct LSTM model creation and compilation

12.May 2020 16:59:04 correct LSTM model creation and compilation

12.May 2020 16:59:04 correct LSTM model creation and compilation

12.May 2020 17:00:29 time series number (by group) saved to forecast settings

12.May 2020 17:00:29 correct model training, correct saving of model and weights

12.May 2020 17:00:29 settings modified and saved

12.May 2020 17:33:41 correct LSTM model creation and compilation

12.May 2020 17:33:41 correct LSTM model creation and compilation

12.May 2020 17:33:41 correct LSTM model creation and compilation

12.May 2020 17:35:48 time series number (by group) saved to forecast settings

12.May 2020 17:35:48 correct model training, correct saving of model and weights

12.May 2020 17:35:48 settings modified and saved

12.May 2020 17:44:48 correct LSTM model creation and compilation

12.May 2020 17:44:48 correct LSTM model creation and compilation

12.May 2020 17:44:48 correct LSTM model creation and compilation

12.May 2020 17:47:42 time series number (by group) saved to forecast settings

12.May 2020 17:47:42 correct model training, correct saving of model and weights

12.May 2020 17:47:42 settings modified and saved

12.May 2020 18:26:58 correct LSTM model creation and compilation

12.May 2020 18:26:59 correct LSTM model creation and compilation

12.May 2020 18:26:59 correct LSTM model creation and compilation

12.May 2020 18:28:10 time series number (by group) saved to forecast settings

12.May 2020 18:28:10 correct model training, correct saving of model and weights

12.May 2020 18:28:10 settings modified and saved

12.May 2020 18:37:08 correct LSTM model creation and compilation

12.May 2020 18:37:08 correct LSTM model creation and compilation

12.May 2020 18:37:08 correct LSTM model creation and compilation

12.May 2020 18:40:32 time series number (by group) saved to forecast settings

12.May 2020 18:40:32 correct model training, correct saving of model and weights

12.May 2020 18:40:32 settings modified and saved

12.May 2020 18:50:31 correct LSTM model creation and compilation

12.May 2020 18:50:31 correct LSTM model creation and compilation

12.May 2020 18:50:31 correct LSTM model creation and compilation

12.May 2020 18:53:50 time series number (by group) saved to forecast settings

12.May 2020 18:53:50 correct model training, correct saving of model and weights

12.May 2020 18:53:50 settings modified and saved

12.May 2020 18:56:04 correct LSTM model creation and compilation

12.May 2020 18:56:04 correct LSTM model creation and compilation

12.May 2020 18:56:04 correct LSTM model creation and compilation

12.May 2020 18:56:34 time series number (by group) saved to forecast settings

12.May 2020 18:56:34 correct model training, correct saving of model and weights

12.May 2020 18:56:34 settings modified and saved

12.May 2020 19:00:29 correct LSTM model creation and compilation

12.May 2020 19:00:29 correct LSTM model creation and compilation

12.May 2020 19:00:29 correct LSTM model creation and compilation

12.May 2020 19:02:10 time series number (by group) saved to forecast settings

12.May 2020 19:02:10 correct model training, correct saving of model and weights

12.May 2020 19:02:10 settings modified and saved

12.May 2020 19:06:27 correct LSTM model creation and compilation

12.May 2020 19:06:27 correct LSTM model creation and compilation

12.May 2020 19:06:27 correct LSTM model creation and compilation

12.May 2020 19:07:30 time series number (by group) saved to forecast settings

12.May 2020 19:07:30 correct model training, correct saving of model and weights

12.May 2020 19:07:30 settings modified and saved

12.May 2020 19:12:15 correct LSTM model creation and compilation

12.May 2020 19:12:15 correct LSTM model creation and compilation

12.May 2020 19:12:15 correct LSTM model creation and compilation

12.May 2020 19:13:12 time series number (by group) saved to forecast settings

12.May 2020 19:13:12 correct model training, correct saving of model and weights

12.May 2020 19:13:12 settings modified and saved

12.May 2020 19:16:43 correct LSTM model creation and compilation

12.May 2020 19:16:43 correct LSTM model creation and compilation

12.May 2020 19:16:43 correct LSTM model creation and compilation

12.May 2020 19:18:56 model training error
 OOM when allocating tensor with shape[44,17783] and type float on /job:localhost/replica:0/task:0/device:GPU:0 by allocator GPU_0_bfc
	 [[{{node sequential_1/bidirectional_2/backward_rnn_2/while/body/_247/peephole_lstm_cell_2/mul_1}}]]
Hint: If you want to see a list of allocated tensors when OOM happens, add report_tensor_allocations_upon_oom to RunOptions for current allocation info.
 [Op:__inference_train_function_22784]

Function call stack:
train_function
Traceback (most recent call last):
  File ".\_2_train.py", line 395, in train
    forecaster.fit(x_train, y_train, batch_size=batch_size, epochs=epochs, workers=workers,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 66, in _method_wrapper
    return method(self, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 785, in fit
    tmp_logs = train_function(iterator)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 580, in __call__
    result = self._call(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 644, in _call
    return self._stateless_fn(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2420, in __call__
    return graph_function._filtered_call(args, kwargs)  # pylint: disable=protected-access
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 1661, in _filtered_call
    return self._call_flat(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 1745, in _call_flat
    return self._build_call_outputs(self._inference_function.call(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 593, in call
    outputs = execute.execute(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\execute.py", line 59, in quick_execute
    tensors = pywrap_tfe.TFE_Py_Execute(ctx._handle, device_name, op_name,
tensorflow.python.framework.errors_impl.ResourceExhaustedError:  OOM when allocating tensor with shape[44,17783] and type float on /job:localhost/replica:0/task:0/device:GPU:0 by allocator GPU_0_bfc
	 [[{{node sequential_1/bidirectional_2/backward_rnn_2/while/body/_247/peephole_lstm_cell_2/mul_1}}]]
Hint: If you want to see a list of allocated tensors when OOM happens, add report_tensor_allocations_upon_oom to RunOptions for current allocation info.
 [Op:__inference_train_function_22784]

Function call stack:
train_function


12.May 2020 19:22:30 correct LSTM model creation and compilation

12.May 2020 19:22:30 correct LSTM model creation and compilation

12.May 2020 19:22:30 correct LSTM model creation and compilation

12.May 2020 19:23:00 time series number (by group) saved to forecast settings

12.May 2020 19:23:00 correct model training, correct saving of model and weights

12.May 2020 19:23:00 settings modified and saved

12.May 2020 19:26:55 correct LSTM model creation and compilation

12.May 2020 19:26:55 correct LSTM model creation and compilation

12.May 2020 19:26:55 correct LSTM model creation and compilation

12.May 2020 19:27:12 time series number (by group) saved to forecast settings

12.May 2020 19:27:12 correct model training, correct saving of model and weights

12.May 2020 19:27:12 settings modified and saved

12.May 2020 20:03:46 correct LSTM model creation and compilation

12.May 2020 20:03:46 correct LSTM model creation and compilation

12.May 2020 20:03:46 correct LSTM model creation and compilation

12.May 2020 20:04:16 time series number (by group) saved to forecast settings

12.May 2020 20:04:16 correct model training, correct saving of model and weights

12.May 2020 20:04:16 settings modified and saved

12.May 2020 20:09:04 correct LSTM model creation and compilation

12.May 2020 20:09:04 correct LSTM model creation and compilation

12.May 2020 20:09:04 correct LSTM model creation and compilation

12.May 2020 20:09:33 time series number (by group) saved to forecast settings

12.May 2020 20:09:33 correct model training, correct saving of model and weights

12.May 2020 20:09:33 settings modified and saved

12.May 2020 20:14:54 correct LSTM model creation and compilation

12.May 2020 20:14:54 correct LSTM model creation and compilation

12.May 2020 20:14:54 correct LSTM model creation and compilation

12.May 2020 20:18:03 model training error
 OOM when allocating tensor with shape[5000,20000] and type float on /job:localhost/replica:0/task:0/device:GPU:0 by allocator GPU_0_bfc
	 [[node gradient_tape/sequential/bidirectional/backward_rnn/while/zeros_2 (defined at .\_2_train.py:395) ]]
Hint: If you want to see a list of allocated tensors when OOM happens, add report_tensor_allocations_upon_oom to RunOptions for current allocation info.
 [Op:__inference_train_function_11273]

Function call stack:
train_function
Traceback (most recent call last):
  File ".\_2_train.py", line 395, in train
    forecaster.fit(x_train, y_train, batch_size=batch_size, epochs=epochs, workers=workers,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 66, in _method_wrapper
    return method(self, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 785, in fit
    tmp_logs = train_function(iterator)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 580, in __call__
    result = self._call(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 644, in _call
    return self._stateless_fn(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2420, in __call__
    return graph_function._filtered_call(args, kwargs)  # pylint: disable=protected-access
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 1661, in _filtered_call
    return self._call_flat(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 1745, in _call_flat
    return self._build_call_outputs(self._inference_function.call(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 593, in call
    outputs = execute.execute(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\execute.py", line 59, in quick_execute
    tensors = pywrap_tfe.TFE_Py_Execute(ctx._handle, device_name, op_name,
tensorflow.python.framework.errors_impl.ResourceExhaustedError:  OOM when allocating tensor with shape[5000,20000] and type float on /job:localhost/replica:0/task:0/device:GPU:0 by allocator GPU_0_bfc
	 [[node gradient_tape/sequential/bidirectional/backward_rnn/while/zeros_2 (defined at .\_2_train.py:395) ]]
Hint: If you want to see a list of allocated tensors when OOM happens, add report_tensor_allocations_upon_oom to RunOptions for current allocation info.
 [Op:__inference_train_function_11273]

Function call stack:
train_function


12.May 2020 20:19:46 correct LSTM model creation and compilation

12.May 2020 20:19:46 correct LSTM model creation and compilation

12.May 2020 20:19:46 correct LSTM model creation and compilation

12.May 2020 20:20:25 model training error
 OOM when allocating tensor with shape[17783,500] and type float on /job:localhost/replica:0/task:0/device:GPU:0 by allocator GPU_0_bfc
	 [[{{node sequential_1/bidirectional_2/forward_rnn_2/while/body/_1/peephole_lstm_cell_2/split}}]]
Hint: If you want to see a list of allocated tensors when OOM happens, add report_tensor_allocations_upon_oom to RunOptions for current allocation info.
 [Op:__inference_train_function_22832]

Function call stack:
train_function
Traceback (most recent call last):
  File ".\_2_train.py", line 395, in train
    forecaster.fit(x_train, y_train, batch_size=batch_size, epochs=epochs, workers=workers,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 66, in _method_wrapper
    return method(self, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 785, in fit
    tmp_logs = train_function(iterator)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 580, in __call__
    result = self._call(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 644, in _call
    return self._stateless_fn(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2420, in __call__
    return graph_function._filtered_call(args, kwargs)  # pylint: disable=protected-access
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 1661, in _filtered_call
    return self._call_flat(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 1745, in _call_flat
    return self._build_call_outputs(self._inference_function.call(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 593, in call
    outputs = execute.execute(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\execute.py", line 59, in quick_execute
    tensors = pywrap_tfe.TFE_Py_Execute(ctx._handle, device_name, op_name,
tensorflow.python.framework.errors_impl.ResourceExhaustedError:  OOM when allocating tensor with shape[17783,500] and type float on /job:localhost/replica:0/task:0/device:GPU:0 by allocator GPU_0_bfc
	 [[{{node sequential_1/bidirectional_2/forward_rnn_2/while/body/_1/peephole_lstm_cell_2/split}}]]
Hint: If you want to see a list of allocated tensors when OOM happens, add report_tensor_allocations_upon_oom to RunOptions for current allocation info.
 [Op:__inference_train_function_22832]

Function call stack:
train_function


12.May 2020 20:23:16 correct LSTM model creation and compilation

12.May 2020 20:23:16 correct LSTM model creation and compilation

12.May 2020 20:23:16 correct LSTM model creation and compilation

12.May 2020 20:24:08 correct LSTM model creation and compilation

12.May 2020 20:24:08 correct LSTM model creation and compilation

12.May 2020 20:24:08 correct LSTM model creation and compilation

12.May 2020 20:26:38 correct LSTM model creation and compilation

12.May 2020 20:26:38 correct LSTM model creation and compilation

12.May 2020 20:26:38 correct LSTM model creation and compilation

12.May 2020 20:27:09 time series number (by group) saved to forecast settings

12.May 2020 20:27:09 correct model training, correct saving of model and weights

12.May 2020 20:27:09 settings modified and saved

12.May 2020 20:32:01 correct LSTM model creation and compilation

12.May 2020 20:32:01 correct LSTM model creation and compilation

12.May 2020 20:32:01 correct LSTM model creation and compilation

12.May 2020 20:32:31 time series number (by group) saved to forecast settings

12.May 2020 20:32:31 correct model training, correct saving of model and weights

12.May 2020 20:32:31 settings modified and saved

12.May 2020 20:35:58 correct LSTM model creation and compilation

12.May 2020 20:35:58 correct LSTM model creation and compilation

12.May 2020 20:35:58 correct LSTM model creation and compilation

12.May 2020 20:37:01 correct LSTM model creation and compilation

12.May 2020 20:37:01 correct LSTM model creation and compilation

12.May 2020 20:37:01 correct LSTM model creation and compilation

12.May 2020 20:37:31 time series number (by group) saved to forecast settings

12.May 2020 20:37:31 correct model training, correct saving of model and weights

12.May 2020 20:37:31 settings modified and saved

12.May 2020 20:39:26 correct LSTM model creation and compilation

12.May 2020 20:39:26 correct LSTM model creation and compilation

12.May 2020 20:39:26 correct LSTM model creation and compilation

12.May 2020 20:39:55 time series number (by group) saved to forecast settings

12.May 2020 20:39:55 correct model training, correct saving of model and weights

12.May 2020 20:39:55 settings modified and saved

12.May 2020 20:42:20 correct LSTM model creation and compilation

12.May 2020 20:42:20 correct LSTM model creation and compilation

12.May 2020 20:42:20 correct LSTM model creation and compilation

12.May 2020 20:43:18 time series number (by group) saved to forecast settings

12.May 2020 20:43:18 correct model training, correct saving of model and weights

12.May 2020 20:43:18 settings modified and saved

12.May 2020 20:50:11 correct LSTM model creation and compilation

12.May 2020 20:50:11 correct LSTM model creation and compilation

12.May 2020 20:50:11 correct LSTM model creation and compilation

12.May 2020 20:50:40 time series number (by group) saved to forecast settings

12.May 2020 20:50:40 correct model training, correct saving of model and weights

12.May 2020 20:50:40 settings modified and saved

12.May 2020 20:53:52 correct LSTM model creation and compilation

12.May 2020 20:53:53 correct LSTM model creation and compilation

12.May 2020 20:53:53 correct LSTM model creation and compilation

12.May 2020 20:54:22 time series number (by group) saved to forecast settings

12.May 2020 20:54:22 correct model training, correct saving of model and weights

12.May 2020 20:54:22 settings modified and saved

12.May 2020 20:58:20 correct LSTM model creation and compilation

12.May 2020 20:58:20 correct LSTM model creation and compilation

12.May 2020 20:58:20 correct LSTM model creation and compilation

12.May 2020 20:58:50 time series number (by group) saved to forecast settings

12.May 2020 20:58:50 correct model training, correct saving of model and weights

12.May 2020 20:58:50 settings modified and saved

12.May 2020 21:00:43 correct LSTM model creation and compilation

12.May 2020 21:00:43 correct LSTM model creation and compilation

12.May 2020 21:00:43 correct LSTM model creation and compilation

12.May 2020 21:01:13 time series number (by group) saved to forecast settings

12.May 2020 21:01:13 correct model training, correct saving of model and weights

12.May 2020 21:01:13 settings modified and saved

12.May 2020 21:03:38 correct LSTM model creation and compilation

12.May 2020 21:03:38 correct LSTM model creation and compilation

12.May 2020 21:03:38 correct LSTM model creation and compilation

12.May 2020 21:04:07 time series number (by group) saved to forecast settings

12.May 2020 21:04:07 correct model training, correct saving of model and weights

12.May 2020 21:04:07 settings modified and saved

12.May 2020 21:06:42 correct LSTM model creation and compilation

12.May 2020 21:06:42 correct LSTM model creation and compilation

12.May 2020 21:06:42 correct LSTM model creation and compilation

12.May 2020 21:07:12 time series number (by group) saved to forecast settings

12.May 2020 21:07:12 correct model training, correct saving of model and weights

12.May 2020 21:07:12 settings modified and saved

12.May 2020 21:12:54 LSTM model creation or compile error
The RNN cell should have an attribute `state_size` (tuple of integers, one integer per RNN state).
Traceback (most recent call last):
  File ".\_2_train.py", line 330, in train
    forecaster.add(layers.Bidirectional(layers.RNN(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\layers\recurrent.py", line 403, in __init__
    raise ValueError('The RNN cell should have '
ValueError: The RNN cell should have an attribute `state_size` (tuple of integers, one integer per RNN state).

12.May 2020 21:12:54 model training error
list index out of range
Traceback (most recent call last):
  File ".\_2_train.py", line 394, in train
    forecaster = forecaster_models_list[group_iterator]
IndexError: list index out of range

12.May 2020 21:14:54 LSTM model creation or compile error
('Keyword argument not understood:', 'return_sequences')
Traceback (most recent call last):
  File ".\_2_train.py", line 330, in train
    forecaster.add(layers.Bidirectional(layers.LSTM(units=model_hyperparameters['units_layer_4'],
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\layers\wrappers.py", line 414, in __init__
    super(Bidirectional, self).__init__(layer, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\layers\wrappers.py", line 54, in __init__
    super(Wrapper, self).__init__(**kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\training\tracking\base.py", line 456, in _method_wrapper
    result = method(self, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py", line 294, in __init__
    generic_utils.validate_kwargs(kwargs, allowed_kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\utils\generic_utils.py", line 792, in validate_kwargs
    raise TypeError(error_message, kwarg)
TypeError: ('Keyword argument not understood:', 'return_sequences')

12.May 2020 21:14:54 model training error
list index out of range
Traceback (most recent call last):
  File ".\_2_train.py", line 393, in train
    forecaster = forecaster_models_list[group_iterator]
IndexError: list index out of range

12.May 2020 21:17:47 correct LSTM model creation and compilation

12.May 2020 21:17:47 correct LSTM model creation and compilation

12.May 2020 21:17:47 correct LSTM model creation and compilation

12.May 2020 21:17:48 model training error
in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:465 train_step  **
        y_pred = self(x, training=True)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py:927 __call__
        outputs = call_fn(cast_inputs, *args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\sequential.py:291 call
        outputs = layer(inputs, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\layers\recurrent.py:654 __call__
        return super(RNN, self).__call__(inputs, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py:927 __call__
        outputs = call_fn(cast_inputs, *args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\layers\recurrent.py:784 call
        last_output, outputs, states = K.rnn(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\backend.py:4236 rnn
        final_outputs = control_flow_ops.while_loop(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\control_flow_ops.py:2679 while_loop
        return while_v2.while_loop(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\while_v2.py:188 while_loop
        body_graph = func_graph_module.func_graph_from_py_func(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py:981 func_graph_from_py_func
        func_outputs = python_func(*func_args, **func_kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\while_v2.py:174 wrapped_body
        outputs = body(*_pack_sequence_as(orig_loop_vars, args))
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\backend.py:4222 _step
        output, new_states = step_function(current_input,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\layers\recurrent.py:780 step
        output, new_states = cell_call_fn(inputs, states, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py:955 __call__
        self._handle_activity_regularization(inputs, outputs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py:2214 _handle_activity_regularization
        base_layer_utils.check_graph_consistency(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer_utils.py:546 check_graph_consistency
        raise RuntimeError(

    RuntimeError: You are using a layer with `activity_regularizer` in a control flow branch, e.g.:
    
          class TestModel(tf.keras.Model):
    
            def __init__(self):
              super(TestModel, self).__init__(name='test_model')
              self.dense = tf.keras.layers.Dense(2, activity_regularizer='l2')
    
            def call(self, x, training=None):
              if training:
                return self.dense(x)
              else:
                return self.dense(x)
          
    This is currently not supported. Please move your call to the layer with `activity_regularizer` out of the control flow branch, e.g.:
    
          class TestModel(tf.keras.Model):
    
            def __init__(self):
              super(TestModel, self).__init__(name='test_model')
              self.dense = tf.keras.layers.Dense(2, activity_regularizer='l2')
    
            def call(self, x, training=None):
              return self.dense(x)
          
    You can also resolve this by marking your outer model/layer dynamic (eager-only) by passing `dynamic=True` to the layer constructor. Any kind of control flow is supported with dynamic layers. Note that using `dynamic=True` requires you to implement static shape inference in the `compute_output_shape(input_shape)` method.
Traceback (most recent call last):
  File ".\_2_train.py", line 395, in train
    forecaster.fit(x_train, y_train, batch_size=batch_size, epochs=epochs, workers=workers,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 66, in _method_wrapper
    return method(self, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 785, in fit
    tmp_logs = train_function(iterator)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 580, in __call__
    result = self._call(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 627, in _call
    self._initialize(args, kwds, add_initializers_to=initializers)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 505, in _initialize
    self._stateful_fn._get_concrete_function_internal_garbage_collected(  # pylint: disable=protected-access
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2446, in _get_concrete_function_internal_garbage_collected
    graph_function, _, _ = self._maybe_define_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2777, in _maybe_define_function
    graph_function = self._create_graph_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2657, in _create_graph_function
    func_graph_module.func_graph_from_py_func(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 981, in func_graph_from_py_func
    func_outputs = python_func(*func_args, **func_kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 441, in wrapped_fn
    return weak_wrapped_fn().__wrapped__(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 968, in wrapper
    raise e.ag_error_metadata.to_exception(e)
RuntimeError: in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:465 train_step  **
        y_pred = self(x, training=True)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py:927 __call__
        outputs = call_fn(cast_inputs, *args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\sequential.py:291 call
        outputs = layer(inputs, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\layers\recurrent.py:654 __call__
        return super(RNN, self).__call__(inputs, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py:927 __call__
        outputs = call_fn(cast_inputs, *args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\layers\recurrent.py:784 call
        last_output, outputs, states = K.rnn(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\backend.py:4236 rnn
        final_outputs = control_flow_ops.while_loop(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\control_flow_ops.py:2679 while_loop
        return while_v2.while_loop(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\while_v2.py:188 while_loop
        body_graph = func_graph_module.func_graph_from_py_func(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py:981 func_graph_from_py_func
        func_outputs = python_func(*func_args, **func_kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\while_v2.py:174 wrapped_body
        outputs = body(*_pack_sequence_as(orig_loop_vars, args))
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\backend.py:4222 _step
        output, new_states = step_function(current_input,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\layers\recurrent.py:780 step
        output, new_states = cell_call_fn(inputs, states, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py:955 __call__
        self._handle_activity_regularization(inputs, outputs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py:2214 _handle_activity_regularization
        base_layer_utils.check_graph_consistency(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer_utils.py:546 check_graph_consistency
        raise RuntimeError(

    RuntimeError: You are using a layer with `activity_regularizer` in a control flow branch, e.g.:
    
          class TestModel(tf.keras.Model):
    
            def __init__(self):
              super(TestModel, self).__init__(name='test_model')
              self.dense = tf.keras.layers.Dense(2, activity_regularizer='l2')
    
            def call(self, x, training=None):
              if training:
                return self.dense(x)
              else:
                return self.dense(x)
          
    This is currently not supported. Please move your call to the layer with `activity_regularizer` out of the control flow branch, e.g.:
    
          class TestModel(tf.keras.Model):
    
            def __init__(self):
              super(TestModel, self).__init__(name='test_model')
              self.dense = tf.keras.layers.Dense(2, activity_regularizer='l2')
    
            def call(self, x, training=None):
              return self.dense(x)
          
    You can also resolve this by marking your outer model/layer dynamic (eager-only) by passing `dynamic=True` to the layer constructor. Any kind of control flow is supported with dynamic layers. Note that using `dynamic=True` requires you to implement static shape inference in the `compute_output_shape(input_shape)` method.


12.May 2020 21:22:19 correct LSTM model creation and compilation

12.May 2020 21:22:19 correct LSTM model creation and compilation

12.May 2020 21:22:19 correct LSTM model creation and compilation

12.May 2020 21:22:20 model training error
in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:465 train_step  **
        y_pred = self(x, training=True)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py:927 __call__
        outputs = call_fn(cast_inputs, *args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\sequential.py:291 call
        outputs = layer(inputs, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py:885 __call__
        input_spec.assert_input_compatibility(self.input_spec, inputs,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\input_spec.py:176 assert_input_compatibility
        raise ValueError('Input ' + str(input_index) + ' of layer ' +

    ValueError: Input 0 of layer repeat_vector_1 is incompatible with the layer: expected ndim=2, found ndim=3. Full shape received: [44, 28, 2]
Traceback (most recent call last):
  File ".\_2_train.py", line 395, in train
    forecaster.fit(x_train, y_train, batch_size=batch_size, epochs=epochs, workers=workers,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 66, in _method_wrapper
    return method(self, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 785, in fit
    tmp_logs = train_function(iterator)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 580, in __call__
    result = self._call(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 627, in _call
    self._initialize(args, kwds, add_initializers_to=initializers)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 505, in _initialize
    self._stateful_fn._get_concrete_function_internal_garbage_collected(  # pylint: disable=protected-access
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2446, in _get_concrete_function_internal_garbage_collected
    graph_function, _, _ = self._maybe_define_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2777, in _maybe_define_function
    graph_function = self._create_graph_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2657, in _create_graph_function
    func_graph_module.func_graph_from_py_func(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 981, in func_graph_from_py_func
    func_outputs = python_func(*func_args, **func_kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 441, in wrapped_fn
    return weak_wrapped_fn().__wrapped__(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 968, in wrapper
    raise e.ag_error_metadata.to_exception(e)
ValueError: in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:465 train_step  **
        y_pred = self(x, training=True)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py:927 __call__
        outputs = call_fn(cast_inputs, *args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\sequential.py:291 call
        outputs = layer(inputs, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py:885 __call__
        input_spec.assert_input_compatibility(self.input_spec, inputs,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\input_spec.py:176 assert_input_compatibility
        raise ValueError('Input ' + str(input_index) + ' of layer ' +

    ValueError: Input 0 of layer repeat_vector_1 is incompatible with the layer: expected ndim=2, found ndim=3. Full shape received: [44, 28, 2]


12.May 2020 21:25:30 correct LSTM model creation and compilation

12.May 2020 21:25:30 correct LSTM model creation and compilation

12.May 2020 21:25:30 correct LSTM model creation and compilation

12.May 2020 21:25:31 model training error
in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:465 train_step  **
        y_pred = self(x, training=True)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py:927 __call__
        outputs = call_fn(cast_inputs, *args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\sequential.py:291 call
        outputs = layer(inputs, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py:897 __call__
        self._maybe_build(inputs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py:2416 _maybe_build
        self.build(input_shapes)  # pylint:disable=not-callable
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\layers\wrappers.py:177 build
        raise ValueError(

    ValueError: `TimeDistributed` Layer should be passed an `input_shape ` with at least 3 dimensions, received: [44, 2]
Traceback (most recent call last):
  File ".\_2_train.py", line 395, in train
    forecaster.fit(x_train, y_train, batch_size=batch_size, epochs=epochs, workers=workers,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 66, in _method_wrapper
    return method(self, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 785, in fit
    tmp_logs = train_function(iterator)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 580, in __call__
    result = self._call(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 627, in _call
    self._initialize(args, kwds, add_initializers_to=initializers)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 505, in _initialize
    self._stateful_fn._get_concrete_function_internal_garbage_collected(  # pylint: disable=protected-access
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2446, in _get_concrete_function_internal_garbage_collected
    graph_function, _, _ = self._maybe_define_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2777, in _maybe_define_function
    graph_function = self._create_graph_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2657, in _create_graph_function
    func_graph_module.func_graph_from_py_func(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 981, in func_graph_from_py_func
    func_outputs = python_func(*func_args, **func_kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 441, in wrapped_fn
    return weak_wrapped_fn().__wrapped__(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 968, in wrapper
    raise e.ag_error_metadata.to_exception(e)
ValueError: in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:465 train_step  **
        y_pred = self(x, training=True)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py:927 __call__
        outputs = call_fn(cast_inputs, *args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\sequential.py:291 call
        outputs = layer(inputs, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py:897 __call__
        self._maybe_build(inputs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py:2416 _maybe_build
        self.build(input_shapes)  # pylint:disable=not-callable
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\layers\wrappers.py:177 build
        raise ValueError(

    ValueError: `TimeDistributed` Layer should be passed an `input_shape ` with at least 3 dimensions, received: [44, 2]


12.May 2020 21:30:41 correct LSTM model creation and compilation

12.May 2020 21:30:41 correct LSTM model creation and compilation

12.May 2020 21:30:41 correct LSTM model creation and compilation

12.May 2020 21:31:11 time series number (by group) saved to forecast settings

12.May 2020 21:31:11 correct model training, correct saving of model and weights

12.May 2020 21:31:11 settings modified and saved

12.May 2020 21:33:54 correct LSTM model creation and compilation

12.May 2020 21:33:54 correct LSTM model creation and compilation

12.May 2020 21:33:54 correct LSTM model creation and compilation

12.May 2020 21:34:24 time series number (by group) saved to forecast settings

12.May 2020 21:34:24 correct model training, correct saving of model and weights

12.May 2020 21:34:24 settings modified and saved

12.May 2020 22:09:23 correct LSTM model creation and compilation

12.May 2020 22:09:23 correct LSTM model creation and compilation

12.May 2020 22:09:23 correct LSTM model creation and compilation

12.May 2020 22:11:47 time series number (by group) saved to forecast settings

12.May 2020 22:11:47 correct model training, correct saving of model and weights

12.May 2020 22:11:47 settings modified and saved

12.May 2020 23:25:03 correct LSTM model creation and compilation

12.May 2020 23:25:03 correct LSTM model creation and compilation

12.May 2020 23:25:03 correct LSTM model creation and compilation

12.May 2020 23:26:08 time series number (by group) saved to forecast settings

12.May 2020 23:26:08 correct model training, correct saving of model and weights

12.May 2020 23:26:08 settings modified and saved

12.May 2020 23:32:33 correct LSTM model creation and compilation

12.May 2020 23:32:33 correct LSTM model creation and compilation

12.May 2020 23:32:33 correct LSTM model creation and compilation

12.May 2020 23:33:32 time series number (by group) saved to forecast settings

12.May 2020 23:33:32 correct model training, correct saving of model and weights

12.May 2020 23:33:32 settings modified and saved

12.May 2020 23:35:20 correct LSTM model creation and compilation

12.May 2020 23:35:20 correct LSTM model creation and compilation

12.May 2020 23:35:21 correct LSTM model creation and compilation

12.May 2020 23:35:51 time series number (by group) saved to forecast settings

12.May 2020 23:35:51 correct model training, correct saving of model and weights

12.May 2020 23:35:51 settings modified and saved

12.May 2020 23:38:09 correct LSTM model creation and compilation

12.May 2020 23:38:09 correct LSTM model creation and compilation

12.May 2020 23:38:09 correct LSTM model creation and compilation

12.May 2020 23:38:39 time series number (by group) saved to forecast settings

12.May 2020 23:38:39 correct model training, correct saving of model and weights

12.May 2020 23:38:39 settings modified and saved

12.May 2020 23:44:56 correct LSTM model creation and compilation

12.May 2020 23:44:56 correct LSTM model creation and compilation

12.May 2020 23:44:56 correct LSTM model creation and compilation

12.May 2020 23:45:25 time series number (by group) saved to forecast settings

12.May 2020 23:45:25 correct model training, correct saving of model and weights

12.May 2020 23:45:25 settings modified and saved

12.May 2020 23:58:18 correct LSTM model creation and compilation

12.May 2020 23:58:18 correct LSTM model creation and compilation

12.May 2020 23:58:18 correct LSTM model creation and compilation

12.May 2020 23:58:49 time series number (by group) saved to forecast settings

12.May 2020 23:58:49 correct model training, correct saving of model and weights

12.May 2020 23:58:49 settings modified and saved

13.May 2020 00:00:33 correct LSTM model creation and compilation

13.May 2020 00:00:33 correct LSTM model creation and compilation

13.May 2020 00:00:33 correct LSTM model creation and compilation

13.May 2020 00:01:37 time series number (by group) saved to forecast settings

13.May 2020 00:01:37 correct model training, correct saving of model and weights

13.May 2020 00:01:37 settings modified and saved

13.May 2020 00:03:43 correct LSTM model creation and compilation

13.May 2020 00:03:43 correct LSTM model creation and compilation

13.May 2020 00:03:43 correct LSTM model creation and compilation

13.May 2020 00:06:45 time series number (by group) saved to forecast settings

13.May 2020 00:06:45 correct model training, correct saving of model and weights

13.May 2020 00:06:45 settings modified and saved

13.May 2020 00:08:47 correct LSTM model creation and compilation

13.May 2020 00:08:47 correct LSTM model creation and compilation

13.May 2020 00:08:47 correct LSTM model creation and compilation

13.May 2020 00:29:37 time series number (by group) saved to forecast settings

13.May 2020 00:29:37 correct model training, correct saving of model and weights

13.May 2020 00:29:37 settings modified and saved

13.May 2020 07:37:19 correct LSTM model creation and compilation

13.May 2020 07:37:19 correct LSTM model creation and compilation

13.May 2020 07:37:19 correct LSTM model creation and compilation

13.May 2020 07:42:56 time series number (by group) saved to forecast settings

13.May 2020 07:42:56 correct model training, correct saving of model and weights

13.May 2020 07:42:56 settings modified and saved

13.May 2020 07:50:14 correct LSTM model creation and compilation

13.May 2020 07:50:14 correct LSTM model creation and compilation

13.May 2020 07:50:14 correct LSTM model creation and compilation

13.May 2020 07:51:16 time series number (by group) saved to forecast settings

13.May 2020 07:51:16 correct model training, correct saving of model and weights

13.May 2020 07:51:16 settings modified and saved

13.May 2020 09:36:49 correct LSTM model creation and compilation

13.May 2020 09:36:49 correct LSTM model creation and compilation

13.May 2020 09:36:49 correct LSTM model creation and compilation

13.May 2020 09:37:46 time series number (by group) saved to forecast settings

13.May 2020 09:37:46 correct model training, correct saving of model and weights

13.May 2020 09:37:46 settings modified and saved

13.May 2020 18:41:01 correct LSTM model creation and compilation

13.May 2020 18:41:01 correct LSTM model creation and compilation

13.May 2020 18:41:01 correct LSTM model creation and compilation

13.May 2020 18:41:31 time series number (by group) saved to forecast settings

13.May 2020 18:41:31 correct model training, correct saving of model and weights

13.May 2020 18:41:31 settings modified and saved

13.May 2020 18:46:50 correct LSTM model creation and compilation

13.May 2020 18:46:50 correct LSTM model creation and compilation

13.May 2020 18:46:50 correct LSTM model creation and compilation

13.May 2020 18:47:20 time series number (by group) saved to forecast settings

13.May 2020 18:47:20 correct model training, correct saving of model and weights

13.May 2020 18:47:20 settings modified and saved

13.May 2020 20:10:47 correct LSTM model creation and compilation

13.May 2020 20:10:47 correct LSTM model creation and compilation

13.May 2020 20:10:47 correct LSTM model creation and compilation

13.May 2020 20:12:30 model training error
 OOM when allocating tensor with shape[44,17783] and type float on /job:localhost/replica:0/task:0/device:GPU:0 by allocator GPU_0_bfc
	 [[{{node sequential_1/bidirectional_2/backward_rnn_2/while/body/_247/peephole_lstm_cell_2/dropout/Cast}}]]
Hint: If you want to see a list of allocated tensors when OOM happens, add report_tensor_allocations_upon_oom to RunOptions for current allocation info.
 [Op:__inference_train_function_22936]

Function call stack:
train_function
Traceback (most recent call last):
  File ".\_2_train.py", line 395, in train
    forecaster.fit(x_train, y_train, batch_size=batch_size, epochs=epochs, workers=workers,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 66, in _method_wrapper
    return method(self, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 785, in fit
    tmp_logs = train_function(iterator)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 580, in __call__
    result = self._call(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 644, in _call
    return self._stateless_fn(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2420, in __call__
    return graph_function._filtered_call(args, kwargs)  # pylint: disable=protected-access
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 1661, in _filtered_call
    return self._call_flat(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 1745, in _call_flat
    return self._build_call_outputs(self._inference_function.call(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 593, in call
    outputs = execute.execute(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\execute.py", line 59, in quick_execute
    tensors = pywrap_tfe.TFE_Py_Execute(ctx._handle, device_name, op_name,
tensorflow.python.framework.errors_impl.ResourceExhaustedError:  OOM when allocating tensor with shape[44,17783] and type float on /job:localhost/replica:0/task:0/device:GPU:0 by allocator GPU_0_bfc
	 [[{{node sequential_1/bidirectional_2/backward_rnn_2/while/body/_247/peephole_lstm_cell_2/dropout/Cast}}]]
Hint: If you want to see a list of allocated tensors when OOM happens, add report_tensor_allocations_upon_oom to RunOptions for current allocation info.
 [Op:__inference_train_function_22936]

Function call stack:
train_function


13.May 2020 20:52:52 correct LSTM model creation and compilation

13.May 2020 20:52:52 correct LSTM model creation and compilation

13.May 2020 20:52:52 correct LSTM model creation and compilation

13.May 2020 20:53:22 model training error
 OOM when allocating tensor with shape[44,28,17783] and type float on /job:localhost/replica:0/task:0/device:GPU:0 by allocator GPU_0_bfc
	 [[node gradient_tape/mean_squared_error/sub (defined at .\_2_train.py:395) ]]
Hint: If you want to see a list of allocated tensors when OOM happens, add report_tensor_allocations_upon_oom to RunOptions for current allocation info.
 [Op:__inference_train_function_22936]

Function call stack:
train_function
Traceback (most recent call last):
  File ".\_2_train.py", line 395, in train
    forecaster.fit(x_train, y_train, batch_size=batch_size, epochs=epochs, workers=workers,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 66, in _method_wrapper
    return method(self, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 785, in fit
    tmp_logs = train_function(iterator)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 580, in __call__
    result = self._call(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 644, in _call
    return self._stateless_fn(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2420, in __call__
    return graph_function._filtered_call(args, kwargs)  # pylint: disable=protected-access
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 1661, in _filtered_call
    return self._call_flat(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 1745, in _call_flat
    return self._build_call_outputs(self._inference_function.call(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 593, in call
    outputs = execute.execute(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\execute.py", line 59, in quick_execute
    tensors = pywrap_tfe.TFE_Py_Execute(ctx._handle, device_name, op_name,
tensorflow.python.framework.errors_impl.ResourceExhaustedError:  OOM when allocating tensor with shape[44,28,17783] and type float on /job:localhost/replica:0/task:0/device:GPU:0 by allocator GPU_0_bfc
	 [[node gradient_tape/mean_squared_error/sub (defined at .\_2_train.py:395) ]]
Hint: If you want to see a list of allocated tensors when OOM happens, add report_tensor_allocations_upon_oom to RunOptions for current allocation info.
 [Op:__inference_train_function_22936]

Function call stack:
train_function


13.May 2020 20:54:36 correct LSTM model creation and compilation

13.May 2020 20:54:36 correct LSTM model creation and compilation

13.May 2020 20:54:36 correct LSTM model creation and compilation

13.May 2020 20:55:07 time series number (by group) saved to forecast settings

13.May 2020 20:55:07 correct model training, correct saving of model and weights

13.May 2020 20:55:07 settings modified and saved

13.May 2020 20:57:11 correct LSTM model creation and compilation

13.May 2020 20:57:11 correct LSTM model creation and compilation

13.May 2020 20:57:11 correct LSTM model creation and compilation

13.May 2020 20:59:31 time series number (by group) saved to forecast settings

13.May 2020 20:59:31 correct model training, correct saving of model and weights

13.May 2020 20:59:31 settings modified and saved

13.May 2020 21:13:02 correct LSTM model creation and compilation

13.May 2020 21:13:02 correct LSTM model creation and compilation

13.May 2020 21:13:02 correct LSTM model creation and compilation

13.May 2020 21:14:18 time series number (by group) saved to forecast settings

13.May 2020 21:14:18 correct model training, correct saving of model and weights

13.May 2020 21:14:18 settings modified and saved

13.May 2020 21:16:48 correct LSTM model creation and compilation

13.May 2020 21:16:48 correct LSTM model creation and compilation

13.May 2020 21:16:48 correct LSTM model creation and compilation

13.May 2020 21:19:40 time series number (by group) saved to forecast settings

13.May 2020 21:19:40 correct model training, correct saving of model and weights

13.May 2020 21:19:40 settings modified and saved

13.May 2020 21:23:44 correct LSTM model creation and compilation

13.May 2020 21:23:44 correct LSTM model creation and compilation

13.May 2020 21:23:44 correct LSTM model creation and compilation

13.May 2020 21:24:14 time series number (by group) saved to forecast settings

13.May 2020 21:24:14 correct model training, correct saving of model and weights

13.May 2020 21:24:14 settings modified and saved

13.May 2020 21:31:01 correct LSTM model creation and compilation

13.May 2020 21:31:01 correct LSTM model creation and compilation

13.May 2020 21:31:01 correct LSTM model creation and compilation

13.May 2020 21:31:31 time series number (by group) saved to forecast settings

13.May 2020 21:31:31 correct model training, correct saving of model and weights

13.May 2020 21:31:31 settings modified and saved

13.May 2020 21:36:14 correct LSTM model creation and compilation

13.May 2020 21:36:14 correct LSTM model creation and compilation

13.May 2020 21:36:14 correct LSTM model creation and compilation

13.May 2020 21:36:44 time series number (by group) saved to forecast settings

13.May 2020 21:36:44 correct model training, correct saving of model and weights

13.May 2020 21:36:44 settings modified and saved

13.May 2020 21:39:50 correct LSTM model creation and compilation

13.May 2020 21:39:50 correct LSTM model creation and compilation

13.May 2020 21:39:50 correct LSTM model creation and compilation

13.May 2020 21:41:42 correct LSTM model creation and compilation

13.May 2020 21:41:42 correct LSTM model creation and compilation

13.May 2020 21:41:42 correct LSTM model creation and compilation

13.May 2020 21:55:48 time series number (by group) saved to forecast settings

13.May 2020 21:55:48 correct model training, correct saving of model and weights

13.May 2020 21:55:48 settings modified and saved

13.May 2020 22:01:32 correct LSTM model creation and compilation

13.May 2020 22:01:32 correct LSTM model creation and compilation

13.May 2020 22:01:32 correct LSTM model creation and compilation

13.May 2020 22:33:05 time series number (by group) saved to forecast settings

13.May 2020 22:33:05 correct model training, correct saving of model and weights

13.May 2020 22:33:05 settings modified and saved

13.May 2020 22:36:19 correct LSTM model creation and compilation

13.May 2020 22:36:19 correct LSTM model creation and compilation

13.May 2020 22:36:19 correct LSTM model creation and compilation

13.May 2020 23:06:05 time series number (by group) saved to forecast settings

13.May 2020 23:06:05 correct model training, correct saving of model and weights

13.May 2020 23:06:05 settings modified and saved

13.May 2020 23:57:58 correct LSTM model creation and compilation

13.May 2020 23:57:58 correct LSTM model creation and compilation

13.May 2020 23:57:58 correct LSTM model creation and compilation

14.May 2020 00:40:02 time series number (by group) saved to forecast settings

14.May 2020 00:40:02 correct model training, correct saving of model and weights

14.May 2020 00:40:02 settings modified and saved

14.May 2020 16:32:28 correct LSTM model creation and compilation

14.May 2020 16:32:28 correct LSTM model creation and compilation

14.May 2020 16:32:28 correct LSTM model creation and compilation

14.May 2020 16:32:59 time series number (by group) saved to forecast settings

14.May 2020 16:32:59 correct model training, correct saving of model and weights

14.May 2020 16:32:59 settings modified and saved

14.May 2020 17:18:29 correct LSTM model creation and compilation

14.May 2020 17:18:29 correct LSTM model creation and compilation

14.May 2020 17:18:29 correct LSTM model creation and compilation

14.May 2020 17:19:04 time series number (by group) saved to forecast settings

14.May 2020 17:19:04 correct model training, correct saving of model and weights

14.May 2020 17:19:04 settings modified and saved

14.May 2020 17:23:31 error at loading model (LTSM) hyperparameters
[Errno 2] No such file or directory: './0.0_metaheuristic/metaheuristic_settings.json'
Traceback (most recent call last):
  File ".\_2_train.py", line 58, in <module>
    with open(''.join(
FileNotFoundError: [Errno 2] No such file or directory: './0.0_metaheuristic/metaheuristic_settings.json'

14.May 2020 17:26:11 error at loading model (LTSM) hyperparameters
'data_cleaning_done'
Traceback (most recent call last):
  File ".\_2_train.py", line 62, in <module>
    if local_script_settings['data_cleaning_done'] == 'True' and \
KeyError: 'data_cleaning_done'

14.May 2020 18:13:03 correct LSTM model creation and compilation

14.May 2020 18:13:03 correct LSTM model creation and compilation

14.May 2020 18:13:03 correct LSTM model creation and compilation

14.May 2020 18:13:33 time series number (by group) saved to forecast settings

14.May 2020 18:13:33 correct model training, correct saving of model and weights

14.May 2020 18:13:33 settings modified and saved

14.May 2020 18:17:16 correct LSTM model creation and compilation

14.May 2020 18:17:16 correct LSTM model creation and compilation

14.May 2020 18:17:17 correct LSTM model creation and compilation

14.May 2020 18:17:46 time series number (by group) saved to forecast settings

14.May 2020 18:17:46 correct model training, correct saving of model and weights

14.May 2020 18:17:46 settings modified and saved

14.May 2020 19:25:31 correct LSTM model creation and compilation

14.May 2020 19:25:31 correct LSTM model creation and compilation

14.May 2020 19:25:31 correct LSTM model creation and compilation

14.May 2020 19:25:31 model training error
name 'year' is not defined
Traceback (most recent call last):
  File ".\_2_train.py", line 379, in train
    for days_in_year in range(max_selling_time - year * 365 - learning_interval_in_days,
NameError: name 'year' is not defined

14.May 2020 19:26:48 correct LSTM model creation and compilation

14.May 2020 19:26:48 correct LSTM model creation and compilation

14.May 2020 19:26:48 correct LSTM model creation and compilation

14.May 2020 19:26:48 model training error
could not broadcast input array from shape (1130,0) into shape (1130)
Traceback (most recent call last):
  File ".\_2_train.py", line 395, in train
    x_train = np.array(x_train)
ValueError: could not broadcast input array from shape (1130,0) into shape (1130)

14.May 2020 19:29:13 correct LSTM model creation and compilation

14.May 2020 19:29:13 correct LSTM model creation and compilation

14.May 2020 19:29:13 correct LSTM model creation and compilation

14.May 2020 19:29:49 correct LSTM model creation and compilation

14.May 2020 19:29:49 correct LSTM model creation and compilation

14.May 2020 19:29:49 correct LSTM model creation and compilation

14.May 2020 19:29:49 model training error
could not broadcast input array from shape (1130,0) into shape (1130)
Traceback (most recent call last):
  File ".\_2_train.py", line 395, in train
    x_train = np.array(x_train)
ValueError: could not broadcast input array from shape (1130,0) into shape (1130)

14.May 2020 19:30:57 correct LSTM model creation and compilation

14.May 2020 19:30:57 correct LSTM model creation and compilation

14.May 2020 19:30:57 correct LSTM model creation and compilation

14.May 2020 19:30:57 model training error
could not broadcast input array from shape (1130,0) into shape (1130)
Traceback (most recent call last):
  File ".\_2_train.py", line 396, in train
    x_train = np.array(x_train)
ValueError: could not broadcast input array from shape (1130,0) into shape (1130)

14.May 2020 19:34:03 correct LSTM model creation and compilation

14.May 2020 19:34:03 correct LSTM model creation and compilation

14.May 2020 19:34:04 correct LSTM model creation and compilation

14.May 2020 19:39:28 correct LSTM model creation and compilation

14.May 2020 19:39:28 correct LSTM model creation and compilation

14.May 2020 19:39:28 correct LSTM model creation and compilation

14.May 2020 19:40:26 time series number (by group) saved to forecast settings

14.May 2020 19:40:26 correct model training, correct saving of model and weights

14.May 2020 19:40:26 settings modified and saved

14.May 2020 19:42:38 correct LSTM model creation and compilation

14.May 2020 19:42:38 correct LSTM model creation and compilation

14.May 2020 19:42:38 correct LSTM model creation and compilation

14.May 2020 19:42:38 model training error
could not broadcast input array from shape (1130,28) into shape (1130)
Traceback (most recent call last):
  File ".\_2_train.py", line 393, in train
    x_train = np.array(x_train)
ValueError: could not broadcast input array from shape (1130,28) into shape (1130)

14.May 2020 20:19:12 correct LSTM model creation and compilation

14.May 2020 20:19:12 correct LSTM model creation and compilation

14.May 2020 20:19:12 correct LSTM model creation and compilation

14.May 2020 20:19:12 model training error
name 'first_prediction_day_in_year' is not defined
Traceback (most recent call last):
  File ".\_2_train.py", line 378, in train
    [years.append(first_prediction_day_in_year + year * 365) for year in range(5)]
  File ".\_2_train.py", line 378, in <listcomp>
    [years.append(first_prediction_day_in_year + year * 365) for year in range(5)]
NameError: name 'first_prediction_day_in_year' is not defined

14.May 2020 20:19:39 correct LSTM model creation and compilation

14.May 2020 20:19:39 correct LSTM model creation and compilation

14.May 2020 20:19:39 correct LSTM model creation and compilation

14.May 2020 20:19:39 model training error
could not broadcast input array from shape (1130,0) into shape (1130)
Traceback (most recent call last):
  File ".\_2_train.py", line 393, in train
    x_train = np.array(x_train)
ValueError: could not broadcast input array from shape (1130,0) into shape (1130)

14.May 2020 20:21:36 correct LSTM model creation and compilation

14.May 2020 20:21:36 correct LSTM model creation and compilation

14.May 2020 20:21:36 correct LSTM model creation and compilation

14.May 2020 20:21:36 model training error
could not broadcast input array from shape (1130,0) into shape (1130)
Traceback (most recent call last):
  File ".\_2_train.py", line 393, in train
    x_train = np.array(x_train)
ValueError: could not broadcast input array from shape (1130,0) into shape (1130)

14.May 2020 20:25:18 correct LSTM model creation and compilation

14.May 2020 20:25:18 correct LSTM model creation and compilation

14.May 2020 20:25:18 correct LSTM model creation and compilation

14.May 2020 20:25:18 model training error
could not broadcast input array from shape (1130,0) into shape (1130)
Traceback (most recent call last):
  File ".\_2_train.py", line 394, in train
    x_train = np.array(x_train)
ValueError: could not broadcast input array from shape (1130,0) into shape (1130)

14.May 2020 20:27:22 correct LSTM model creation and compilation

14.May 2020 20:27:22 correct LSTM model creation and compilation

14.May 2020 20:27:22 correct LSTM model creation and compilation

14.May 2020 20:27:22 model training error
could not broadcast input array from shape (1130,0) into shape (1130)
Traceback (most recent call last):
  File ".\_2_train.py", line 394, in train
    x_train = np.array(x_train)
ValueError: could not broadcast input array from shape (1130,0) into shape (1130)

14.May 2020 20:33:44 correct LSTM model creation and compilation

14.May 2020 20:33:44 correct LSTM model creation and compilation

14.May 2020 20:33:44 correct LSTM model creation and compilation

14.May 2020 20:36:01 correct LSTM model creation and compilation

14.May 2020 20:36:01 correct LSTM model creation and compilation

14.May 2020 20:36:01 correct LSTM model creation and compilation

14.May 2020 20:36:55 time series number (by group) saved to forecast settings

14.May 2020 20:36:55 correct model training, correct saving of model and weights

14.May 2020 20:36:55 settings modified and saved

14.May 2020 20:40:46 correct LSTM model creation and compilation

14.May 2020 20:40:46 correct LSTM model creation and compilation

14.May 2020 20:40:46 correct LSTM model creation and compilation

14.May 2020 20:42:15 correct LSTM model creation and compilation

14.May 2020 20:42:15 correct LSTM model creation and compilation

14.May 2020 20:42:15 correct LSTM model creation and compilation

14.May 2020 20:43:10 time series number (by group) saved to forecast settings

14.May 2020 20:43:10 correct model training, correct saving of model and weights

14.May 2020 20:43:10 settings modified and saved

14.May 2020 20:44:50 correct LSTM model creation and compilation

14.May 2020 20:44:50 correct LSTM model creation and compilation

14.May 2020 20:44:50 correct LSTM model creation and compilation

14.May 2020 20:45:48 time series number (by group) saved to forecast settings

14.May 2020 20:45:48 correct model training, correct saving of model and weights

14.May 2020 20:45:48 settings modified and saved

14.May 2020 20:49:08 correct LSTM model creation and compilation

14.May 2020 20:49:08 correct LSTM model creation and compilation

14.May 2020 20:49:08 correct LSTM model creation and compilation

14.May 2020 20:49:08 model training error
could not broadcast input array from shape (1130,0) into shape (1130)
Traceback (most recent call last):
  File ".\_2_train.py", line 399, in train
    y_train = np.array(y_train)
ValueError: could not broadcast input array from shape (1130,0) into shape (1130)

14.May 2020 20:50:18 correct LSTM model creation and compilation

14.May 2020 20:50:18 correct LSTM model creation and compilation

14.May 2020 20:50:18 correct LSTM model creation and compilation

14.May 2020 20:50:18 model training error
tuple index out of range
Traceback (most recent call last):
  File ".\_2_train.py", line 409, in train
    x_train = x_train.reshape((np.shape(x_train)[0], np.shape(x_train)[2], np.shape(x_train)[1]))
IndexError: tuple index out of range

14.May 2020 20:51:14 correct LSTM model creation and compilation

14.May 2020 20:51:14 correct LSTM model creation and compilation

14.May 2020 20:51:14 correct LSTM model creation and compilation

14.May 2020 20:52:11 time series number (by group) saved to forecast settings

14.May 2020 20:52:11 correct model training, correct saving of model and weights

14.May 2020 20:52:11 settings modified and saved

14.May 2020 20:53:52 correct LSTM model creation and compilation

14.May 2020 20:53:52 correct LSTM model creation and compilation

14.May 2020 20:53:52 correct LSTM model creation and compilation

14.May 2020 20:54:48 time series number (by group) saved to forecast settings

14.May 2020 20:54:48 correct model training, correct saving of model and weights

14.May 2020 20:54:48 settings modified and saved

14.May 2020 20:57:03 correct LSTM model creation and compilation

14.May 2020 20:57:03 correct LSTM model creation and compilation

14.May 2020 20:57:03 correct LSTM model creation and compilation

14.May 2020 20:58:01 time series number (by group) saved to forecast settings

14.May 2020 20:58:01 correct model training, correct saving of model and weights

14.May 2020 20:58:01 settings modified and saved

14.May 2020 21:04:55 correct LSTM model creation and compilation

14.May 2020 21:04:55 correct LSTM model creation and compilation

14.May 2020 21:04:55 correct LSTM model creation and compilation

14.May 2020 21:05:49 time series number (by group) saved to forecast settings

14.May 2020 21:05:49 correct model training, correct saving of model and weights

14.May 2020 21:05:49 settings modified and saved

14.May 2020 21:07:48 correct LSTM model creation and compilation

14.May 2020 21:07:48 correct LSTM model creation and compilation

14.May 2020 21:07:48 correct LSTM model creation and compilation

14.May 2020 21:14:24 time series number (by group) saved to forecast settings

14.May 2020 21:14:24 correct model training, correct saving of model and weights

14.May 2020 21:14:24 settings modified and saved

14.May 2020 21:17:19 correct LSTM model creation and compilation

14.May 2020 21:17:19 correct LSTM model creation and compilation

14.May 2020 21:17:19 correct LSTM model creation and compilation

14.May 2020 21:21:03 time series number (by group) saved to forecast settings

14.May 2020 21:21:03 correct model training, correct saving of model and weights

14.May 2020 21:21:03 settings modified and saved

14.May 2020 21:23:31 correct LSTM model creation and compilation

14.May 2020 21:23:31 correct LSTM model creation and compilation

14.May 2020 21:23:31 correct LSTM model creation and compilation

14.May 2020 21:23:32 model training error
in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:465 train_step  **
        y_pred = self(x, training=True)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py:927 __call__
        outputs = call_fn(cast_inputs, *args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\sequential.py:291 call
        outputs = layer(inputs, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\layers\wrappers.py:531 __call__
        return super(Bidirectional, self).__call__(inputs, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py:927 __call__
        outputs = call_fn(cast_inputs, *args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\layers\wrappers.py:644 call
        y = self.forward_layer(forward_inputs,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\layers\recurrent.py:654 __call__
        return super(RNN, self).__call__(inputs, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py:927 __call__
        outputs = call_fn(cast_inputs, *args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\layers\recurrent.py:784 call
        last_output, outputs, states = K.rnn(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\backend.py:4091 rnn
        output_time_zero, _ = step_function(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\layers\recurrent.py:780 step
        output, new_states = cell_call_fn(inputs, states, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py:927 __call__
        outputs = call_fn(cast_inputs, *args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\layers\recurrent.py:2382 call
        dp_mask = self.get_dropout_mask_for_cell(inputs, training, count=4)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\layers\recurrent.py:1156 get_dropout_mask_for_cell
        return self._dropout_mask_cache.setdefault(kwargs=init_kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\backend.py:6180 setdefault
        default = self.default_factory(**kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\layers\recurrent.py:1124 _create_dropout_mask
        return _generate_dropout_mask(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\layers\recurrent.py:2848 _generate_dropout_mask
        return [
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\layers\recurrent.py:2849 <listcomp>
        K.in_train_phase(dropped_inputs, ones, training=training)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\backend.py:4361 in_train_phase
        return x()
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\layers\recurrent.py:2845 dropped_inputs
        return K.dropout(ones, rate)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\backend.py:4768 dropout
        return nn.dropout_v2(x, rate=level, noise_shape=noise_shape, seed=seed)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\nn_ops.py:4422 dropout_v2
        raise ValueError("rate must be a scalar tensor or a float in the "

    ValueError: rate must be a scalar tensor or a float in the range [0, 1), got 1
Traceback (most recent call last):
  File ".\_2_train.py", line 414, in train
    forecaster.fit(x_train, y_train, batch_size=batch_size, epochs=epochs, workers=workers,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 66, in _method_wrapper
    return method(self, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 785, in fit
    tmp_logs = train_function(iterator)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 580, in __call__
    result = self._call(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 627, in _call
    self._initialize(args, kwds, add_initializers_to=initializers)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 505, in _initialize
    self._stateful_fn._get_concrete_function_internal_garbage_collected(  # pylint: disable=protected-access
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2446, in _get_concrete_function_internal_garbage_collected
    graph_function, _, _ = self._maybe_define_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2777, in _maybe_define_function
    graph_function = self._create_graph_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2657, in _create_graph_function
    func_graph_module.func_graph_from_py_func(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 981, in func_graph_from_py_func
    func_outputs = python_func(*func_args, **func_kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 441, in wrapped_fn
    return weak_wrapped_fn().__wrapped__(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 968, in wrapper
    raise e.ag_error_metadata.to_exception(e)
ValueError: in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:465 train_step  **
        y_pred = self(x, training=True)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py:927 __call__
        outputs = call_fn(cast_inputs, *args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\sequential.py:291 call
        outputs = layer(inputs, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\layers\wrappers.py:531 __call__
        return super(Bidirectional, self).__call__(inputs, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py:927 __call__
        outputs = call_fn(cast_inputs, *args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\layers\wrappers.py:644 call
        y = self.forward_layer(forward_inputs,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\layers\recurrent.py:654 __call__
        return super(RNN, self).__call__(inputs, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py:927 __call__
        outputs = call_fn(cast_inputs, *args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\layers\recurrent.py:784 call
        last_output, outputs, states = K.rnn(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\backend.py:4091 rnn
        output_time_zero, _ = step_function(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\layers\recurrent.py:780 step
        output, new_states = cell_call_fn(inputs, states, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py:927 __call__
        outputs = call_fn(cast_inputs, *args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\layers\recurrent.py:2382 call
        dp_mask = self.get_dropout_mask_for_cell(inputs, training, count=4)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\layers\recurrent.py:1156 get_dropout_mask_for_cell
        return self._dropout_mask_cache.setdefault(kwargs=init_kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\backend.py:6180 setdefault
        default = self.default_factory(**kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\layers\recurrent.py:1124 _create_dropout_mask
        return _generate_dropout_mask(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\layers\recurrent.py:2848 _generate_dropout_mask
        return [
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\layers\recurrent.py:2849 <listcomp>
        K.in_train_phase(dropped_inputs, ones, training=training)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\backend.py:4361 in_train_phase
        return x()
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\layers\recurrent.py:2845 dropped_inputs
        return K.dropout(ones, rate)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\backend.py:4768 dropout
        return nn.dropout_v2(x, rate=level, noise_shape=noise_shape, seed=seed)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\nn_ops.py:4422 dropout_v2
        raise ValueError("rate must be a scalar tensor or a float in the "

    ValueError: rate must be a scalar tensor or a float in the range [0, 1), got 1


14.May 2020 21:24:11 correct LSTM model creation and compilation

14.May 2020 21:24:11 correct LSTM model creation and compilation

14.May 2020 21:24:11 correct LSTM model creation and compilation

14.May 2020 21:25:08 time series number (by group) saved to forecast settings

14.May 2020 21:25:08 correct model training, correct saving of model and weights

14.May 2020 21:25:08 settings modified and saved

14.May 2020 21:27:25 correct LSTM model creation and compilation

14.May 2020 21:27:25 correct LSTM model creation and compilation

14.May 2020 21:27:25 correct LSTM model creation and compilation

14.May 2020 21:27:26 time series number (by group) saved to forecast settings

14.May 2020 21:27:26 correct model training, correct saving of model and weights

14.May 2020 21:27:26 settings modified and saved

14.May 2020 21:29:02 correct LSTM model creation and compilation

14.May 2020 21:29:02 correct LSTM model creation and compilation

14.May 2020 21:29:02 correct LSTM model creation and compilation

14.May 2020 21:30:15 time series number (by group) saved to forecast settings

14.May 2020 21:30:15 correct model training, correct saving of model and weights

14.May 2020 21:30:15 settings modified and saved

14.May 2020 21:32:13 correct LSTM model creation and compilation

14.May 2020 21:32:13 correct LSTM model creation and compilation

14.May 2020 21:32:13 correct LSTM model creation and compilation

14.May 2020 21:35:34 correct LSTM model creation and compilation

14.May 2020 21:35:34 correct LSTM model creation and compilation

14.May 2020 21:35:34 correct LSTM model creation and compilation

14.May 2020 21:35:34 model training error
could not broadcast input array from shape (1130,0) into shape (1130)
Traceback (most recent call last):
  File ".\_2_train.py", line 391, in train
    x_train = np.array(x_train)
ValueError: could not broadcast input array from shape (1130,0) into shape (1130)

14.May 2020 21:40:08 correct LSTM model creation and compilation

14.May 2020 21:40:08 correct LSTM model creation and compilation

14.May 2020 21:40:08 correct LSTM model creation and compilation

14.May 2020 21:40:08 model training error
could not broadcast input array from shape (1130,0) into shape (1130)
Traceback (most recent call last):
  File ".\_2_train.py", line 392, in train
    x_train = np.array(x_train)
ValueError: could not broadcast input array from shape (1130,0) into shape (1130)

14.May 2020 21:44:29 correct LSTM model creation and compilation

14.May 2020 21:44:29 correct LSTM model creation and compilation

14.May 2020 21:44:29 correct LSTM model creation and compilation

14.May 2020 21:44:29 model training error
could not broadcast input array from shape (1130,0) into shape (1130)
Traceback (most recent call last):
  File ".\_2_train.py", line 393, in train
    x_train = np.array(x_train)
ValueError: could not broadcast input array from shape (1130,0) into shape (1130)

14.May 2020 21:57:10 correct LSTM model creation and compilation

14.May 2020 21:57:10 correct LSTM model creation and compilation

14.May 2020 21:57:10 correct LSTM model creation and compilation

14.May 2020 21:59:15 time series number (by group) saved to forecast settings

14.May 2020 21:59:15 correct model training, correct saving of model and weights

14.May 2020 21:59:15 settings modified and saved

14.May 2020 22:03:01 correct LSTM model creation and compilation

14.May 2020 22:03:01 correct LSTM model creation and compilation

14.May 2020 22:03:01 correct LSTM model creation and compilation

14.May 2020 22:03:59 time series number (by group) saved to forecast settings

14.May 2020 22:03:59 correct model training, correct saving of model and weights

14.May 2020 22:03:59 settings modified and saved

14.May 2020 22:05:59 correct LSTM model creation and compilation

14.May 2020 22:05:59 correct LSTM model creation and compilation

14.May 2020 22:05:59 correct LSTM model creation and compilation

14.May 2020 22:06:29 time series number (by group) saved to forecast settings

14.May 2020 22:06:29 correct model training, correct saving of model and weights

14.May 2020 22:06:29 settings modified and saved

14.May 2020 22:08:46 correct LSTM model creation and compilation

14.May 2020 22:08:46 correct LSTM model creation and compilation

14.May 2020 22:08:46 correct LSTM model creation and compilation

14.May 2020 22:09:42 time series number (by group) saved to forecast settings

14.May 2020 22:09:42 correct model training, correct saving of model and weights

14.May 2020 22:09:42 settings modified and saved

14.May 2020 22:16:38 correct LSTM model creation and compilation

14.May 2020 22:16:38 correct LSTM model creation and compilation

14.May 2020 22:16:38 correct LSTM model creation and compilation

14.May 2020 22:16:38 model training error
could not broadcast input array from shape (1130,28) into shape (1130)
Traceback (most recent call last):
  File ".\_2_train.py", line 393, in train
    x_train = np.array(x_train)
ValueError: could not broadcast input array from shape (1130,28) into shape (1130)

14.May 2020 22:21:27 correct LSTM model creation and compilation

14.May 2020 22:21:27 correct LSTM model creation and compilation

14.May 2020 22:21:27 correct LSTM model creation and compilation

14.May 2020 22:21:27 model training error
could not broadcast input array from shape (1130,28) into shape (1130)
Traceback (most recent call last):
  File ".\_2_train.py", line 393, in train
    x_train = np.array(x_train)
ValueError: could not broadcast input array from shape (1130,28) into shape (1130)

14.May 2020 22:27:03 correct LSTM model creation and compilation

14.May 2020 22:27:03 correct LSTM model creation and compilation

14.May 2020 22:27:03 correct LSTM model creation and compilation

14.May 2020 22:27:03 model training error
could not broadcast input array from shape (1130,0) into shape (1130)
Traceback (most recent call last):
  File ".\_2_train.py", line 393, in train
    x_train = np.array(x_train)
ValueError: could not broadcast input array from shape (1130,0) into shape (1130)

14.May 2020 22:47:01 correct LSTM model creation and compilation

14.May 2020 22:47:01 correct LSTM model creation and compilation

14.May 2020 22:47:01 correct LSTM model creation and compilation

14.May 2020 22:47:01 model training error
could not broadcast input array from shape (1130,0) into shape (1130)
Traceback (most recent call last):
  File ".\_2_train.py", line 393, in train
    x_train = np.array(x_train)
ValueError: could not broadcast input array from shape (1130,0) into shape (1130)

14.May 2020 22:48:46 correct LSTM model creation and compilation

14.May 2020 22:48:46 correct LSTM model creation and compilation

14.May 2020 22:48:46 correct LSTM model creation and compilation

14.May 2020 22:54:24 time series number (by group) saved to forecast settings

14.May 2020 22:54:24 correct model training, correct saving of model and weights

14.May 2020 22:54:24 settings modified and saved

14.May 2020 22:59:08 correct LSTM model creation and compilation

14.May 2020 22:59:08 correct LSTM model creation and compilation

14.May 2020 22:59:08 correct LSTM model creation and compilation

14.May 2020 23:04:34 time series number (by group) saved to forecast settings

14.May 2020 23:04:34 correct model training, correct saving of model and weights

14.May 2020 23:04:34 settings modified and saved

14.May 2020 23:06:50 correct LSTM model creation and compilation

14.May 2020 23:06:50 correct LSTM model creation and compilation

14.May 2020 23:06:50 correct LSTM model creation and compilation

14.May 2020 23:12:07 time series number (by group) saved to forecast settings

14.May 2020 23:12:07 correct model training, correct saving of model and weights

14.May 2020 23:12:07 settings modified and saved

14.May 2020 23:14:54 correct LSTM model creation and compilation

14.May 2020 23:14:54 correct LSTM model creation and compilation

14.May 2020 23:14:54 correct LSTM model creation and compilation

14.May 2020 23:38:33 time series number (by group) saved to forecast settings

14.May 2020 23:38:33 correct model training, correct saving of model and weights

14.May 2020 23:38:33 settings modified and saved

14.May 2020 23:42:48 correct LSTM model creation and compilation

14.May 2020 23:42:48 correct LSTM model creation and compilation

14.May 2020 23:42:48 correct LSTM model creation and compilation

14.May 2020 23:50:23 time series number (by group) saved to forecast settings

14.May 2020 23:50:23 correct model training, correct saving of model and weights

14.May 2020 23:50:23 settings modified and saved

15.May 2020 00:00:05 correct LSTM model creation and compilation

15.May 2020 00:00:05 correct LSTM model creation and compilation

15.May 2020 00:00:05 correct LSTM model creation and compilation

15.May 2020 00:00:54 time series number (by group) saved to forecast settings

15.May 2020 00:00:54 correct model training, correct saving of model and weights

15.May 2020 00:00:54 settings modified and saved

15.May 2020 14:53:29 correct LSTM model creation and compilation

15.May 2020 14:53:29 correct LSTM model creation and compilation

15.May 2020 14:53:29 correct LSTM model creation and compilation

15.May 2020 14:53:29 model training error
could not broadcast input array from shape (1130,28) into shape (1130)
Traceback (most recent call last):
  File ".\_2_train.py", line 398, in train
    x_train = np.array(x_train)
ValueError: could not broadcast input array from shape (1130,28) into shape (1130)

15.May 2020 15:02:38 correct LSTM model creation and compilation

15.May 2020 15:02:38 correct LSTM model creation and compilation

15.May 2020 15:02:38 correct LSTM model creation and compilation

15.May 2020 15:02:38 model training error
could not broadcast input array from shape (1130,28) into shape (1130)
Traceback (most recent call last):
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\numpy\core\fromnumeric.py", line 1943, in shape
    result = a.shape
AttributeError: 'list' object has no attribute 'shape'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File ".\_2_train.py", line 394, in train
    print(np.shape(x_train))
  File "<__array_function__ internals>", line 5, in shape
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\numpy\core\fromnumeric.py", line 1945, in shape
    result = asarray(a).shape
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\numpy\core\_asarray.py", line 85, in asarray
    return array(a, dtype, copy=False, order=order)
ValueError: could not broadcast input array from shape (1130,28) into shape (1130)

15.May 2020 15:05:42 correct LSTM model creation and compilation

15.May 2020 15:05:42 correct LSTM model creation and compilation

15.May 2020 15:05:42 correct LSTM model creation and compilation

15.May 2020 15:05:42 model training error
could not broadcast input array from shape (1130,0) into shape (1130)
Traceback (most recent call last):
  File ".\_2_train.py", line 409, in train
    y_train = np.array(y_train)
ValueError: could not broadcast input array from shape (1130,0) into shape (1130)

15.May 2020 15:06:39 correct LSTM model creation and compilation

15.May 2020 15:06:39 correct LSTM model creation and compilation

15.May 2020 15:06:39 correct LSTM model creation and compilation

15.May 2020 15:06:39 model training error
could not broadcast input array from shape (1130,28) into shape (1130)
Traceback (most recent call last):
  File ".\_2_train.py", line 399, in train
    x_train = np.array(x_train)
ValueError: could not broadcast input array from shape (1130,28) into shape (1130)

15.May 2020 15:07:29 correct LSTM model creation and compilation

15.May 2020 15:07:29 correct LSTM model creation and compilation

15.May 2020 15:07:29 correct LSTM model creation and compilation

15.May 2020 15:07:29 model training error
could not broadcast input array from shape (1130,28) into shape (1130)
Traceback (most recent call last):
  File ".\_2_train.py", line 399, in train
    x_train = np.array(x_train)
ValueError: could not broadcast input array from shape (1130,28) into shape (1130)

15.May 2020 15:07:46 correct LSTM model creation and compilation

15.May 2020 15:07:46 correct LSTM model creation and compilation

15.May 2020 15:07:46 correct LSTM model creation and compilation

15.May 2020 15:07:46 model training error
could not broadcast input array from shape (1130,28) into shape (1130)
Traceback (most recent call last):
  File ".\_2_train.py", line 399, in train
    x_train = np.array(x_train)
ValueError: could not broadcast input array from shape (1130,28) into shape (1130)

15.May 2020 16:02:14 correct LSTM model creation and compilation

15.May 2020 16:02:14 correct LSTM model creation and compilation

15.May 2020 16:02:14 correct LSTM model creation and compilation

15.May 2020 16:02:14 model training error
could not broadcast input array from shape (1130,28) into shape (1130)
Traceback (most recent call last):
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\numpy\core\fromnumeric.py", line 1943, in shape
    result = a.shape
AttributeError: 'list' object has no attribute 'shape'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File ".\_2_train.py", line 399, in train
    print(np.shape(x_train))
  File "<__array_function__ internals>", line 5, in shape
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\numpy\core\fromnumeric.py", line 1945, in shape
    result = asarray(a).shape
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\numpy\core\_asarray.py", line 85, in asarray
    return array(a, dtype, copy=False, order=order)
ValueError: could not broadcast input array from shape (1130,28) into shape (1130)

15.May 2020 16:03:34 correct LSTM model creation and compilation

15.May 2020 16:03:34 correct LSTM model creation and compilation

15.May 2020 16:03:34 correct LSTM model creation and compilation

15.May 2020 16:03:34 model training error
'list' object has no attribute 'reshape'
Traceback (most recent call last):
  File ".\_2_train.py", line 422, in train
    x_train = x_train.reshape((np.shape(x_train)[0], np.shape(x_train)[2], np.shape(x_train)[1]))
AttributeError: 'list' object has no attribute 'reshape'

15.May 2020 16:03:52 correct LSTM model creation and compilation

15.May 2020 16:03:52 correct LSTM model creation and compilation

15.May 2020 16:03:52 correct LSTM model creation and compilation

15.May 2020 16:03:52 model training error
could not broadcast input array from shape (1130,28) into shape (1130)
Traceback (most recent call last):
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\numpy\core\fromnumeric.py", line 1943, in shape
    result = a.shape
AttributeError: 'list' object has no attribute 'shape'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File ".\_2_train.py", line 399, in train
    print(np.shape(x_train))
  File "<__array_function__ internals>", line 5, in shape
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\numpy\core\fromnumeric.py", line 1945, in shape
    result = asarray(a).shape
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\numpy\core\_asarray.py", line 85, in asarray
    return array(a, dtype, copy=False, order=order)
ValueError: could not broadcast input array from shape (1130,28) into shape (1130)

15.May 2020 16:04:35 correct LSTM model creation and compilation

15.May 2020 16:04:35 correct LSTM model creation and compilation

15.May 2020 16:04:35 correct LSTM model creation and compilation

15.May 2020 16:04:35 model training error
'list' object has no attribute 'reshape'
Traceback (most recent call last):
  File ".\_2_train.py", line 422, in train
    x_train = x_train.reshape((np.shape(x_train)[0], np.shape(x_train)[2], np.shape(x_train)[1]))
AttributeError: 'list' object has no attribute 'reshape'

15.May 2020 16:07:26 correct LSTM model creation and compilation

15.May 2020 16:07:26 correct LSTM model creation and compilation

15.May 2020 16:07:26 correct LSTM model creation and compilation

15.May 2020 16:07:26 model training error
'list' object has no attribute 'reshape'
Traceback (most recent call last):
  File ".\_2_train.py", line 426, in train
    x_train = x_train.reshape((np.shape(x_train)[0], np.shape(x_train)[2], np.shape(x_train)[1]))
AttributeError: 'list' object has no attribute 'reshape'

15.May 2020 16:10:01 correct LSTM model creation and compilation

15.May 2020 16:10:01 correct LSTM model creation and compilation

15.May 2020 16:10:01 correct LSTM model creation and compilation

15.May 2020 16:10:01 model training error
'list' object has no attribute 'reshape'
Traceback (most recent call last):
  File ".\_2_train.py", line 429, in train
    x_train = x_train.reshape((np.shape(x_train)[0], np.shape(x_train)[2], np.shape(x_train)[1]))
AttributeError: 'list' object has no attribute 'reshape'

15.May 2020 16:10:28 correct LSTM model creation and compilation

15.May 2020 16:10:28 correct LSTM model creation and compilation

15.May 2020 16:10:28 correct LSTM model creation and compilation

15.May 2020 16:10:28 model training error
'list' object has no attribute 'reshape'
Traceback (most recent call last):
  File ".\_2_train.py", line 427, in train
    x_train = x_train.reshape((np.shape(x_train)[0], np.shape(x_train)[2], np.shape(x_train)[1]))
AttributeError: 'list' object has no attribute 'reshape'

15.May 2020 16:13:44 correct LSTM model creation and compilation

15.May 2020 16:13:44 correct LSTM model creation and compilation

15.May 2020 16:13:44 correct LSTM model creation and compilation

15.May 2020 16:13:44 model training error
'list' object has no attribute 'reshape'
Traceback (most recent call last):
  File ".\_2_train.py", line 427, in train
    x_train = x_train.reshape((np.shape(x_train)[0], np.shape(x_train)[2], np.shape(x_train)[1]))
AttributeError: 'list' object has no attribute 'reshape'

15.May 2020 16:17:10 correct LSTM model creation and compilation

15.May 2020 16:17:11 correct LSTM model creation and compilation

15.May 2020 16:17:11 correct LSTM model creation and compilation

15.May 2020 16:17:11 model training error
'list' object has no attribute 'reshape'
Traceback (most recent call last):
  File ".\_2_train.py", line 427, in train
    x_train = x_train.reshape((np.shape(x_train)[0], np.shape(x_train)[2], np.shape(x_train)[1]))
AttributeError: 'list' object has no attribute 'reshape'

15.May 2020 16:19:55 correct LSTM model creation and compilation

15.May 2020 16:19:55 correct LSTM model creation and compilation

15.May 2020 16:19:55 correct LSTM model creation and compilation

15.May 2020 16:19:55 model training error
'list' object has no attribute 'reshape'
Traceback (most recent call last):
  File ".\_2_train.py", line 427, in train
    x_train = x_train.reshape((np.shape(x_train)[0], np.shape(x_train)[2], np.shape(x_train)[1]))
AttributeError: 'list' object has no attribute 'reshape'

15.May 2020 16:20:23 correct LSTM model creation and compilation

15.May 2020 16:20:23 correct LSTM model creation and compilation

15.May 2020 16:20:23 correct LSTM model creation and compilation

15.May 2020 16:20:23 model training error
'list' object has no attribute 'reshape'
Traceback (most recent call last):
  File ".\_2_train.py", line 427, in train
    x_train = x_train.reshape((np.shape(x_train)[0], np.shape(x_train)[2], np.shape(x_train)[1]))
AttributeError: 'list' object has no attribute 'reshape'

15.May 2020 16:21:16 correct LSTM model creation and compilation

15.May 2020 16:21:16 correct LSTM model creation and compilation

15.May 2020 16:21:16 correct LSTM model creation and compilation

15.May 2020 16:21:16 model training error
could not broadcast input array from shape (1130,28) into shape (1130)
Traceback (most recent call last):
  File ".\_2_train.py", line 399, in train
    x_train = np.array(x_train)
ValueError: could not broadcast input array from shape (1130,28) into shape (1130)

15.May 2020 16:22:42 correct LSTM model creation and compilation

15.May 2020 16:22:42 correct LSTM model creation and compilation

15.May 2020 16:22:42 correct LSTM model creation and compilation

15.May 2020 16:22:42 model training error
too many indices for array
Traceback (most recent call last):
  File ".\_2_train.py", line 392, in train
    [x_train.append(group[:, day - window_input_length, day])
  File ".\_2_train.py", line 392, in <listcomp>
    [x_train.append(group[:, day - window_input_length, day])
IndexError: too many indices for array

15.May 2020 16:23:39 correct LSTM model creation and compilation

15.May 2020 16:23:39 correct LSTM model creation and compilation

15.May 2020 16:23:39 correct LSTM model creation and compilation

15.May 2020 16:24:31 time series number (by group) saved to forecast settings

15.May 2020 16:24:31 correct model training, correct saving of model and weights

15.May 2020 16:24:31 settings modified and saved

15.May 2020 16:32:11 correct LSTM model creation and compilation

15.May 2020 16:32:11 correct LSTM model creation and compilation

15.May 2020 16:32:11 correct LSTM model creation and compilation

15.May 2020 16:33:02 time series number (by group) saved to forecast settings

15.May 2020 16:33:02 correct model training, correct saving of model and weights

15.May 2020 16:33:02 settings modified and saved

15.May 2020 16:35:15 correct LSTM model creation and compilation

15.May 2020 16:35:15 correct LSTM model creation and compilation

15.May 2020 16:35:15 correct LSTM model creation and compilation

15.May 2020 16:40:28 time series number (by group) saved to forecast settings

15.May 2020 16:40:28 correct model training, correct saving of model and weights

15.May 2020 16:40:28 settings modified and saved

15.May 2020 16:42:23 correct LSTM model creation and compilation

15.May 2020 16:42:23 correct LSTM model creation and compilation

15.May 2020 16:42:23 correct LSTM model creation and compilation

15.May 2020 17:22:42 time series number (by group) saved to forecast settings

15.May 2020 17:22:42 correct model training, correct saving of model and weights

15.May 2020 17:22:42 settings modified and saved

15.May 2020 17:27:44 correct LSTM model creation and compilation

15.May 2020 17:27:44 correct LSTM model creation and compilation

15.May 2020 17:27:44 correct LSTM model creation and compilation

15.May 2020 17:29:11 correct LSTM model creation and compilation

15.May 2020 17:29:11 correct LSTM model creation and compilation

15.May 2020 17:29:11 correct LSTM model creation and compilation

15.May 2020 17:30:45 error at loading model (LTSM) hyperparameters
tunning_metaheuristic() takes no arguments
Traceback (most recent call last):
  File ".\_2_train.py", line 61, in <module>
    print(tunning_metaheuristic('hola mundo'))
TypeError: tunning_metaheuristic() takes no arguments

15.May 2020 17:32:45 error at loading model (LTSM) hyperparameters
'tunning_metaheuristic' object is not callable
Traceback (most recent call last):
  File ".\_2_train.py", line 62, in <module>
    metaheuristic('hola mundo')
TypeError: 'tunning_metaheuristic' object is not callable

15.May 2020 17:37:40 error at loading model (LTSM) hyperparameters
brain() missing 2 required positional arguments: 'self' and 'alfanum'
Traceback (most recent call last):
  File ".\_2_train.py", line 61, in <module>
    metaheuristic = tunning_metaheuristic.brain()
TypeError: brain() missing 2 required positional arguments: 'self' and 'alfanum'

15.May 2020 17:38:03 error at loading model (LTSM) hyperparameters
brain() missing 1 required positional argument: 'alfanum'
Traceback (most recent call last):
  File ".\_2_train.py", line 61, in <module>
    metaheuristic = tunning_metaheuristic.brain()
TypeError: brain() missing 1 required positional argument: 'alfanum'

15.May 2020 17:39:40 correct LSTM model creation and compilation

15.May 2020 17:39:40 correct LSTM model creation and compilation

15.May 2020 17:39:40 correct LSTM model creation and compilation

15.May 2020 17:40:10 correct LSTM model creation and compilation

15.May 2020 17:40:10 correct LSTM model creation and compilation

15.May 2020 17:40:10 correct LSTM model creation and compilation

15.May 2020 17:45:49 error at loading model (LTSM) hyperparameters
stochastic_brain() missing 1 required positional argument: 'self'
Traceback (most recent call last):
  File ".\_2_train.py", line 61, in <module>
    metaheuristic = tunning_metaheuristic.stochastic_brain()
TypeError: stochastic_brain() missing 1 required positional argument: 'self'

15.May 2020 17:48:32 correct LSTM model creation and compilation

15.May 2020 17:48:32 correct LSTM model creation and compilation

15.May 2020 17:48:32 correct LSTM model creation and compilation

15.May 2020 17:50:17 correct LSTM model creation and compilation

15.May 2020 17:50:17 correct LSTM model creation and compilation

15.May 2020 17:50:17 correct LSTM model creation and compilation

15.May 2020 17:51:03 correct LSTM model creation and compilation

15.May 2020 17:51:03 correct LSTM model creation and compilation

15.May 2020 17:51:03 correct LSTM model creation and compilation

15.May 2020 17:58:32 time series number (by group) saved to forecast settings

15.May 2020 17:58:32 correct model training, correct saving of model and weights

15.May 2020 17:58:32 settings modified and saved

15.May 2020 18:01:31 correct LSTM model creation and compilation

15.May 2020 18:01:31 correct LSTM model creation and compilation

15.May 2020 18:01:31 correct LSTM model creation and compilation

15.May 2020 18:03:44 time series number (by group) saved to forecast settings

15.May 2020 18:03:44 correct model training, correct saving of model and weights

15.May 2020 18:03:44 settings modified and saved

15.May 2020 18:06:53 correct LSTM model creation and compilation

15.May 2020 18:06:53 correct LSTM model creation and compilation

15.May 2020 18:06:53 correct LSTM model creation and compilation

15.May 2020 18:07:23 time series number (by group) saved to forecast settings

15.May 2020 18:07:23 correct model training, correct saving of model and weights

15.May 2020 18:07:23 settings modified and saved

15.May 2020 18:09:15 correct LSTM model creation and compilation

15.May 2020 18:09:15 correct LSTM model creation and compilation

15.May 2020 18:09:15 correct LSTM model creation and compilation

15.May 2020 18:10:15 time series number (by group) saved to forecast settings

15.May 2020 18:10:15 correct model training, correct saving of model and weights

15.May 2020 18:10:15 settings modified and saved

15.May 2020 18:12:33 correct LSTM model creation and compilation

15.May 2020 18:12:33 correct LSTM model creation and compilation

15.May 2020 18:12:33 correct LSTM model creation and compilation

15.May 2020 18:15:39 time series number (by group) saved to forecast settings

15.May 2020 18:15:39 correct model training, correct saving of model and weights

15.May 2020 18:15:39 settings modified and saved

15.May 2020 18:20:54 correct LSTM model creation and compilation

15.May 2020 18:20:54 correct LSTM model creation and compilation

15.May 2020 18:20:54 correct LSTM model creation and compilation

15.May 2020 18:24:08 time series number (by group) saved to forecast settings

15.May 2020 18:24:08 correct model training, correct saving of model and weights

15.May 2020 18:24:08 settings modified and saved

15.May 2020 18:27:56 correct LSTM model creation and compilation

15.May 2020 18:27:56 correct LSTM model creation and compilation

15.May 2020 18:27:56 correct LSTM model creation and compilation

15.May 2020 18:36:56 correct LSTM model creation and compilation

15.May 2020 18:36:56 correct LSTM model creation and compilation

15.May 2020 18:36:56 correct LSTM model creation and compilation

15.May 2020 18:39:54 time series number (by group) saved to forecast settings

15.May 2020 18:39:54 correct model training, correct saving of model and weights

15.May 2020 18:39:54 settings modified and saved

15.May 2020 18:50:12 correct LSTM model creation and compilation

15.May 2020 18:50:12 correct LSTM model creation and compilation

15.May 2020 18:50:12 correct LSTM model creation and compilation

15.May 2020 18:51:08 time series number (by group) saved to forecast settings

15.May 2020 18:51:08 correct model training, correct saving of model and weights

15.May 2020 18:51:08 settings modified and saved

15.May 2020 19:03:10 correct LSTM model creation and compilation

15.May 2020 19:03:10 correct LSTM model creation and compilation

15.May 2020 19:03:10 correct LSTM model creation and compilation

15.May 2020 19:03:18 time series number (by group) saved to forecast settings

15.May 2020 19:03:18 correct model training, correct saving of model and weights

15.May 2020 19:03:18 settings modified and saved

15.May 2020 19:13:07 correct LSTM model creation and compilation

15.May 2020 19:13:07 correct LSTM model creation and compilation

15.May 2020 19:13:07 correct LSTM model creation and compilation

15.May 2020 19:13:22 time series number (by group) saved to forecast settings

15.May 2020 19:13:22 correct model training, correct saving of model and weights

15.May 2020 19:13:22 settings modified and saved

15.May 2020 19:19:34 correct LSTM model creation and compilation

15.May 2020 19:19:34 correct LSTM model creation and compilation

15.May 2020 19:19:34 correct LSTM model creation and compilation

15.May 2020 19:19:57 time series number (by group) saved to forecast settings

15.May 2020 19:19:57 correct model training, correct saving of model and weights

15.May 2020 19:19:57 settings modified and saved

15.May 2020 19:27:37 correct LSTM model creation and compilation

15.May 2020 19:27:37 correct LSTM model creation and compilation

15.May 2020 19:27:37 correct LSTM model creation and compilation

15.May 2020 19:27:41 time series number (by group) saved to forecast settings

15.May 2020 19:27:41 correct model training, correct saving of model and weights

15.May 2020 19:27:41 settings modified and saved

15.May 2020 19:30:37 correct LSTM model creation and compilation

15.May 2020 19:30:37 correct LSTM model creation and compilation

15.May 2020 19:30:37 correct LSTM model creation and compilation

15.May 2020 19:31:23 time series number (by group) saved to forecast settings

15.May 2020 19:31:23 correct model training, correct saving of model and weights

15.May 2020 19:31:23 settings modified and saved

15.May 2020 19:38:04 correct LSTM model creation and compilation

15.May 2020 19:38:04 correct LSTM model creation and compilation

15.May 2020 19:38:04 correct LSTM model creation and compilation

15.May 2020 19:39:04 time series number (by group) saved to forecast settings

15.May 2020 19:39:04 correct model training, correct saving of model and weights

15.May 2020 19:39:04 settings modified and saved

15.May 2020 19:41:00 correct LSTM model creation and compilation

15.May 2020 19:41:00 correct LSTM model creation and compilation

15.May 2020 19:41:00 correct LSTM model creation and compilation

15.May 2020 19:42:18 time series number (by group) saved to forecast settings

15.May 2020 19:42:18 correct model training, correct saving of model and weights

15.May 2020 19:42:18 settings modified and saved

15.May 2020 19:45:35 correct LSTM model creation and compilation

15.May 2020 19:45:35 correct LSTM model creation and compilation

15.May 2020 19:45:35 correct LSTM model creation and compilation

15.May 2020 19:46:53 time series number (by group) saved to forecast settings

15.May 2020 19:46:53 correct model training, correct saving of model and weights

15.May 2020 19:46:53 settings modified and saved

15.May 2020 19:50:02 correct LSTM model creation and compilation

15.May 2020 19:50:02 correct LSTM model creation and compilation

15.May 2020 19:50:02 correct LSTM model creation and compilation

15.May 2020 19:52:57 time series number (by group) saved to forecast settings

15.May 2020 19:52:57 correct model training, correct saving of model and weights

15.May 2020 19:52:57 settings modified and saved

15.May 2020 20:09:22 correct LSTM model creation and compilation

15.May 2020 20:09:22 correct LSTM model creation and compilation

15.May 2020 20:09:22 correct LSTM model creation and compilation

15.May 2020 20:10:36 time series number (by group) saved to forecast settings

15.May 2020 20:10:36 correct model training, correct saving of model and weights

15.May 2020 20:10:36 settings modified and saved

15.May 2020 20:12:46 correct LSTM model creation and compilation

15.May 2020 20:12:46 correct LSTM model creation and compilation

15.May 2020 20:12:46 correct LSTM model creation and compilation

15.May 2020 20:13:46 time series number (by group) saved to forecast settings

15.May 2020 20:13:46 correct model training, correct saving of model and weights

15.May 2020 20:13:46 settings modified and saved

15.May 2020 20:15:22 correct LSTM model creation and compilation

15.May 2020 20:15:22 correct LSTM model creation and compilation

15.May 2020 20:15:22 correct LSTM model creation and compilation

15.May 2020 20:17:03 time series number (by group) saved to forecast settings

15.May 2020 20:17:03 correct model training, correct saving of model and weights

15.May 2020 20:17:03 settings modified and saved

15.May 2020 20:18:42 correct LSTM model creation and compilation

15.May 2020 20:18:42 correct LSTM model creation and compilation

15.May 2020 20:18:42 correct LSTM model creation and compilation

15.May 2020 20:20:23 time series number (by group) saved to forecast settings

15.May 2020 20:20:23 correct model training, correct saving of model and weights

15.May 2020 20:20:23 settings modified and saved
2020-05-15 20:22:14,497 INFO root 
starting main program..
current models hyperparameters settings:
{'folder': 'metaheuristics'
 'current_model_name': '_LSTM_all_features'
 'model_type': 'Bidirectional_PeepHoleLSTM_Encode_Decode'
 'regularizers_l1_l2': 'True'
 'l1': 0.001
 'l2': 0.001
 'units_layer_1': 2
 'activation_1': 'softsign'
 'return_sequences_layer_1': 'True'
 'time_steps_days': 56
 'features': 'aggregated_by_group'
 'dropout_layer_1': 0.0
 'units_layer_2': 0
 'activation_2': 'softsign'
 'return_sequences_layer_2': 'True'
 'dropout_layer_2': 0.0
 'units_layer_3': 0
 'activation_3': 'softsign'
 'return_sequences_layer_3': 'True'
 'dropout_layer_3': 0.0
 'units_layer_4': 1
 'activation_4': 'softsign'
 'return_sequences_layer_4': 'False'
 'dropout_layer_4': 0.0
 'units_final_layer': 1
 'activation_final_layer': 'None'
 'repeat_vector': 28
 'optimizer': 'adam'
 'learning_rate': 0.0007
 'loss1': 'mse'
 'loss2': 'None'
 'loss3': 'None'
 'metrics1': 'mse'
 'metrics2': 'None'
 'epochs': 5000
 'batch_size': 48
 'early_stopping_patience': 7
 'workers': 6}
2020-05-15 20:22:49,087 INFO root 
starting main program..
current models hyperparameters settings:
{'folder': 'metaheuristics'
 'current_model_name': '_LSTM_all_features'
 'model_type': 'Bidirectional_PeepHoleLSTM_Encode_Decode'
 'regularizers_l1_l2': 'True'
 'l1': 0.001
 'l2': 0.001
 'units_layer_1': 2
 'activation_1': 'softsign'
 'return_sequences_layer_1': 'True'
 'time_steps_days': 56
 'features': 'aggregated_by_group'
 'dropout_layer_1': 0.0
 'units_layer_2': 0
 'activation_2': 'softsign'
 'return_sequences_layer_2': 'True'
 'dropout_layer_2': 0.0
 'units_layer_3': 0
 'activation_3': 'softsign'
 'return_sequences_layer_3': 'True'
 'dropout_layer_3': 0.0
 'units_layer_4': 1
 'activation_4': 'softsign'
 'return_sequences_layer_4': 'False'
 'dropout_layer_4': 0.0
 'units_final_layer': 1
 'activation_final_layer': 'None'
 'repeat_vector': 28
 'optimizer': 'adam'
 'learning_rate': 0.0007
 'loss1': 'mse'
 'loss2': 'None'
 'loss3': 'None'
 'metrics1': 'mse'
 'metrics2': 'None'
 'epochs': 5000
 'batch_size': 48
 'early_stopping_patience': 7
 'workers': 6}

15.May 2020 20:23:21 correct LSTM model creation and compilation

15.May 2020 20:23:21 correct LSTM model creation and compilation

15.May 2020 20:23:21 correct LSTM model creation and compilation

15.May 2020 20:23:50 time series number (by group) saved to forecast settings

15.May 2020 20:23:50 correct model training, correct saving of model and weights

15.May 2020 20:23:50 settings modified and saved

15.May 2020 20:29:40 correct LSTM model creation and compilation

15.May 2020 20:29:40 correct LSTM model creation and compilation

15.May 2020 20:29:40 correct LSTM model creation and compilation

15.May 2020 20:31:13 time series number (by group) saved to forecast settings

15.May 2020 20:31:13 correct model training, correct saving of model and weights

15.May 2020 20:31:13 settings modified and saved
model unknown

15.May 2020 20:39:20 LSTM model creation or compile error
'NoneType' object has no attribute 'compile'
Traceback (most recent call last):
  File ".\_2_train.py", line 381, in train
    forecaster.compile(optimizer=optimizer_function,
AttributeError: 'NoneType' object has no attribute 'compile'

15.May 2020 20:39:20 model training error
list index out of range
Traceback (most recent call last):
  File ".\_2_train.py", line 463, in train
    forecaster = forecaster_models_list[group_iterator]
IndexError: list index out of range

15.May 2020 20:41:15 correct LSTM model creation and compilation

15.May 2020 20:41:15 correct LSTM model creation and compilation

15.May 2020 20:41:15 correct LSTM model creation and compilation

15.May 2020 20:46:44 time series number (by group) saved to forecast settings

15.May 2020 20:46:44 correct model training, correct saving of model and weights

15.May 2020 20:46:44 settings modified and saved

15.May 2020 20:52:24 correct LSTM model creation and compilation

15.May 2020 20:52:24 correct LSTM model creation and compilation

15.May 2020 20:52:24 correct LSTM model creation and compilation

15.May 2020 21:24:55 time series number (by group) saved to forecast settings

15.May 2020 21:24:55 correct model training, correct saving of model and weights

15.May 2020 21:24:55 settings modified and saved

15.May 2020 21:38:24 correct LSTM model creation and compilation

15.May 2020 21:38:24 correct LSTM model creation and compilation

15.May 2020 21:38:24 correct LSTM model creation and compilation

15.May 2020 21:44:11 error at loading model (LTSM) hyperparameters
name 'tunning_metaheuristic' is not defined
Traceback (most recent call last):
  File ".\_2_train.py", line 61, in <module>
    metaheuristic = tunning_metaheuristic()
NameError: name 'tunning_metaheuristic' is not defined

15.May 2020 21:44:40 correct LSTM model creation and compilation

15.May 2020 21:44:40 correct LSTM model creation and compilation

15.May 2020 21:44:40 correct LSTM model creation and compilation

15.May 2020 21:52:46 correct LSTM model creation and compilation

15.May 2020 21:52:46 correct LSTM model creation and compilation

15.May 2020 21:52:46 correct LSTM model creation and compilation

15.May 2020 21:57:15 error at loading model (LTSM) hyperparameters
name 'tuning_metaheuristic' is not defined
Traceback (most recent call last):
  File ".\_2_train.py", line 61, in <module>
    metaheuristic = tuning_metaheuristic()
NameError: name 'tuning_metaheuristic' is not defined

15.May 2020 21:58:21 error at loading model (LTSM) hyperparameters
'tuning_metaheuristic' object is not subscriptable
Traceback (most recent call last):
  File ".\_2_train.py", line 63, in <module>
    if not metaheuristic[0]:
TypeError: 'tuning_metaheuristic' object is not subscriptable

15.May 2020 22:01:01 error at loading model (LTSM) hyperparameters
'bool' object is not subscriptable
Traceback (most recent call last):
  File ".\_2_train.py", line 63, in <module>
    if not metaheuristic_hyperparameters[0]:
TypeError: 'bool' object is not subscriptable

15.May 2020 22:03:41 error at loading model (LTSM) hyperparameters
'bool' object is not subscriptable
Traceback (most recent call last):
  File ".\_2_train.py", line 63, in <module>
    if not metaheuristic_hyperparameters[0]:
TypeError: 'bool' object is not subscriptable
error at metaheuristic initialization

15.May 2020 22:04:16 correct LSTM model creation and compilation

15.May 2020 22:04:16 correct LSTM model creation and compilation

15.May 2020 22:04:16 correct LSTM model creation and compilation
error at metaheuristic initialization

15.May 2020 22:06:56 correct LSTM model creation and compilation

15.May 2020 22:06:56 correct LSTM model creation and compilation

15.May 2020 22:06:56 correct LSTM model creation and compilation
metaheuristic tuning hyperparameters loaded

15.May 2020 22:11:01 correct LSTM model creation and compilation

15.May 2020 22:11:01 correct LSTM model creation and compilation

15.May 2020 22:11:01 correct LSTM model creation and compilation

15.May 2020 22:30:08 time series number (by group) saved to forecast settings

15.May 2020 22:30:08 correct model training, correct saving of model and weights

15.May 2020 22:30:08 settings modified and saved

15.May 2020 23:13:07 error at loading model (LTSM) hyperparameters
must have exactly one of create/read/write/append mode
Traceback (most recent call last):
  File ".\_2_train.py", line 62, in <module>
    metaheuristic_hyperparameters = metaheuristic.stochastic_brain(local_script_settings)
  File "./5.2_CUSTOM_LIBRARY\metaheuristic_module.py", line 77, in stochastic_brain
    with open(''.join([local_settings['metaheuristics_path'],
ValueError: must have exactly one of create/read/write/append mode

15.May 2020 23:15:24 error at loading model (LTSM) hyperparameters
I/O operation on closed file.
Traceback (most recent call last):
  File ".\_2_train.py", line 62, in <module>
    metaheuristic_hyperparameters = metaheuristic.stochastic_brain(local_script_settings)
  File "./5.2_CUSTOM_LIBRARY\metaheuristic_module.py", line 79, in stochastic_brain
    organic_model_hyperparameters = json.loads(local_json_file.read())
ValueError: I/O operation on closed file.
metaheuristic tuning hyperparameters loaded

15.May 2020 23:19:46 error at loading model (LTSM) hyperparameters
list indices must be integers or slices, not float
Traceback (most recent call last):
  File ".\_2_train.py", line 62, in <module>
    metaheuristic_hyperparameters = metaheuristic.stochastic_brain(local_script_settings)
  File "./5.2_CUSTOM_LIBRARY\metaheuristic_module.py", line 82, in stochastic_brain
    print(hyperparameter_name, hyperparameters[hyperparameter_name])
TypeError: list indices must be integers or slices, not float
metaheuristic tuning hyperparameters loaded

15.May 2020 23:21:43 model training error
int() argument must be a string, a bytes-like object or a number, not 'list'
Traceback (most recent call last):
  File ".\_2_train.py", line 162, in train
    epochs = int(model_hyperparameters['epochs'])
TypeError: int() argument must be a string, a bytes-like object or a number, not 'list'
metaheuristic tuning hyperparameters loaded

15.May 2020 23:29:21 model training error
int() argument must be a string, a bytes-like object or a number, not 'list'
Traceback (most recent call last):
  File ".\_2_train.py", line 162, in train
    epochs = int(model_hyperparameters['epochs'])
TypeError: int() argument must be a string, a bytes-like object or a number, not 'list'
metaheuristic tuning hyperparameters loaded
metaheuristic tuning hyperparameters loaded
metaheuristic tuning hyperparameters loaded
metaheuristic tuning hyperparameters loaded
metaheuristic tuning hyperparameters loaded
metaheuristic tuning hyperparameters loaded

16.May 2020 00:03:36 LSTM model creation or compile error
'return_sequences_layer_'
Traceback (most recent call last):
  File ".\_2_train.py", line 266, in train
    return_sequences=model_hyperparameters['return_sequences_layer_'])))
KeyError: 'return_sequences_layer_'

16.May 2020 00:03:36 model training error
list index out of range
Traceback (most recent call last):
  File ".\_2_train.py", line 466, in train
    forecaster = forecaster_models_list[group_iterator]
IndexError: list index out of range
metaheuristic tuning hyperparameters loaded

16.May 2020 00:05:03 LSTM model creation or compile error
'return_sequences_layer_'
Traceback (most recent call last):
  File ".\_2_train.py", line 266, in train
    return_sequences=model_hyperparameters['return_sequences_layer_'])))
KeyError: 'return_sequences_layer_'

16.May 2020 00:05:03 model training error
list index out of range
Traceback (most recent call last):
  File ".\_2_train.py", line 466, in train
    forecaster = forecaster_models_list[group_iterator]
IndexError: list index out of range
metaheuristic tuning hyperparameters loaded

16.May 2020 00:10:49 correct LSTM model creation and compilation

16.May 2020 00:10:49 correct LSTM model creation and compilation

16.May 2020 00:10:49 correct LSTM model creation and compilation
metaheuristic tuning hyperparameters loaded

16.May 2020 00:26:57 correct LSTM model creation and compilation

16.May 2020 00:26:57 correct LSTM model creation and compilation

16.May 2020 00:26:57 correct LSTM model creation and compilation
metaheuristic tuning hyperparameters loaded

16.May 2020 00:27:59 correct LSTM model creation and compilation

16.May 2020 00:27:59 correct LSTM model creation and compilation

16.May 2020 00:27:59 correct LSTM model creation and compilation
metaheuristic tuning hyperparameters loaded

16.May 2020 00:28:37 correct LSTM model creation and compilation

16.May 2020 00:28:37 correct LSTM model creation and compilation

16.May 2020 00:28:37 correct LSTM model creation and compilation

16.May 2020 00:28:37 model training error
in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:465 train_step  **
        y_pred = self(x, training=True)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py:927 __call__
        outputs = call_fn(cast_inputs, *args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\sequential.py:291 call
        outputs = layer(inputs, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py:885 __call__
        input_spec.assert_input_compatibility(self.input_spec, inputs,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\input_spec.py:176 assert_input_compatibility
        raise ValueError('Input ' + str(input_index) + ' of layer ' +

    ValueError: Input 0 of layer repeat_vector_3 is incompatible with the layer: expected ndim=2, found ndim=3. Full shape received: [4, 28, 1]
Traceback (most recent call last):
  File ".\_2_train.py", line 467, in train
    forecaster.fit(x_train, y_train, batch_size=batch_size, epochs=epochs, workers=workers,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 66, in _method_wrapper
    return method(self, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 785, in fit
    tmp_logs = train_function(iterator)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 580, in __call__
    result = self._call(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 627, in _call
    self._initialize(args, kwds, add_initializers_to=initializers)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 505, in _initialize
    self._stateful_fn._get_concrete_function_internal_garbage_collected(  # pylint: disable=protected-access
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2446, in _get_concrete_function_internal_garbage_collected
    graph_function, _, _ = self._maybe_define_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2777, in _maybe_define_function
    graph_function = self._create_graph_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2657, in _create_graph_function
    func_graph_module.func_graph_from_py_func(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 981, in func_graph_from_py_func
    func_outputs = python_func(*func_args, **func_kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 441, in wrapped_fn
    return weak_wrapped_fn().__wrapped__(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 968, in wrapper
    raise e.ag_error_metadata.to_exception(e)
ValueError: in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:465 train_step  **
        y_pred = self(x, training=True)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py:927 __call__
        outputs = call_fn(cast_inputs, *args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\sequential.py:291 call
        outputs = layer(inputs, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py:885 __call__
        input_spec.assert_input_compatibility(self.input_spec, inputs,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\input_spec.py:176 assert_input_compatibility
        raise ValueError('Input ' + str(input_index) + ' of layer ' +

    ValueError: Input 0 of layer repeat_vector_3 is incompatible with the layer: expected ndim=2, found ndim=3. Full shape received: [4, 28, 1]

metaheuristic tuning hyperparameters loaded

16.May 2020 00:28:56 correct LSTM model creation and compilation

16.May 2020 00:28:56 correct LSTM model creation and compilation

16.May 2020 00:28:56 correct LSTM model creation and compilation

16.May 2020 00:28:57 model training error
in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:465 train_step  **
        y_pred = self(x, training=True)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py:927 __call__
        outputs = call_fn(cast_inputs, *args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\sequential.py:291 call
        outputs = layer(inputs, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py:885 __call__
        input_spec.assert_input_compatibility(self.input_spec, inputs,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\input_spec.py:176 assert_input_compatibility
        raise ValueError('Input ' + str(input_index) + ' of layer ' +

    ValueError: Input 0 of layer repeat_vector_3 is incompatible with the layer: expected ndim=2, found ndim=3. Full shape received: [8, 28, 16]
Traceback (most recent call last):
  File ".\_2_train.py", line 467, in train
    forecaster.fit(x_train, y_train, batch_size=batch_size, epochs=epochs, workers=workers,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 66, in _method_wrapper
    return method(self, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 785, in fit
    tmp_logs = train_function(iterator)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 580, in __call__
    result = self._call(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 627, in _call
    self._initialize(args, kwds, add_initializers_to=initializers)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 505, in _initialize
    self._stateful_fn._get_concrete_function_internal_garbage_collected(  # pylint: disable=protected-access
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2446, in _get_concrete_function_internal_garbage_collected
    graph_function, _, _ = self._maybe_define_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2777, in _maybe_define_function
    graph_function = self._create_graph_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2657, in _create_graph_function
    func_graph_module.func_graph_from_py_func(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 981, in func_graph_from_py_func
    func_outputs = python_func(*func_args, **func_kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 441, in wrapped_fn
    return weak_wrapped_fn().__wrapped__(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 968, in wrapper
    raise e.ag_error_metadata.to_exception(e)
ValueError: in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:465 train_step  **
        y_pred = self(x, training=True)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py:927 __call__
        outputs = call_fn(cast_inputs, *args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\sequential.py:291 call
        outputs = layer(inputs, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py:885 __call__
        input_spec.assert_input_compatibility(self.input_spec, inputs,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\input_spec.py:176 assert_input_compatibility
        raise ValueError('Input ' + str(input_index) + ' of layer ' +

    ValueError: Input 0 of layer repeat_vector_3 is incompatible with the layer: expected ndim=2, found ndim=3. Full shape received: [8, 28, 16]


16.May 2020 07:12:39 correct LSTM model creation and compilation

16.May 2020 07:12:39 correct LSTM model creation and compilation

16.May 2020 07:12:39 correct LSTM model creation and compilation

16.May 2020 07:24:03 time series number (by group) saved to forecast settings

16.May 2020 07:24:03 correct model training, correct saving of model and weights

16.May 2020 07:24:03 settings modified and saved

16.May 2020 07:27:12 correct LSTM model creation and compilation

16.May 2020 07:27:12 correct LSTM model creation and compilation

16.May 2020 07:27:13 correct LSTM model creation and compilation

16.May 2020 07:32:43 correct LSTM model creation and compilation

16.May 2020 07:32:43 correct LSTM model creation and compilation

16.May 2020 07:32:43 correct LSTM model creation and compilation

16.May 2020 07:42:08 time series number (by group) saved to forecast settings

16.May 2020 07:42:08 correct model training, correct saving of model and weights

16.May 2020 07:42:08 settings modified and saved

16.May 2020 07:53:18 error at loading model (LTSM) hyperparameters
[Errno 2] No such file or directory: './0.0_metaheuristics/model_hyperparameters.json'
Traceback (most recent call last):
  File ".\_2_train.py", line 71, in <module>
    with open(''.join([local_script_settings['hyperparameters_path'], 'model_hyperparameters.json'])) \
FileNotFoundError: [Errno 2] No such file or directory: './0.0_metaheuristics/model_hyperparameters.json'

16.May 2020 07:57:34 correct LSTM model creation and compilation

16.May 2020 07:57:34 correct LSTM model creation and compilation

16.May 2020 07:57:34 correct LSTM model creation and compilation

16.May 2020 07:57:39 time series number (by group) saved to forecast settings

16.May 2020 07:57:39 correct model training, correct saving of model and weights

16.May 2020 07:57:39 settings modified and saved

16.May 2020 08:00:47 correct LSTM model creation and compilation

16.May 2020 08:00:47 correct LSTM model creation and compilation

16.May 2020 08:00:47 correct LSTM model creation and compilation

16.May 2020 08:01:20 time series number (by group) saved to forecast settings

16.May 2020 08:01:20 correct model training, correct saving of model and weights

16.May 2020 08:01:20 settings modified and saved

16.May 2020 08:09:02 correct LSTM model creation and compilation

16.May 2020 08:09:02 correct LSTM model creation and compilation

16.May 2020 08:09:02 correct LSTM model creation and compilation

16.May 2020 08:09:31 time series number (by group) saved to forecast settings

16.May 2020 08:09:31 correct model training, correct saving of model and weights

16.May 2020 08:09:31 settings modified and saved

16.May 2020 08:13:20 correct LSTM model creation and compilation

16.May 2020 08:13:20 correct LSTM model creation and compilation

16.May 2020 08:13:20 correct LSTM model creation and compilation

16.May 2020 08:13:33 time series number (by group) saved to forecast settings

16.May 2020 08:13:33 correct model training, correct saving of model and weights

16.May 2020 08:13:33 settings modified and saved

16.May 2020 08:15:32 correct LSTM model creation and compilation

16.May 2020 08:15:32 correct LSTM model creation and compilation

16.May 2020 08:15:32 correct LSTM model creation and compilation

16.May 2020 08:15:54 correct LSTM model creation and compilation

16.May 2020 08:15:54 correct LSTM model creation and compilation

16.May 2020 08:15:54 correct LSTM model creation and compilation

16.May 2020 08:16:10 correct LSTM model creation and compilation

16.May 2020 08:16:10 correct LSTM model creation and compilation

16.May 2020 08:16:10 correct LSTM model creation and compilation

16.May 2020 08:16:23 time series number (by group) saved to forecast settings

16.May 2020 08:16:23 correct model training, correct saving of model and weights

16.May 2020 08:16:23 settings modified and saved

16.May 2020 08:16:29 correct LSTM model creation and compilation

16.May 2020 08:16:29 correct LSTM model creation and compilation

16.May 2020 08:16:29 correct LSTM model creation and compilation

16.May 2020 08:30:01 time series number (by group) saved to forecast settings

16.May 2020 08:30:01 correct model training, correct saving of model and weights

16.May 2020 08:30:01 settings modified and saved

16.May 2020 08:31:51 LSTM model creation or compile error
('Keyword argument not understood:', 'dropout')
Traceback (most recent call last):
  File ".\_2_train.py", line 357, in train
    forecaster.add(layers.Dense(units=model_hyperparameters['units_layer_1'],
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\layers\core.py", line 1131, in __init__
    super(Dense, self).__init__(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\training\tracking\base.py", line 456, in _method_wrapper
    result = method(self, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py", line 294, in __init__
    generic_utils.validate_kwargs(kwargs, allowed_kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\utils\generic_utils.py", line 792, in validate_kwargs
    raise TypeError(error_message, kwarg)
TypeError: ('Keyword argument not understood:', 'dropout')

16.May 2020 08:31:51 model training error
list index out of range
Traceback (most recent call last):
  File ".\_2_train.py", line 475, in train
    forecaster = forecaster_models_list[group_iterator]
IndexError: list index out of range

16.May 2020 08:34:11 LSTM model creation or compile error
Unknown activation function:None
Traceback (most recent call last):
  File ".\_2_train.py", line 386, in train
    forecaster.add(layers.Dense(units=nof_features_in_group,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\layers\core.py", line 1135, in __init__
    self.activation = activations.get(activation)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\activations.py", line 460, in get
    return deserialize(identifier)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\activations.py", line 418, in deserialize
    return deserialize_keras_object(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\utils\generic_utils.py", line 392, in deserialize_keras_object
    raise ValueError('Unknown ' + printable_module_name + ':' + object_name)
ValueError: Unknown activation function:None

16.May 2020 08:34:11 model training error
list index out of range
Traceback (most recent call last):
  File ".\_2_train.py", line 475, in train
    forecaster = forecaster_models_list[group_iterator]
IndexError: list index out of range

16.May 2020 08:40:36 correct LSTM model creation and compilation

16.May 2020 08:40:36 correct LSTM model creation and compilation

16.May 2020 08:40:36 correct LSTM model creation and compilation

16.May 2020 08:47:25 time series number (by group) saved to forecast settings

16.May 2020 08:47:25 correct model training, correct saving of model and weights

16.May 2020 08:47:25 settings modified and saved

16.May 2020 08:57:24 correct LSTM model creation and compilation

16.May 2020 08:57:24 correct LSTM model creation and compilation

16.May 2020 08:57:24 correct LSTM model creation and compilation

16.May 2020 08:57:45 time series number (by group) saved to forecast settings

16.May 2020 08:57:45 correct model training, correct saving of model and weights

16.May 2020 08:57:45 settings modified and saved

16.May 2020 08:59:27 correct LSTM model creation and compilation

16.May 2020 08:59:27 correct LSTM model creation and compilation

16.May 2020 08:59:27 correct LSTM model creation and compilation

16.May 2020 09:03:24 time series number (by group) saved to forecast settings

16.May 2020 09:03:24 correct model training, correct saving of model and weights

16.May 2020 09:03:24 settings modified and saved

16.May 2020 09:49:48 correct LSTM model creation and compilation

16.May 2020 09:49:48 correct LSTM model creation and compilation

16.May 2020 09:49:48 correct LSTM model creation and compilation

16.May 2020 09:54:02 time series number (by group) saved to forecast settings

16.May 2020 09:54:02 correct model training, correct saving of model and weights

16.May 2020 09:54:02 settings modified and saved

16.May 2020 10:01:00 correct LSTM model creation and compilation

16.May 2020 10:01:00 correct LSTM model creation and compilation

16.May 2020 10:01:00 correct LSTM model creation and compilation

16.May 2020 10:01:11 time series number (by group) saved to forecast settings

16.May 2020 10:01:11 correct model training, correct saving of model and weights

16.May 2020 10:01:11 settings modified and saved

16.May 2020 10:08:46 correct LSTM model creation and compilation

16.May 2020 10:08:46 correct LSTM model creation and compilation

16.May 2020 10:08:46 correct LSTM model creation and compilation

16.May 2020 10:08:56 time series number (by group) saved to forecast settings

16.May 2020 10:08:56 correct model training, correct saving of model and weights

16.May 2020 10:08:56 settings modified and saved

16.May 2020 10:13:30 correct LSTM model creation and compilation

16.May 2020 10:13:30 correct LSTM model creation and compilation

16.May 2020 10:13:30 correct LSTM model creation and compilation

16.May 2020 10:13:38 time series number (by group) saved to forecast settings

16.May 2020 10:13:38 correct model training, correct saving of model and weights

16.May 2020 10:13:38 settings modified and saved

16.May 2020 10:17:08 correct LSTM model creation and compilation

16.May 2020 10:17:08 correct LSTM model creation and compilation

16.May 2020 10:17:08 correct LSTM model creation and compilation

16.May 2020 10:17:17 time series number (by group) saved to forecast settings

16.May 2020 10:17:17 correct model training, correct saving of model and weights

16.May 2020 10:17:17 settings modified and saved

16.May 2020 10:19:09 correct LSTM model creation and compilation

16.May 2020 10:19:09 correct LSTM model creation and compilation

16.May 2020 10:19:09 correct LSTM model creation and compilation

16.May 2020 10:19:14 correct LSTM model creation and compilation

16.May 2020 10:19:14 correct LSTM model creation and compilation

16.May 2020 10:19:14 correct LSTM model creation and compilation

16.May 2020 10:19:20 time series number (by group) saved to forecast settings

16.May 2020 10:19:20 correct model training, correct saving of model and weights

16.May 2020 10:19:20 settings modified and saved

16.May 2020 10:19:26 time series number (by group) saved to forecast settings

16.May 2020 10:19:26 correct model training, correct saving of model and weights

16.May 2020 10:19:26 settings modified and saved

16.May 2020 10:19:31 correct LSTM model creation and compilation

16.May 2020 10:19:31 correct LSTM model creation and compilation

16.May 2020 10:19:31 correct LSTM model creation and compilation

16.May 2020 10:21:55 time series number (by group) saved to forecast settings

16.May 2020 10:21:55 correct model training, correct saving of model and weights

16.May 2020 10:21:55 settings modified and saved

16.May 2020 10:23:37 correct LSTM model creation and compilation

16.May 2020 10:23:37 correct LSTM model creation and compilation

16.May 2020 10:23:37 correct LSTM model creation and compilation

16.May 2020 10:28:57 time series number (by group) saved to forecast settings

16.May 2020 10:28:57 correct model training, correct saving of model and weights

16.May 2020 10:28:57 settings modified and saved

16.May 2020 10:59:55 correct LSTM model creation and compilation

16.May 2020 10:59:55 correct LSTM model creation and compilation

16.May 2020 10:59:55 correct LSTM model creation and compilation

16.May 2020 10:59:55 model training error
tuple index out of range
Traceback (most recent call last):
  File ".\_2_train.py", line 461, in train
    average_time_serie = np.mean(group[time_serie_iterator, :], axis=1)
  File "<__array_function__ internals>", line 5, in mean
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\numpy\core\fromnumeric.py", line 3334, in mean
    return _methods._mean(a, axis=axis, dtype=dtype,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\numpy\core\_methods.py", line 138, in _mean
    rcount = _count_reduce_items(arr, axis)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\numpy\core\_methods.py", line 57, in _count_reduce_items
    items *= arr.shape[ax]
IndexError: tuple index out of range

16.May 2020 11:01:23 correct LSTM model creation and compilation

16.May 2020 11:01:23 correct LSTM model creation and compilation

16.May 2020 11:01:23 correct LSTM model creation and compilation

16.May 2020 11:01:23 model training error
boolean index did not match indexed array along dimension 0; dimension is 72 but corresponding boolean dimension is 1130
Traceback (most recent call last):
  File ".\_2_train.py", line 462, in train
    x_train[x_train[time_serie_iterator, :] == 0] = average_time_serie
IndexError: boolean index did not match indexed array along dimension 0; dimension is 72 but corresponding boolean dimension is 1130

16.May 2020 11:03:20 correct LSTM model creation and compilation

16.May 2020 11:03:20 correct LSTM model creation and compilation

16.May 2020 11:03:20 correct LSTM model creation and compilation

16.May 2020 11:03:20 model training error
boolean index did not match indexed array along dimension 0; dimension is 72 but corresponding boolean dimension is 1130
Traceback (most recent call last):
  File ".\_2_train.py", line 464, in train
    x_train[x_train[time_serie_iterator, :] == 0] = average_time_serie
IndexError: boolean index did not match indexed array along dimension 0; dimension is 72 but corresponding boolean dimension is 1130

16.May 2020 11:05:09 correct LSTM model creation and compilation

16.May 2020 11:05:09 correct LSTM model creation and compilation

16.May 2020 11:05:09 correct LSTM model creation and compilation

16.May 2020 11:05:09 model training error
tuple index out of range
Traceback (most recent call last):
  File ".\_2_train.py", line 463, in train
    average_time_serie = np.mean(x_train[:, time_serie_iterator, :], axis=2)
  File "<__array_function__ internals>", line 5, in mean
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\numpy\core\fromnumeric.py", line 3334, in mean
    return _methods._mean(a, axis=axis, dtype=dtype,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\numpy\core\_methods.py", line 138, in _mean
    rcount = _count_reduce_items(arr, axis)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\numpy\core\_methods.py", line 57, in _count_reduce_items
    items *= arr.shape[ax]
IndexError: tuple index out of range

16.May 2020 11:06:23 correct LSTM model creation and compilation

16.May 2020 11:06:23 correct LSTM model creation and compilation

16.May 2020 11:06:23 correct LSTM model creation and compilation

16.May 2020 11:06:23 model training error
boolean index did not match indexed array along dimension 1; dimension is 1130 but corresponding boolean dimension is 28
Traceback (most recent call last):
  File ".\_2_train.py", line 464, in train
    x_train[x_train[:, time_serie_iterator, :] == 0] = average_time_serie
IndexError: boolean index did not match indexed array along dimension 1; dimension is 1130 but corresponding boolean dimension is 28

16.May 2020 11:09:36 correct LSTM model creation and compilation

16.May 2020 11:09:36 correct LSTM model creation and compilation

16.May 2020 11:09:36 correct LSTM model creation and compilation

16.May 2020 11:15:44 time series number (by group) saved to forecast settings

16.May 2020 11:15:44 correct model training, correct saving of model and weights

16.May 2020 11:15:44 settings modified and saved

16.May 2020 11:17:41 correct LSTM model creation and compilation

16.May 2020 11:17:41 correct LSTM model creation and compilation

16.May 2020 11:17:41 correct LSTM model creation and compilation

16.May 2020 11:20:31 time series number (by group) saved to forecast settings

16.May 2020 11:20:31 correct model training, correct saving of model and weights

16.May 2020 11:20:31 settings modified and saved

16.May 2020 11:22:24 correct LSTM model creation and compilation

16.May 2020 11:22:24 correct LSTM model creation and compilation

16.May 2020 11:22:24 correct LSTM model creation and compilation

16.May 2020 11:22:24 model training error
invalid number of arguments
Traceback (most recent call last):
  File ".\_2_train.py", line 463, in train
    average_time_serie = np.minimum(x_train[:, time_serie_iterator, :])
ValueError: invalid number of arguments

16.May 2020 11:23:15 correct LSTM model creation and compilation

16.May 2020 11:23:15 correct LSTM model creation and compilation

16.May 2020 11:23:15 correct LSTM model creation and compilation

16.May 2020 11:26:10 time series number (by group) saved to forecast settings

16.May 2020 11:26:10 correct model training, correct saving of model and weights

16.May 2020 11:26:10 settings modified and saved

16.May 2020 11:33:34 correct LSTM model creation and compilation

16.May 2020 11:33:34 correct LSTM model creation and compilation

16.May 2020 11:33:35 correct LSTM model creation and compilation

16.May 2020 11:35:57 time series number (by group) saved to forecast settings

16.May 2020 11:35:57 correct model training, correct saving of model and weights

16.May 2020 11:35:57 settings modified and saved

16.May 2020 11:39:31 correct LSTM model creation and compilation

16.May 2020 11:39:31 correct LSTM model creation and compilation

16.May 2020 11:39:31 correct LSTM model creation and compilation

16.May 2020 11:41:49 time series number (by group) saved to forecast settings

16.May 2020 11:41:49 correct model training, correct saving of model and weights

16.May 2020 11:41:49 settings modified and saved

16.May 2020 11:51:21 correct LSTM model creation and compilation

16.May 2020 11:51:21 correct LSTM model creation and compilation

16.May 2020 11:51:21 correct LSTM model creation and compilation

16.May 2020 11:56:30 time series number (by group) saved to forecast settings

16.May 2020 11:56:30 correct model training, correct saving of model and weights

16.May 2020 11:56:30 settings modified and saved

16.May 2020 12:03:08 correct LSTM model creation and compilation

16.May 2020 12:03:08 correct LSTM model creation and compilation

16.May 2020 12:03:08 correct LSTM model creation and compilation

16.May 2020 12:03:33 correct LSTM model creation and compilation

16.May 2020 12:03:33 correct LSTM model creation and compilation

16.May 2020 12:03:33 correct LSTM model creation and compilation

16.May 2020 12:05:48 time series number (by group) saved to forecast settings

16.May 2020 12:05:48 correct model training, correct saving of model and weights

16.May 2020 12:05:48 settings modified and saved

16.May 2020 12:57:37 correct LSTM model creation and compilation

16.May 2020 12:57:37 correct LSTM model creation and compilation

16.May 2020 12:57:38 correct LSTM model creation and compilation

16.May 2020 12:58:22 correct LSTM model creation and compilation

16.May 2020 12:58:22 correct LSTM model creation and compilation

16.May 2020 12:58:22 correct LSTM model creation and compilation

16.May 2020 12:59:56 time series number (by group) saved to forecast settings

16.May 2020 12:59:56 correct model training, correct saving of model and weights

16.May 2020 12:59:56 settings modified and saved

16.May 2020 13:10:06 correct LSTM model creation and compilation

16.May 2020 13:10:06 correct LSTM model creation and compilation

16.May 2020 13:10:06 correct LSTM model creation and compilation

16.May 2020 13:11:28 time series number (by group) saved to forecast settings

16.May 2020 13:11:28 correct model training, correct saving of model and weights

16.May 2020 13:11:28 settings modified and saved

16.May 2020 13:18:07 correct LSTM model creation and compilation

16.May 2020 13:18:07 correct LSTM model creation and compilation

16.May 2020 13:18:07 correct LSTM model creation and compilation

16.May 2020 13:19:36 time series number (by group) saved to forecast settings

16.May 2020 13:19:36 correct model training, correct saving of model and weights

16.May 2020 13:19:36 settings modified and saved

16.May 2020 13:22:44 correct LSTM model creation and compilation

16.May 2020 13:22:44 correct LSTM model creation and compilation

16.May 2020 13:22:44 correct LSTM model creation and compilation

16.May 2020 13:24:50 time series number (by group) saved to forecast settings

16.May 2020 13:24:50 correct model training, correct saving of model and weights

16.May 2020 13:24:50 settings modified and saved

16.May 2020 13:27:11 correct LSTM model creation and compilation

16.May 2020 13:27:11 correct LSTM model creation and compilation

16.May 2020 13:27:11 correct LSTM model creation and compilation

16.May 2020 13:34:06 time series number (by group) saved to forecast settings

16.May 2020 13:34:06 correct model training, correct saving of model and weights

16.May 2020 13:34:06 settings modified and saved

16.May 2020 14:03:29 correct LSTM model creation and compilation

16.May 2020 14:03:29 correct LSTM model creation and compilation

16.May 2020 14:03:29 correct LSTM model creation and compilation

16.May 2020 14:06:39 time series number (by group) saved to forecast settings

16.May 2020 14:06:39 correct model training, correct saving of model and weights

16.May 2020 14:06:39 settings modified and saved

16.May 2020 14:17:27 correct LSTM model creation and compilation

16.May 2020 14:17:27 correct LSTM model creation and compilation

16.May 2020 14:17:27 correct LSTM model creation and compilation

16.May 2020 14:18:17 correct LSTM model creation and compilation

16.May 2020 14:18:17 correct LSTM model creation and compilation

16.May 2020 14:18:17 correct LSTM model creation and compilation

16.May 2020 14:36:39 time series number (by group) saved to forecast settings

16.May 2020 14:36:39 correct model training, correct saving of model and weights

16.May 2020 14:36:39 settings modified and saved

16.May 2020 14:39:38 correct LSTM model creation and compilation

16.May 2020 14:39:38 correct LSTM model creation and compilation

16.May 2020 14:39:38 correct LSTM model creation and compilation

16.May 2020 14:49:57 time series number (by group) saved to forecast settings

16.May 2020 14:49:57 correct model training, correct saving of model and weights

16.May 2020 14:49:57 settings modified and saved

16.May 2020 15:03:28 correct LSTM model creation and compilation

16.May 2020 15:03:28 correct LSTM model creation and compilation

16.May 2020 15:03:28 correct LSTM model creation and compilation

16.May 2020 15:10:12 time series number (by group) saved to forecast settings

16.May 2020 15:10:12 correct model training, correct saving of model and weights

16.May 2020 15:10:12 settings modified and saved

16.May 2020 15:25:21 correct LSTM model creation and compilation

16.May 2020 15:25:22 correct LSTM model creation and compilation

16.May 2020 15:25:22 correct LSTM model creation and compilation

16.May 2020 15:41:54 time series number (by group) saved to forecast settings

16.May 2020 15:41:54 correct model training, correct saving of model and weights

16.May 2020 15:41:54 settings modified and saved

16.May 2020 15:59:40 correct LSTM model creation and compilation

16.May 2020 15:59:40 correct LSTM model creation and compilation

16.May 2020 15:59:40 correct LSTM model creation and compilation

16.May 2020 16:01:00 time series number (by group) saved to forecast settings

16.May 2020 16:01:00 correct model training, correct saving of model and weights

16.May 2020 16:01:00 settings modified and saved

16.May 2020 16:03:56 correct LSTM model creation and compilation

16.May 2020 16:03:56 correct LSTM model creation and compilation

16.May 2020 16:03:56 correct LSTM model creation and compilation

16.May 2020 16:05:03 time series number (by group) saved to forecast settings

16.May 2020 16:05:03 correct model training, correct saving of model and weights

16.May 2020 16:05:03 settings modified and saved

16.May 2020 16:08:58 correct LSTM model creation and compilation

16.May 2020 16:08:58 correct LSTM model creation and compilation

16.May 2020 16:08:58 correct LSTM model creation and compilation

16.May 2020 16:09:03 time series number (by group) saved to forecast settings

16.May 2020 16:09:03 correct model training, correct saving of model and weights

16.May 2020 16:09:03 settings modified and saved

16.May 2020 16:23:30 correct LSTM model creation and compilation

16.May 2020 16:23:30 correct LSTM model creation and compilation

16.May 2020 16:23:30 correct LSTM model creation and compilation

16.May 2020 16:23:36 time series number (by group) saved to forecast settings

16.May 2020 16:23:36 correct model training, correct saving of model and weights

16.May 2020 16:23:36 settings modified and saved

16.May 2020 16:42:15 correct LSTM model creation and compilation

16.May 2020 16:42:15 correct LSTM model creation and compilation

16.May 2020 16:42:15 correct LSTM model creation and compilation

16.May 2020 16:42:21 time series number (by group) saved to forecast settings

16.May 2020 16:42:21 correct model training, correct saving of model and weights

16.May 2020 16:42:21 settings modified and saved

16.May 2020 16:49:08 correct LSTM model creation and compilation

16.May 2020 16:49:08 correct LSTM model creation and compilation

16.May 2020 16:49:09 correct LSTM model creation and compilation

16.May 2020 16:49:21 time series number (by group) saved to forecast settings

16.May 2020 16:49:21 correct model training, correct saving of model and weights

16.May 2020 16:49:21 settings modified and saved

16.May 2020 16:56:08 model training error
'loss1'
Traceback (most recent call last):
  File ".\_2_train.py", line 171, in train
    loss1 = model_hyperparameters['loss1']
KeyError: 'loss1'

16.May 2020 16:57:21 correct LSTM model creation and compilation

16.May 2020 16:57:21 correct LSTM model creation and compilation

16.May 2020 16:57:21 correct LSTM model creation and compilation

16.May 2020 17:00:59 time series number (by group) saved to forecast settings

16.May 2020 17:00:59 correct model training, correct saving of model and weights

16.May 2020 17:00:59 settings modified and saved

16.May 2020 17:05:38 correct LSTM model creation and compilation

16.May 2020 17:05:38 correct LSTM model creation and compilation

16.May 2020 17:05:38 correct LSTM model creation and compilation

16.May 2020 17:08:34 time series number (by group) saved to forecast settings

16.May 2020 17:08:34 correct model training, correct saving of model and weights

16.May 2020 17:08:34 settings modified and saved

16.May 2020 17:10:58 correct LSTM model creation and compilation

16.May 2020 17:10:58 correct LSTM model creation and compilation

16.May 2020 17:10:58 correct LSTM model creation and compilation

16.May 2020 17:11:58 time series number (by group) saved to forecast settings

16.May 2020 17:11:58 correct model training, correct saving of model and weights

16.May 2020 17:11:58 settings modified and saved

16.May 2020 17:21:43 correct LSTM model creation and compilation

16.May 2020 17:21:43 correct LSTM model creation and compilation

16.May 2020 17:21:43 correct LSTM model creation and compilation

16.May 2020 17:22:46 time series number (by group) saved to forecast settings

16.May 2020 17:22:46 correct model training, correct saving of model and weights

16.May 2020 17:22:46 settings modified and saved

16.May 2020 17:24:23 correct LSTM model creation and compilation

16.May 2020 17:24:23 correct LSTM model creation and compilation

16.May 2020 17:24:23 correct LSTM model creation and compilation

16.May 2020 17:29:06 time series number (by group) saved to forecast settings

16.May 2020 17:29:06 correct model training, correct saving of model and weights

16.May 2020 17:29:06 settings modified and saved

16.May 2020 17:32:31 correct LSTM model creation and compilation

16.May 2020 17:32:31 correct LSTM model creation and compilation

16.May 2020 17:32:31 correct LSTM model creation and compilation

16.May 2020 17:32:43 time series number (by group) saved to forecast settings

16.May 2020 17:32:43 correct model training, correct saving of model and weights

16.May 2020 17:32:43 settings modified and saved

16.May 2020 17:35:19 correct LSTM model creation and compilation

16.May 2020 17:35:19 correct LSTM model creation and compilation

16.May 2020 17:35:19 correct LSTM model creation and compilation

16.May 2020 17:36:51 time series number (by group) saved to forecast settings

16.May 2020 17:36:51 correct model training, correct saving of model and weights

16.May 2020 17:36:51 settings modified and saved

16.May 2020 17:39:23 correct LSTM model creation and compilation

16.May 2020 17:39:23 correct LSTM model creation and compilation

16.May 2020 17:39:24 correct LSTM model creation and compilation

16.May 2020 17:39:34 time series number (by group) saved to forecast settings

16.May 2020 17:39:34 correct model training, correct saving of model and weights

16.May 2020 17:39:34 settings modified and saved

16.May 2020 17:42:31 correct LSTM model creation and compilation

16.May 2020 17:42:31 correct LSTM model creation and compilation

16.May 2020 17:42:31 correct LSTM model creation and compilation

16.May 2020 17:42:43 time series number (by group) saved to forecast settings

16.May 2020 17:42:43 correct model training, correct saving of model and weights

16.May 2020 17:42:43 settings modified and saved

16.May 2020 17:45:03 correct LSTM model creation and compilation

16.May 2020 17:45:03 correct LSTM model creation and compilation

16.May 2020 17:45:03 correct LSTM model creation and compilation

16.May 2020 17:45:15 time series number (by group) saved to forecast settings

16.May 2020 17:45:15 correct model training, correct saving of model and weights

16.May 2020 17:45:15 settings modified and saved

16.May 2020 17:47:21 correct LSTM model creation and compilation

16.May 2020 17:47:21 correct LSTM model creation and compilation

16.May 2020 17:47:21 correct LSTM model creation and compilation

16.May 2020 17:47:35 time series number (by group) saved to forecast settings

16.May 2020 17:47:35 correct model training, correct saving of model and weights

16.May 2020 17:47:35 settings modified and saved

16.May 2020 17:50:02 correct LSTM model creation and compilation

16.May 2020 17:50:02 correct LSTM model creation and compilation

16.May 2020 17:50:02 correct LSTM model creation and compilation

16.May 2020 17:50:27 time series number (by group) saved to forecast settings

16.May 2020 17:50:27 correct model training, correct saving of model and weights

16.May 2020 17:50:27 settings modified and saved

16.May 2020 17:53:56 correct LSTM model creation and compilation

16.May 2020 17:53:56 correct LSTM model creation and compilation

16.May 2020 17:53:56 correct LSTM model creation and compilation

16.May 2020 18:05:19 time series number (by group) saved to forecast settings

16.May 2020 18:05:19 correct model training, correct saving of model and weights

16.May 2020 18:05:19 settings modified and saved

16.May 2020 18:07:19 correct LSTM model creation and compilation

16.May 2020 18:07:19 correct LSTM model creation and compilation

16.May 2020 18:07:20 correct LSTM model creation and compilation

16.May 2020 18:20:39 time series number (by group) saved to forecast settings

16.May 2020 18:20:39 correct model training, correct saving of model and weights

16.May 2020 18:20:39 settings modified and saved

16.May 2020 18:23:48 correct LSTM model creation and compilation

16.May 2020 18:23:48 correct LSTM model creation and compilation

16.May 2020 18:23:48 correct LSTM model creation and compilation

16.May 2020 18:34:53 time series number (by group) saved to forecast settings

16.May 2020 18:34:53 correct model training, correct saving of model and weights

16.May 2020 18:34:53 settings modified and saved

16.May 2020 18:37:14 correct LSTM model creation and compilation

16.May 2020 18:37:14 correct LSTM model creation and compilation

16.May 2020 18:37:14 correct LSTM model creation and compilation

16.May 2020 18:48:06 time series number (by group) saved to forecast settings

16.May 2020 18:48:06 correct model training, correct saving of model and weights

16.May 2020 18:48:06 settings modified and saved

16.May 2020 19:07:12 correct LSTM model creation and compilation

16.May 2020 19:07:12 correct LSTM model creation and compilation

16.May 2020 19:07:12 correct LSTM model creation and compilation

16.May 2020 19:20:22 time series number (by group) saved to forecast settings

16.May 2020 19:20:22 correct model training, correct saving of model and weights

16.May 2020 19:20:22 settings modified and saved

16.May 2020 19:23:43 correct LSTM model creation and compilation

16.May 2020 19:23:43 correct LSTM model creation and compilation

16.May 2020 19:23:43 correct LSTM model creation and compilation

16.May 2020 19:39:03 time series number (by group) saved to forecast settings

16.May 2020 19:39:03 correct model training, correct saving of model and weights

16.May 2020 19:39:03 settings modified and saved

16.May 2020 19:45:08 correct LSTM model creation and compilation

16.May 2020 19:45:08 correct LSTM model creation and compilation

16.May 2020 19:45:08 correct LSTM model creation and compilation

16.May 2020 19:59:47 time series number (by group) saved to forecast settings

16.May 2020 19:59:47 correct model training, correct saving of model and weights

16.May 2020 19:59:47 settings modified and saved

16.May 2020 20:08:00 correct LSTM model creation and compilation

16.May 2020 20:08:00 correct LSTM model creation and compilation

16.May 2020 20:08:00 correct LSTM model creation and compilation

16.May 2020 20:21:14 time series number (by group) saved to forecast settings

16.May 2020 20:21:14 correct model training, correct saving of model and weights

16.May 2020 20:21:14 settings modified and saved

16.May 2020 20:24:36 correct LSTM model creation and compilation

16.May 2020 20:24:36 correct LSTM model creation and compilation

16.May 2020 20:24:36 correct LSTM model creation and compilation

16.May 2020 20:38:10 time series number (by group) saved to forecast settings

16.May 2020 20:38:10 correct model training, correct saving of model and weights

16.May 2020 20:38:10 settings modified and saved

16.May 2020 20:41:15 correct LSTM model creation and compilation

16.May 2020 20:41:15 correct LSTM model creation and compilation

16.May 2020 20:41:15 correct LSTM model creation and compilation

16.May 2020 20:54:35 time series number (by group) saved to forecast settings

16.May 2020 20:54:35 correct model training, correct saving of model and weights

16.May 2020 20:54:35 settings modified and saved

16.May 2020 20:58:15 correct LSTM model creation and compilation

16.May 2020 20:58:15 correct LSTM model creation and compilation

16.May 2020 20:58:15 correct LSTM model creation and compilation

16.May 2020 21:15:15 time series number (by group) saved to forecast settings

16.May 2020 21:15:15 correct model training, correct saving of model and weights

16.May 2020 21:15:15 settings modified and saved

16.May 2020 21:18:40 correct LSTM model creation and compilation

16.May 2020 21:18:40 correct LSTM model creation and compilation

16.May 2020 21:18:40 correct LSTM model creation and compilation

16.May 2020 21:34:28 time series number (by group) saved to forecast settings

16.May 2020 21:34:28 correct model training, correct saving of model and weights

16.May 2020 21:34:28 settings modified and saved

16.May 2020 21:39:07 correct LSTM model creation and compilation

16.May 2020 21:39:07 correct LSTM model creation and compilation

16.May 2020 21:39:07 correct LSTM model creation and compilation

16.May 2020 21:53:39 time series number (by group) saved to forecast settings

16.May 2020 21:53:39 correct model training, correct saving of model and weights

16.May 2020 21:53:39 settings modified and saved

16.May 2020 22:11:13 correct LSTM model creation and compilation

16.May 2020 22:11:13 correct LSTM model creation and compilation

16.May 2020 22:11:13 correct LSTM model creation and compilation

16.May 2020 22:13:54 time series number (by group) saved to forecast settings

16.May 2020 22:13:54 correct model training, correct saving of model and weights

16.May 2020 22:13:54 settings modified and saved

16.May 2020 22:17:43 correct LSTM model creation and compilation

16.May 2020 22:17:43 correct LSTM model creation and compilation

16.May 2020 22:17:43 correct LSTM model creation and compilation

16.May 2020 22:20:15 time series number (by group) saved to forecast settings

16.May 2020 22:20:15 correct model training, correct saving of model and weights

16.May 2020 22:20:15 settings modified and saved

16.May 2020 22:48:43 correct LSTM model creation and compilation

16.May 2020 22:48:43 correct LSTM model creation and compilation

16.May 2020 22:48:43 correct LSTM model creation and compilation

16.May 2020 22:49:39 time series number (by group) saved to forecast settings

16.May 2020 22:49:39 correct model training, correct saving of model and weights

16.May 2020 22:49:39 settings modified and saved

16.May 2020 22:53:31 correct LSTM model creation and compilation

16.May 2020 22:53:32 correct LSTM model creation and compilation

16.May 2020 22:53:32 correct LSTM model creation and compilation

16.May 2020 23:02:21 time series number (by group) saved to forecast settings

16.May 2020 23:02:21 correct model training, correct saving of model and weights

16.May 2020 23:02:21 settings modified and saved

16.May 2020 23:15:14 correct LSTM model creation and compilation

16.May 2020 23:15:14 correct LSTM model creation and compilation

16.May 2020 23:15:14 correct LSTM model creation and compilation

16.May 2020 23:35:37 time series number (by group) saved to forecast settings

16.May 2020 23:35:37 correct model training, correct saving of model and weights

16.May 2020 23:35:37 settings modified and saved

17.May 2020 00:13:54 correct LSTM model creation and compilation

17.May 2020 00:13:54 correct LSTM model creation and compilation

17.May 2020 00:13:54 correct LSTM model creation and compilation

17.May 2020 00:33:48 time series number (by group) saved to forecast settings

17.May 2020 00:33:48 correct model training, correct saving of model and weights

17.May 2020 00:33:48 settings modified and saved

17.May 2020 01:02:07 correct LSTM model creation and compilation

17.May 2020 01:02:07 correct LSTM model creation and compilation

17.May 2020 01:02:07 correct LSTM model creation and compilation

17.May 2020 01:15:44 time series number (by group) saved to forecast settings

17.May 2020 01:15:44 correct model training, correct saving of model and weights

17.May 2020 01:15:44 settings modified and saved

17.May 2020 07:31:43 correct LSTM model creation and compilation

17.May 2020 07:31:43 correct LSTM model creation and compilation

17.May 2020 07:31:43 correct LSTM model creation and compilation

17.May 2020 07:41:28 time series number (by group) saved to forecast settings

17.May 2020 07:41:28 correct model training, correct saving of model and weights

17.May 2020 07:41:28 settings modified and saved

17.May 2020 07:57:14 correct LSTM model creation and compilation

17.May 2020 07:57:14 correct LSTM model creation and compilation

17.May 2020 07:57:14 correct LSTM model creation and compilation

17.May 2020 08:12:08 time series number (by group) saved to forecast settings

17.May 2020 08:12:08 correct model training, correct saving of model and weights

17.May 2020 08:12:08 settings modified and saved

17.May 2020 08:20:30 correct LSTM model creation and compilation

17.May 2020 08:20:30 correct LSTM model creation and compilation

17.May 2020 08:20:30 correct LSTM model creation and compilation

17.May 2020 08:39:50 time series number (by group) saved to forecast settings

17.May 2020 08:39:50 correct model training, correct saving of model and weights

17.May 2020 08:39:50 settings modified and saved

17.May 2020 08:42:23 correct LSTM model creation and compilation

17.May 2020 08:42:23 correct LSTM model creation and compilation

17.May 2020 08:42:23 correct LSTM model creation and compilation

17.May 2020 08:52:34 time series number (by group) saved to forecast settings

17.May 2020 08:52:34 correct model training, correct saving of model and weights

17.May 2020 08:52:34 settings modified and saved

17.May 2020 09:07:41 correct LSTM model creation and compilation

17.May 2020 09:07:42 correct LSTM model creation and compilation

17.May 2020 09:07:42 correct LSTM model creation and compilation

17.May 2020 09:09:12 time series number (by group) saved to forecast settings

17.May 2020 09:09:12 correct model training, correct saving of model and weights

17.May 2020 09:09:12 settings modified and saved

17.May 2020 09:11:58 correct LSTM model creation and compilation

17.May 2020 09:11:58 correct LSTM model creation and compilation

17.May 2020 09:11:58 correct LSTM model creation and compilation

17.May 2020 09:33:41 time series number (by group) saved to forecast settings

17.May 2020 09:33:41 correct model training, correct saving of model and weights

17.May 2020 09:33:41 settings modified and saved

17.May 2020 09:42:24 correct LSTM model creation and compilation

17.May 2020 09:42:24 correct LSTM model creation and compilation

17.May 2020 09:42:24 correct LSTM model creation and compilation

17.May 2020 09:46:42 time series number (by group) saved to forecast settings

17.May 2020 09:46:42 correct model training, correct saving of model and weights

17.May 2020 09:46:42 settings modified and saved

17.May 2020 09:49:32 correct LSTM model creation and compilation

17.May 2020 09:49:32 correct LSTM model creation and compilation

17.May 2020 09:49:32 correct LSTM model creation and compilation

17.May 2020 09:59:42 time series number (by group) saved to forecast settings

17.May 2020 09:59:42 correct model training, correct saving of model and weights

17.May 2020 09:59:42 settings modified and saved

17.May 2020 10:11:53 correct LSTM model creation and compilation

17.May 2020 10:11:53 correct LSTM model creation and compilation

17.May 2020 10:11:53 correct LSTM model creation and compilation

17.May 2020 10:29:14 time series number (by group) saved to forecast settings

17.May 2020 10:29:14 correct model training, correct saving of model and weights

17.May 2020 10:29:14 settings modified and saved

17.May 2020 10:31:48 correct LSTM model creation and compilation

17.May 2020 10:31:48 correct LSTM model creation and compilation

17.May 2020 10:31:48 correct LSTM model creation and compilation

17.May 2020 11:17:03 time series number (by group) saved to forecast settings

17.May 2020 11:17:03 correct model training, correct saving of model and weights

17.May 2020 11:17:03 settings modified and saved

17.May 2020 11:28:08 correct LSTM model creation and compilation

17.May 2020 11:28:08 correct LSTM model creation and compilation

17.May 2020 11:28:08 correct LSTM model creation and compilation

17.May 2020 11:47:46 time series number (by group) saved to forecast settings

17.May 2020 11:47:46 correct model training, correct saving of model and weights

17.May 2020 11:47:46 settings modified and saved

17.May 2020 12:29:20 correct LSTM model creation and compilation

17.May 2020 12:29:20 correct LSTM model creation and compilation

17.May 2020 12:29:20 correct LSTM model creation and compilation

17.May 2020 12:45:49 time series number (by group) saved to forecast settings

17.May 2020 12:45:49 correct model training, correct saving of model and weights

17.May 2020 12:45:49 settings modified and saved
metaheuristic tuning hyperparameters and best_results loaded

17.May 2020 13:49:04 model training error
'loss_2'
Traceback (most recent call last):
  File ".\_2_train.py", line 171, in train
    loss_2 = model_hyperparameters['loss_2']
KeyError: 'loss_2'
metaheuristic tuning hyperparameters and best_results loaded

17.May 2020 13:52:46 correct LSTM model creation and compilation

17.May 2020 13:52:46 correct LSTM model creation and compilation

17.May 2020 13:52:46 correct LSTM model creation and compilation

17.May 2020 14:07:48 time series number (by group) saved to forecast settings

17.May 2020 14:07:48 correct model training, correct saving of model and weights

17.May 2020 14:07:48 settings modified and saved
metaheuristic tuning hyperparameters and best_results loaded

17.May 2020 14:50:44 correct LSTM model creation and compilation

17.May 2020 14:50:44 correct LSTM model creation and compilation

17.May 2020 14:50:44 correct LSTM model creation and compilation

17.May 2020 15:04:01 time series number (by group) saved to forecast settings

17.May 2020 15:04:01 correct model training, correct saving of model and weights

17.May 2020 15:04:01 settings modified and saved
metaheuristic tuning hyperparameters and best_results loaded

17.May 2020 15:09:10 correct LSTM model creation and compilation

17.May 2020 15:09:10 correct LSTM model creation and compilation

17.May 2020 15:09:10 correct LSTM model creation and compilation

17.May 2020 15:21:29 time series number (by group) saved to forecast settings

17.May 2020 15:21:29 correct model training, correct saving of model and weights

17.May 2020 15:21:29 settings modified and saved
metaheuristic tuning hyperparameters and best_results loaded

17.May 2020 16:41:53 correct LSTM model creation and compilation

17.May 2020 16:41:53 correct LSTM model creation and compilation

17.May 2020 16:41:53 correct LSTM model creation and compilation
metaheuristic tuning hyperparameters and best_results loaded

17.May 2020 16:42:29 correct LSTM model creation and compilation

17.May 2020 16:42:29 correct LSTM model creation and compilation

17.May 2020 16:42:29 correct LSTM model creation and compilation
metaheuristic tuning hyperparameters and best_results loaded

17.May 2020 16:43:07 correct LSTM model creation and compilation

17.May 2020 16:43:07 correct LSTM model creation and compilation

17.May 2020 16:43:07 correct LSTM model creation and compilation
metaheuristic tuning hyperparameters and best_results loaded

17.May 2020 16:44:50 correct LSTM model creation and compilation

17.May 2020 16:44:50 correct LSTM model creation and compilation

17.May 2020 16:44:50 correct LSTM model creation and compilation

17.May 2020 16:44:50 model training error
in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:465 train_step  **
        y_pred = self(x, training=True)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py:927 __call__
        outputs = call_fn(cast_inputs, *args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\sequential.py:291 call
        outputs = layer(inputs, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py:885 __call__
        input_spec.assert_input_compatibility(self.input_spec, inputs,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\input_spec.py:176 assert_input_compatibility
        raise ValueError('Input ' + str(input_index) + ' of layer ' +

    ValueError: Input 0 of layer repeat_vector_1 is incompatible with the layer: expected ndim=2, found ndim=3. Full shape received: [None, 28, 96]
Traceback (most recent call last):
  File ".\_2_train.py", line 481, in train
    forecaster.fit(x_train, y_train, batch_size=batch_size, epochs=epochs, workers=workers,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 66, in _method_wrapper
    return method(self, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 785, in fit
    tmp_logs = train_function(iterator)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 580, in __call__
    result = self._call(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 627, in _call
    self._initialize(args, kwds, add_initializers_to=initializers)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 505, in _initialize
    self._stateful_fn._get_concrete_function_internal_garbage_collected(  # pylint: disable=protected-access
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2446, in _get_concrete_function_internal_garbage_collected
    graph_function, _, _ = self._maybe_define_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2777, in _maybe_define_function
    graph_function = self._create_graph_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2657, in _create_graph_function
    func_graph_module.func_graph_from_py_func(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 981, in func_graph_from_py_func
    func_outputs = python_func(*func_args, **func_kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 441, in wrapped_fn
    return weak_wrapped_fn().__wrapped__(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 968, in wrapper
    raise e.ag_error_metadata.to_exception(e)
ValueError: in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:465 train_step  **
        y_pred = self(x, training=True)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py:927 __call__
        outputs = call_fn(cast_inputs, *args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\sequential.py:291 call
        outputs = layer(inputs, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py:885 __call__
        input_spec.assert_input_compatibility(self.input_spec, inputs,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\input_spec.py:176 assert_input_compatibility
        raise ValueError('Input ' + str(input_index) + ' of layer ' +

    ValueError: Input 0 of layer repeat_vector_1 is incompatible with the layer: expected ndim=2, found ndim=3. Full shape received: [None, 28, 96]

metaheuristic tuning hyperparameters and best_results loaded

17.May 2020 16:49:46 correct LSTM model creation and compilation

17.May 2020 16:49:46 correct LSTM model creation and compilation

17.May 2020 16:49:47 correct LSTM model creation and compilation

17.May 2020 16:49:47 model training error
in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:465 train_step  **
        y_pred = self(x, training=True)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py:927 __call__
        outputs = call_fn(cast_inputs, *args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\sequential.py:291 call
        outputs = layer(inputs, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py:885 __call__
        input_spec.assert_input_compatibility(self.input_spec, inputs,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\input_spec.py:176 assert_input_compatibility
        raise ValueError('Input ' + str(input_index) + ' of layer ' +

    ValueError: Input 0 of layer repeat_vector_1 is incompatible with the layer: expected ndim=2, found ndim=3. Full shape received: [None, 28, 96]
Traceback (most recent call last):
  File ".\_2_train.py", line 481, in train
    forecaster.fit(x_train, y_train, batch_size=batch_size, epochs=epochs, workers=workers,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 66, in _method_wrapper
    return method(self, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 785, in fit
    tmp_logs = train_function(iterator)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 580, in __call__
    result = self._call(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 627, in _call
    self._initialize(args, kwds, add_initializers_to=initializers)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 505, in _initialize
    self._stateful_fn._get_concrete_function_internal_garbage_collected(  # pylint: disable=protected-access
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2446, in _get_concrete_function_internal_garbage_collected
    graph_function, _, _ = self._maybe_define_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2777, in _maybe_define_function
    graph_function = self._create_graph_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2657, in _create_graph_function
    func_graph_module.func_graph_from_py_func(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 981, in func_graph_from_py_func
    func_outputs = python_func(*func_args, **func_kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 441, in wrapped_fn
    return weak_wrapped_fn().__wrapped__(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 968, in wrapper
    raise e.ag_error_metadata.to_exception(e)
ValueError: in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:465 train_step  **
        y_pred = self(x, training=True)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py:927 __call__
        outputs = call_fn(cast_inputs, *args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\sequential.py:291 call
        outputs = layer(inputs, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py:885 __call__
        input_spec.assert_input_compatibility(self.input_spec, inputs,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\input_spec.py:176 assert_input_compatibility
        raise ValueError('Input ' + str(input_index) + ' of layer ' +

    ValueError: Input 0 of layer repeat_vector_1 is incompatible with the layer: expected ndim=2, found ndim=3. Full shape received: [None, 28, 96]

metaheuristic tuning hyperparameters and best_results loaded

17.May 2020 17:04:51 correct LSTM model creation and compilation

17.May 2020 17:04:51 correct LSTM model creation and compilation

17.May 2020 17:04:51 correct LSTM model creation and compilation

17.May 2020 17:04:52 model training error
in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:465 train_step  **
        y_pred = self(x, training=True)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py:927 __call__
        outputs = call_fn(cast_inputs, *args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\sequential.py:291 call
        outputs = layer(inputs, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py:885 __call__
        input_spec.assert_input_compatibility(self.input_spec, inputs,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\input_spec.py:176 assert_input_compatibility
        raise ValueError('Input ' + str(input_index) + ' of layer ' +

    ValueError: Input 0 of layer repeat_vector_1 is incompatible with the layer: expected ndim=2, found ndim=3. Full shape received: [None, 28, 96]
Traceback (most recent call last):
  File ".\_2_train.py", line 481, in train
    forecaster.fit(x_train, y_train, batch_size=batch_size, epochs=epochs, workers=workers,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 66, in _method_wrapper
    return method(self, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 785, in fit
    tmp_logs = train_function(iterator)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 580, in __call__
    result = self._call(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 627, in _call
    self._initialize(args, kwds, add_initializers_to=initializers)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 505, in _initialize
    self._stateful_fn._get_concrete_function_internal_garbage_collected(  # pylint: disable=protected-access
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2446, in _get_concrete_function_internal_garbage_collected
    graph_function, _, _ = self._maybe_define_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2777, in _maybe_define_function
    graph_function = self._create_graph_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2657, in _create_graph_function
    func_graph_module.func_graph_from_py_func(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 981, in func_graph_from_py_func
    func_outputs = python_func(*func_args, **func_kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 441, in wrapped_fn
    return weak_wrapped_fn().__wrapped__(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 968, in wrapper
    raise e.ag_error_metadata.to_exception(e)
ValueError: in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:465 train_step  **
        y_pred = self(x, training=True)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py:927 __call__
        outputs = call_fn(cast_inputs, *args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\sequential.py:291 call
        outputs = layer(inputs, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py:885 __call__
        input_spec.assert_input_compatibility(self.input_spec, inputs,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\input_spec.py:176 assert_input_compatibility
        raise ValueError('Input ' + str(input_index) + ' of layer ' +

    ValueError: Input 0 of layer repeat_vector_1 is incompatible with the layer: expected ndim=2, found ndim=3. Full shape received: [None, 28, 96]

metaheuristic tuning hyperparameters and best_results loaded

17.May 2020 17:30:51 correct LSTM model creation and compilation

17.May 2020 17:30:51 correct LSTM model creation and compilation

17.May 2020 17:30:51 correct LSTM model creation and compilation

17.May 2020 17:30:51 model training error
in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:465 train_step  **
        y_pred = self(x, training=True)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py:927 __call__
        outputs = call_fn(cast_inputs, *args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\sequential.py:291 call
        outputs = layer(inputs, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py:885 __call__
        input_spec.assert_input_compatibility(self.input_spec, inputs,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\input_spec.py:176 assert_input_compatibility
        raise ValueError('Input ' + str(input_index) + ' of layer ' +

    ValueError: Input 0 of layer repeat_vector_1 is incompatible with the layer: expected ndim=2, found ndim=3. Full shape received: [None, 28, 96]
Traceback (most recent call last):
  File ".\_2_train.py", line 481, in train
    forecaster.fit(x_train, y_train, batch_size=batch_size, epochs=epochs, workers=workers,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 66, in _method_wrapper
    return method(self, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 785, in fit
    tmp_logs = train_function(iterator)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 580, in __call__
    result = self._call(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 627, in _call
    self._initialize(args, kwds, add_initializers_to=initializers)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 505, in _initialize
    self._stateful_fn._get_concrete_function_internal_garbage_collected(  # pylint: disable=protected-access
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2446, in _get_concrete_function_internal_garbage_collected
    graph_function, _, _ = self._maybe_define_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2777, in _maybe_define_function
    graph_function = self._create_graph_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2657, in _create_graph_function
    func_graph_module.func_graph_from_py_func(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 981, in func_graph_from_py_func
    func_outputs = python_func(*func_args, **func_kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 441, in wrapped_fn
    return weak_wrapped_fn().__wrapped__(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 968, in wrapper
    raise e.ag_error_metadata.to_exception(e)
ValueError: in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:465 train_step  **
        y_pred = self(x, training=True)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py:927 __call__
        outputs = call_fn(cast_inputs, *args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\sequential.py:291 call
        outputs = layer(inputs, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py:885 __call__
        input_spec.assert_input_compatibility(self.input_spec, inputs,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\input_spec.py:176 assert_input_compatibility
        raise ValueError('Input ' + str(input_index) + ' of layer ' +

    ValueError: Input 0 of layer repeat_vector_1 is incompatible with the layer: expected ndim=2, found ndim=3. Full shape received: [None, 28, 96]

metaheuristic tuning hyperparameters and best_results loaded

17.May 2020 17:42:41 correct LSTM model creation and compilation

17.May 2020 17:42:41 correct LSTM model creation and compilation

17.May 2020 17:42:42 correct LSTM model creation and compilation

17.May 2020 17:42:42 model training error
in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:465 train_step  **
        y_pred = self(x, training=True)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py:927 __call__
        outputs = call_fn(cast_inputs, *args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\sequential.py:291 call
        outputs = layer(inputs, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py:885 __call__
        input_spec.assert_input_compatibility(self.input_spec, inputs,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\input_spec.py:176 assert_input_compatibility
        raise ValueError('Input ' + str(input_index) + ' of layer ' +

    ValueError: Input 0 of layer repeat_vector_1 is incompatible with the layer: expected ndim=2, found ndim=3. Full shape received: [None, 28, 96]
Traceback (most recent call last):
  File ".\_2_train.py", line 481, in train
    forecaster.fit(x_train, y_train, batch_size=batch_size, epochs=epochs, workers=workers,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 66, in _method_wrapper
    return method(self, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 785, in fit
    tmp_logs = train_function(iterator)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 580, in __call__
    result = self._call(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 627, in _call
    self._initialize(args, kwds, add_initializers_to=initializers)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 505, in _initialize
    self._stateful_fn._get_concrete_function_internal_garbage_collected(  # pylint: disable=protected-access
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2446, in _get_concrete_function_internal_garbage_collected
    graph_function, _, _ = self._maybe_define_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2777, in _maybe_define_function
    graph_function = self._create_graph_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2657, in _create_graph_function
    func_graph_module.func_graph_from_py_func(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 981, in func_graph_from_py_func
    func_outputs = python_func(*func_args, **func_kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 441, in wrapped_fn
    return weak_wrapped_fn().__wrapped__(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 968, in wrapper
    raise e.ag_error_metadata.to_exception(e)
ValueError: in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:465 train_step  **
        y_pred = self(x, training=True)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py:927 __call__
        outputs = call_fn(cast_inputs, *args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\sequential.py:291 call
        outputs = layer(inputs, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py:885 __call__
        input_spec.assert_input_compatibility(self.input_spec, inputs,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\input_spec.py:176 assert_input_compatibility
        raise ValueError('Input ' + str(input_index) + ' of layer ' +

    ValueError: Input 0 of layer repeat_vector_1 is incompatible with the layer: expected ndim=2, found ndim=3. Full shape received: [None, 28, 96]

metaheuristic tuning hyperparameters and best_results loaded

17.May 2020 17:49:13 correct LSTM model creation and compilation

17.May 2020 17:49:13 correct LSTM model creation and compilation

17.May 2020 17:49:13 correct LSTM model creation and compilation

17.May 2020 17:49:13 model training error
in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:465 train_step  **
        y_pred = self(x, training=True)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py:927 __call__
        outputs = call_fn(cast_inputs, *args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\sequential.py:291 call
        outputs = layer(inputs, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py:885 __call__
        input_spec.assert_input_compatibility(self.input_spec, inputs,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\input_spec.py:176 assert_input_compatibility
        raise ValueError('Input ' + str(input_index) + ' of layer ' +

    ValueError: Input 0 of layer repeat_vector_1 is incompatible with the layer: expected ndim=2, found ndim=3. Full shape received: [None, 28, 96]
Traceback (most recent call last):
  File ".\_2_train.py", line 481, in train
    forecaster.fit(x_train, y_train, batch_size=batch_size, epochs=epochs, workers=workers,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 66, in _method_wrapper
    return method(self, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 785, in fit
    tmp_logs = train_function(iterator)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 580, in __call__
    result = self._call(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 627, in _call
    self._initialize(args, kwds, add_initializers_to=initializers)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 505, in _initialize
    self._stateful_fn._get_concrete_function_internal_garbage_collected(  # pylint: disable=protected-access
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2446, in _get_concrete_function_internal_garbage_collected
    graph_function, _, _ = self._maybe_define_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2777, in _maybe_define_function
    graph_function = self._create_graph_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2657, in _create_graph_function
    func_graph_module.func_graph_from_py_func(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 981, in func_graph_from_py_func
    func_outputs = python_func(*func_args, **func_kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 441, in wrapped_fn
    return weak_wrapped_fn().__wrapped__(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 968, in wrapper
    raise e.ag_error_metadata.to_exception(e)
ValueError: in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:465 train_step  **
        y_pred = self(x, training=True)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py:927 __call__
        outputs = call_fn(cast_inputs, *args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\sequential.py:291 call
        outputs = layer(inputs, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py:885 __call__
        input_spec.assert_input_compatibility(self.input_spec, inputs,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\input_spec.py:176 assert_input_compatibility
        raise ValueError('Input ' + str(input_index) + ' of layer ' +

    ValueError: Input 0 of layer repeat_vector_1 is incompatible with the layer: expected ndim=2, found ndim=3. Full shape received: [None, 28, 96]

error at metaheuristic initialization

17.May 2020 18:24:17 correct LSTM model creation and compilation

17.May 2020 18:24:17 correct LSTM model creation and compilation

17.May 2020 18:24:17 correct LSTM model creation and compilation

17.May 2020 18:24:18 model training error
in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:465 train_step  **
        y_pred = self(x, training=True)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py:927 __call__
        outputs = call_fn(cast_inputs, *args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\sequential.py:291 call
        outputs = layer(inputs, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py:885 __call__
        input_spec.assert_input_compatibility(self.input_spec, inputs,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\input_spec.py:176 assert_input_compatibility
        raise ValueError('Input ' + str(input_index) + ' of layer ' +

    ValueError: Input 0 of layer repeat_vector_1 is incompatible with the layer: expected ndim=2, found ndim=3. Full shape received: [None, 28, 96]
Traceback (most recent call last):
  File ".\_2_train.py", line 481, in train
    forecaster.fit(x_train, y_train, batch_size=batch_size, epochs=epochs, workers=workers,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 66, in _method_wrapper
    return method(self, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 785, in fit
    tmp_logs = train_function(iterator)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 580, in __call__
    result = self._call(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 627, in _call
    self._initialize(args, kwds, add_initializers_to=initializers)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 505, in _initialize
    self._stateful_fn._get_concrete_function_internal_garbage_collected(  # pylint: disable=protected-access
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2446, in _get_concrete_function_internal_garbage_collected
    graph_function, _, _ = self._maybe_define_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2777, in _maybe_define_function
    graph_function = self._create_graph_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2657, in _create_graph_function
    func_graph_module.func_graph_from_py_func(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 981, in func_graph_from_py_func
    func_outputs = python_func(*func_args, **func_kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 441, in wrapped_fn
    return weak_wrapped_fn().__wrapped__(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 968, in wrapper
    raise e.ag_error_metadata.to_exception(e)
ValueError: in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:465 train_step  **
        y_pred = self(x, training=True)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py:927 __call__
        outputs = call_fn(cast_inputs, *args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\sequential.py:291 call
        outputs = layer(inputs, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py:885 __call__
        input_spec.assert_input_compatibility(self.input_spec, inputs,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\input_spec.py:176 assert_input_compatibility
        raise ValueError('Input ' + str(input_index) + ' of layer ' +

    ValueError: Input 0 of layer repeat_vector_1 is incompatible with the layer: expected ndim=2, found ndim=3. Full shape received: [None, 28, 96]

error at metaheuristic initialization

17.May 2020 18:28:01 correct LSTM model creation and compilation

17.May 2020 18:28:01 correct LSTM model creation and compilation

17.May 2020 18:28:01 correct LSTM model creation and compilation

17.May 2020 18:28:02 model training error
in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:465 train_step  **
        y_pred = self(x, training=True)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py:927 __call__
        outputs = call_fn(cast_inputs, *args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\sequential.py:291 call
        outputs = layer(inputs, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py:885 __call__
        input_spec.assert_input_compatibility(self.input_spec, inputs,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\input_spec.py:176 assert_input_compatibility
        raise ValueError('Input ' + str(input_index) + ' of layer ' +

    ValueError: Input 0 of layer repeat_vector_1 is incompatible with the layer: expected ndim=2, found ndim=3. Full shape received: [None, 28, 96]
Traceback (most recent call last):
  File ".\_2_train.py", line 481, in train
    forecaster.fit(x_train, y_train, batch_size=batch_size, epochs=epochs, workers=workers,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 66, in _method_wrapper
    return method(self, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 785, in fit
    tmp_logs = train_function(iterator)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 580, in __call__
    result = self._call(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 627, in _call
    self._initialize(args, kwds, add_initializers_to=initializers)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 505, in _initialize
    self._stateful_fn._get_concrete_function_internal_garbage_collected(  # pylint: disable=protected-access
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2446, in _get_concrete_function_internal_garbage_collected
    graph_function, _, _ = self._maybe_define_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2777, in _maybe_define_function
    graph_function = self._create_graph_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2657, in _create_graph_function
    func_graph_module.func_graph_from_py_func(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 981, in func_graph_from_py_func
    func_outputs = python_func(*func_args, **func_kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 441, in wrapped_fn
    return weak_wrapped_fn().__wrapped__(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 968, in wrapper
    raise e.ag_error_metadata.to_exception(e)
ValueError: in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:465 train_step  **
        y_pred = self(x, training=True)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py:927 __call__
        outputs = call_fn(cast_inputs, *args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\sequential.py:291 call
        outputs = layer(inputs, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py:885 __call__
        input_spec.assert_input_compatibility(self.input_spec, inputs,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\input_spec.py:176 assert_input_compatibility
        raise ValueError('Input ' + str(input_index) + ' of layer ' +

    ValueError: Input 0 of layer repeat_vector_1 is incompatible with the layer: expected ndim=2, found ndim=3. Full shape received: [None, 28, 96]

error at metaheuristic initialization

17.May 2020 18:50:34 correct LSTM model creation and compilation

17.May 2020 18:50:34 correct LSTM model creation and compilation

17.May 2020 18:50:34 correct LSTM model creation and compilation

17.May 2020 18:50:34 model training error
in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:465 train_step  **
        y_pred = self(x, training=True)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py:927 __call__
        outputs = call_fn(cast_inputs, *args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\sequential.py:291 call
        outputs = layer(inputs, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py:885 __call__
        input_spec.assert_input_compatibility(self.input_spec, inputs,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\input_spec.py:176 assert_input_compatibility
        raise ValueError('Input ' + str(input_index) + ' of layer ' +

    ValueError: Input 0 of layer repeat_vector_1 is incompatible with the layer: expected ndim=2, found ndim=3. Full shape received: [None, 28, 96]
Traceback (most recent call last):
  File ".\_2_train.py", line 481, in train
    forecaster.fit(x_train, y_train, batch_size=batch_size, epochs=epochs, workers=workers,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 66, in _method_wrapper
    return method(self, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 785, in fit
    tmp_logs = train_function(iterator)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 580, in __call__
    result = self._call(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 627, in _call
    self._initialize(args, kwds, add_initializers_to=initializers)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 505, in _initialize
    self._stateful_fn._get_concrete_function_internal_garbage_collected(  # pylint: disable=protected-access
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2446, in _get_concrete_function_internal_garbage_collected
    graph_function, _, _ = self._maybe_define_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2777, in _maybe_define_function
    graph_function = self._create_graph_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2657, in _create_graph_function
    func_graph_module.func_graph_from_py_func(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 981, in func_graph_from_py_func
    func_outputs = python_func(*func_args, **func_kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 441, in wrapped_fn
    return weak_wrapped_fn().__wrapped__(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 968, in wrapper
    raise e.ag_error_metadata.to_exception(e)
ValueError: in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:465 train_step  **
        y_pred = self(x, training=True)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py:927 __call__
        outputs = call_fn(cast_inputs, *args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\sequential.py:291 call
        outputs = layer(inputs, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py:885 __call__
        input_spec.assert_input_compatibility(self.input_spec, inputs,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\input_spec.py:176 assert_input_compatibility
        raise ValueError('Input ' + str(input_index) + ' of layer ' +

    ValueError: Input 0 of layer repeat_vector_1 is incompatible with the layer: expected ndim=2, found ndim=3. Full shape received: [None, 28, 96]

error at metaheuristic initialization

17.May 2020 19:03:49 correct LSTM model creation and compilation

17.May 2020 19:03:49 correct LSTM model creation and compilation

17.May 2020 19:03:49 correct LSTM model creation and compilation

17.May 2020 19:04:47 time series number (by group) saved to forecast settings

17.May 2020 19:04:47 correct model training, correct saving of model and weights

17.May 2020 19:04:47 settings modified and saved
error at metaheuristic initialization

17.May 2020 19:10:07 correct LSTM model creation and compilation

17.May 2020 19:10:07 correct LSTM model creation and compilation

17.May 2020 19:10:07 correct LSTM model creation and compilation

17.May 2020 19:11:25 time series number (by group) saved to forecast settings

17.May 2020 19:11:25 correct model training, correct saving of model and weights

17.May 2020 19:11:25 settings modified and saved
error at metaheuristic initialization

17.May 2020 19:39:28 correct LSTM model creation and compilation

17.May 2020 19:39:28 correct LSTM model creation and compilation

17.May 2020 19:39:28 correct LSTM model creation and compilation
error at metaheuristic initialization

17.May 2020 20:40:42 correct LSTM model creation and compilation

17.May 2020 20:40:42 correct LSTM model creation and compilation

17.May 2020 20:40:42 correct LSTM model creation and compilation

17.May 2020 20:41:39 time series number (by group) saved to forecast settings

17.May 2020 20:41:39 correct model training, correct saving of model and weights

17.May 2020 20:41:39 settings modified and saved

17.May 2020 21:22:12 error at loading model (LTSM) hyperparameters
name 'tuning_metaheuristic' is not defined
Traceback (most recent call last):
  File ".\_2_train.py", line 61, in <module>
    metaheuristic_train = tuning_metaheuristic()
NameError: name 'tuning_metaheuristic' is not defined
error at metaheuristic initialization

17.May 2020 21:26:19 correct LSTM model creation and compilation

17.May 2020 21:26:19 correct LSTM model creation and compilation

17.May 2020 21:26:19 correct LSTM model creation and compilation

17.May 2020 21:27:16 time series number (by group) saved to forecast settings

17.May 2020 21:27:16 correct model training, correct saving of model and weights

17.May 2020 21:27:16 settings modified and saved
error at metaheuristic initialization

17.May 2020 22:03:03 correct LSTM model creation and compilation

17.May 2020 22:03:03 correct LSTM model creation and compilation

17.May 2020 22:03:03 correct LSTM model creation and compilation

17.May 2020 22:04:04 time series number (by group) saved to forecast settings

17.May 2020 22:04:04 correct model training, correct saving of model and weights

17.May 2020 22:04:04 settings modified and saved
metaheuristic tuning hyperparameters and best_results loaded

17.May 2020 22:08:00 correct LSTM model creation and compilation

17.May 2020 22:08:00 correct LSTM model creation and compilation

17.May 2020 22:08:00 correct LSTM model creation and compilation

17.May 2020 22:08:57 time series number (by group) saved to forecast settings

17.May 2020 22:08:57 correct model training, correct saving of model and weights

17.May 2020 22:08:57 settings modified and saved
metaheuristic tuning hyperparameters and best_results loaded
metaheuristic tuning hyperparameters and best_results loaded

17.May 2020 22:48:59 correct LSTM model creation and compilation

17.May 2020 22:48:59 correct LSTM model creation and compilation

17.May 2020 22:48:59 correct LSTM model creation and compilation

17.May 2020 22:49:56 time series number (by group) saved to forecast settings

17.May 2020 22:49:56 correct model training, correct saving of model and weights

17.May 2020 22:49:56 settings modified and saved

17.May 2020 22:51:20 correct LSTM model creation and compilation

17.May 2020 22:51:20 correct LSTM model creation and compilation

17.May 2020 22:51:20 correct LSTM model creation and compilation

17.May 2020 22:52:07 time series number (by group) saved to forecast settings

17.May 2020 22:52:07 correct model training, correct saving of model and weights

17.May 2020 22:52:07 settings modified and saved

17.May 2020 22:53:31 correct LSTM model creation and compilation

17.May 2020 22:53:31 correct LSTM model creation and compilation

17.May 2020 22:53:31 correct LSTM model creation and compilation
metaheuristic tuning hyperparameters and best_results loaded

17.May 2020 23:09:25 correct LSTM model creation and compilation

17.May 2020 23:09:25 correct LSTM model creation and compilation

17.May 2020 23:09:25 correct LSTM model creation and compilation

17.May 2020 23:10:11 time series number (by group) saved to forecast settings

17.May 2020 23:10:11 correct model training, correct saving of model and weights

17.May 2020 23:10:11 settings modified and saved
metaheuristic tuning hyperparameters and best_results loaded

17.May 2020 23:11:34 correct LSTM model creation and compilation

17.May 2020 23:11:34 correct LSTM model creation and compilation

17.May 2020 23:11:34 correct LSTM model creation and compilation

17.May 2020 23:12:17 time series number (by group) saved to forecast settings

17.May 2020 23:12:17 correct model training, correct saving of model and weights

17.May 2020 23:12:17 settings modified and saved
metaheuristic tuning hyperparameters and best_results loaded

17.May 2020 23:13:41 correct LSTM model creation and compilation

17.May 2020 23:13:41 correct LSTM model creation and compilation

17.May 2020 23:13:41 correct LSTM model creation and compilation

17.May 2020 23:14:47 time series number (by group) saved to forecast settings

17.May 2020 23:14:47 correct model training, correct saving of model and weights

17.May 2020 23:14:47 settings modified and saved
metaheuristic tuning hyperparameters and best_results loaded

17.May 2020 23:16:11 correct LSTM model creation and compilation

17.May 2020 23:16:11 correct LSTM model creation and compilation

17.May 2020 23:16:11 correct LSTM model creation and compilation

17.May 2020 23:18:20 time series number (by group) saved to forecast settings

17.May 2020 23:18:20 correct model training, correct saving of model and weights

17.May 2020 23:18:20 settings modified and saved
metaheuristic tuning hyperparameters and best_results loaded

17.May 2020 23:19:47 correct LSTM model creation and compilation

17.May 2020 23:19:47 correct LSTM model creation and compilation

17.May 2020 23:19:47 correct LSTM model creation and compilation

17.May 2020 23:22:50 time series number (by group) saved to forecast settings

17.May 2020 23:22:50 correct model training, correct saving of model and weights

17.May 2020 23:22:50 settings modified and saved
metaheuristic tuning hyperparameters and best_results loaded

17.May 2020 23:24:18 correct LSTM model creation and compilation

17.May 2020 23:24:18 correct LSTM model creation and compilation

17.May 2020 23:24:18 correct LSTM model creation and compilation

17.May 2020 23:26:33 time series number (by group) saved to forecast settings

17.May 2020 23:26:33 correct model training, correct saving of model and weights

17.May 2020 23:26:33 settings modified and saved
metaheuristic tuning hyperparameters and best_results loaded

17.May 2020 23:28:00 correct LSTM model creation and compilation

17.May 2020 23:28:00 correct LSTM model creation and compilation

17.May 2020 23:28:00 correct LSTM model creation and compilation

17.May 2020 23:33:09 time series number (by group) saved to forecast settings

17.May 2020 23:33:09 correct model training, correct saving of model and weights

17.May 2020 23:33:09 settings modified and saved
metaheuristic tuning hyperparameters and best_results loaded

17.May 2020 23:34:36 correct LSTM model creation and compilation

17.May 2020 23:34:36 correct LSTM model creation and compilation

17.May 2020 23:34:36 correct LSTM model creation and compilation
metaheuristic tuning hyperparameters and best_results loaded

18.May 2020 18:43:28 correct LSTM model creation and compilation

18.May 2020 18:43:28 correct LSTM model creation and compilation

18.May 2020 18:43:28 correct LSTM model creation and compilation

18.May 2020 19:03:10 time series number (by group) saved to forecast settings

18.May 2020 19:03:10 correct model training, correct saving of model and weights

18.May 2020 19:03:10 settings modified and saved
metaheuristic tuning hyperparameters and best_results loaded

18.May 2020 19:04:40 correct LSTM model creation and compilation

18.May 2020 19:04:40 correct LSTM model creation and compilation

18.May 2020 19:04:40 correct LSTM model creation and compilation

18.May 2020 19:20:19 time series number (by group) saved to forecast settings

18.May 2020 19:20:19 correct model training, correct saving of model and weights

18.May 2020 19:20:19 settings modified and saved
metaheuristic tuning hyperparameters and best_results loaded

18.May 2020 19:21:46 correct LSTM model creation and compilation

18.May 2020 19:21:46 correct LSTM model creation and compilation

18.May 2020 19:21:46 correct LSTM model creation and compilation

18.May 2020 19:40:12 time series number (by group) saved to forecast settings

18.May 2020 19:40:12 correct model training, correct saving of model and weights

18.May 2020 19:40:12 settings modified and saved
metaheuristic tuning hyperparameters and best_results loaded

18.May 2020 19:41:40 correct LSTM model creation and compilation

18.May 2020 19:41:40 correct LSTM model creation and compilation

18.May 2020 19:41:40 correct LSTM model creation and compilation

18.May 2020 20:19:06 time series number (by group) saved to forecast settings

18.May 2020 20:19:06 correct model training, correct saving of model and weights

18.May 2020 20:19:06 settings modified and saved
metaheuristic tuning hyperparameters and best_results loaded

18.May 2020 20:20:33 correct LSTM model creation and compilation

18.May 2020 20:20:33 correct LSTM model creation and compilation

18.May 2020 20:20:33 correct LSTM model creation and compilation

18.May 2020 20:40:27 time series number (by group) saved to forecast settings

18.May 2020 20:40:27 correct model training, correct saving of model and weights

18.May 2020 20:40:27 settings modified and saved
metaheuristic tuning hyperparameters and best_results loaded

18.May 2020 20:41:55 correct LSTM model creation and compilation

18.May 2020 20:41:55 correct LSTM model creation and compilation

18.May 2020 20:41:55 correct LSTM model creation and compilation

18.May 2020 20:59:37 time series number (by group) saved to forecast settings

18.May 2020 20:59:37 correct model training, correct saving of model and weights

18.May 2020 20:59:37 settings modified and saved
metaheuristic tuning hyperparameters and best_results loaded

18.May 2020 21:01:04 correct LSTM model creation and compilation

18.May 2020 21:01:04 correct LSTM model creation and compilation

18.May 2020 21:01:04 correct LSTM model creation and compilation

18.May 2020 21:11:23 time series number (by group) saved to forecast settings

18.May 2020 21:11:23 correct model training, correct saving of model and weights

18.May 2020 21:11:23 settings modified and saved
metaheuristic tuning hyperparameters and best_results loaded

18.May 2020 21:12:54 correct LSTM model creation and compilation

18.May 2020 21:12:54 correct LSTM model creation and compilation

18.May 2020 21:12:54 correct LSTM model creation and compilation

19.May 2020 08:07:49 time series number (by group) saved to forecast settings

19.May 2020 08:07:49 correct model training, correct saving of model and weights

19.May 2020 08:07:49 settings modified and saved
metaheuristic tuning hyperparameters and best_results loaded

19.May 2020 08:09:24 correct LSTM model creation and compilation

19.May 2020 08:09:24 correct LSTM model creation and compilation

19.May 2020 08:09:24 correct LSTM model creation and compilation

19.May 2020 08:18:49 time series number (by group) saved to forecast settings

19.May 2020 08:18:49 correct model training, correct saving of model and weights

19.May 2020 08:18:49 settings modified and saved
metaheuristic tuning hyperparameters and best_results loaded

19.May 2020 08:20:22 correct LSTM model creation and compilation

19.May 2020 08:20:22 correct LSTM model creation and compilation

19.May 2020 08:20:22 correct LSTM model creation and compilation

19.May 2020 08:42:06 time series number (by group) saved to forecast settings

19.May 2020 08:42:06 correct model training, correct saving of model and weights

19.May 2020 08:42:06 settings modified and saved
metaheuristic tuning hyperparameters and best_results loaded

19.May 2020 08:43:38 correct LSTM model creation and compilation

19.May 2020 08:43:38 correct LSTM model creation and compilation

19.May 2020 08:43:38 correct LSTM model creation and compilation

19.May 2020 09:07:36 time series number (by group) saved to forecast settings

19.May 2020 09:07:36 correct model training, correct saving of model and weights

19.May 2020 09:07:36 settings modified and saved
metaheuristic tuning hyperparameters and best_results loaded

19.May 2020 09:09:15 correct LSTM model creation and compilation

19.May 2020 09:09:15 correct LSTM model creation and compilation

19.May 2020 09:09:15 correct LSTM model creation and compilation

19.May 2020 09:30:03 time series number (by group) saved to forecast settings

19.May 2020 09:30:03 correct model training, correct saving of model and weights

19.May 2020 09:30:03 settings modified and saved
metaheuristic tuning hyperparameters and best_results loaded

19.May 2020 09:31:36 correct LSTM model creation and compilation

19.May 2020 09:31:36 correct LSTM model creation and compilation

19.May 2020 09:31:36 correct LSTM model creation and compilation

19.May 2020 09:33:51 time series number (by group) saved to forecast settings

19.May 2020 09:33:51 correct model training, correct saving of model and weights

19.May 2020 09:33:51 settings modified and saved
metaheuristic tuning hyperparameters and best_results loaded

19.May 2020 09:34:33 correct LSTM model creation and compilation

19.May 2020 09:34:33 correct LSTM model creation and compilation

19.May 2020 09:34:33 correct LSTM model creation and compilation

19.May 2020 09:55:19 time series number (by group) saved to forecast settings

19.May 2020 09:55:19 correct model training, correct saving of model and weights

19.May 2020 09:55:19 settings modified and saved
metaheuristic tuning hyperparameters and best_results loaded

19.May 2020 09:56:48 correct LSTM model creation and compilation

19.May 2020 09:56:48 correct LSTM model creation and compilation

19.May 2020 09:56:48 correct LSTM model creation and compilation

19.May 2020 10:16:12 time series number (by group) saved to forecast settings

19.May 2020 10:16:12 correct model training, correct saving of model and weights

19.May 2020 10:16:12 settings modified and saved
metaheuristic tuning hyperparameters and best_results loaded

19.May 2020 10:17:41 correct LSTM model creation and compilation

19.May 2020 10:17:41 correct LSTM model creation and compilation

19.May 2020 10:17:41 correct LSTM model creation and compilation

19.May 2020 10:35:09 time series number (by group) saved to forecast settings

19.May 2020 10:35:09 correct model training, correct saving of model and weights

19.May 2020 10:35:09 settings modified and saved
metaheuristic tuning hyperparameters and best_results loaded

19.May 2020 10:36:40 correct LSTM model creation and compilation

19.May 2020 10:36:40 correct LSTM model creation and compilation

19.May 2020 10:36:40 correct LSTM model creation and compilation

19.May 2020 11:01:53 time series number (by group) saved to forecast settings

19.May 2020 11:01:53 correct model training, correct saving of model and weights

19.May 2020 11:01:53 settings modified and saved
metaheuristic tuning hyperparameters and best_results loaded

19.May 2020 11:03:30 correct LSTM model creation and compilation

19.May 2020 11:03:30 correct LSTM model creation and compilation

19.May 2020 11:03:30 correct LSTM model creation and compilation

19.May 2020 11:21:00 time series number (by group) saved to forecast settings

19.May 2020 11:21:00 correct model training, correct saving of model and weights

19.May 2020 11:21:00 settings modified and saved
metaheuristic tuning hyperparameters and best_results loaded

19.May 2020 11:22:30 correct LSTM model creation and compilation

19.May 2020 11:22:30 correct LSTM model creation and compilation

19.May 2020 11:22:30 correct LSTM model creation and compilation

19.May 2020 11:25:51 time series number (by group) saved to forecast settings

19.May 2020 11:25:51 correct model training, correct saving of model and weights

19.May 2020 11:25:51 settings modified and saved
metaheuristic tuning hyperparameters and best_results loaded

19.May 2020 11:27:21 correct LSTM model creation and compilation

19.May 2020 11:27:21 correct LSTM model creation and compilation

19.May 2020 11:27:21 correct LSTM model creation and compilation

19.May 2020 13:51:52 time series number (by group) saved to forecast settings

19.May 2020 13:51:52 correct model training, correct saving of model and weights

19.May 2020 13:51:52 settings modified and saved
metaheuristic tuning hyperparameters and best_results loaded

19.May 2020 13:53:25 correct LSTM model creation and compilation

19.May 2020 13:53:25 correct LSTM model creation and compilation

19.May 2020 13:53:25 correct LSTM model creation and compilation

19.May 2020 13:59:26 time series number (by group) saved to forecast settings

19.May 2020 13:59:26 correct model training, correct saving of model and weights

19.May 2020 13:59:26 settings modified and saved
metaheuristic tuning hyperparameters and best_results loaded

19.May 2020 14:01:01 correct LSTM model creation and compilation

19.May 2020 14:01:01 correct LSTM model creation and compilation

19.May 2020 14:01:01 correct LSTM model creation and compilation

19.May 2020 15:35:23 correct LSTM model creation and compilation

19.May 2020 15:35:23 correct LSTM model creation and compilation

19.May 2020 15:35:23 correct LSTM model creation and compilation

19.May 2020 15:51:01 time series number (by group) saved to forecast settings

19.May 2020 15:51:01 correct model training, correct saving of model and weights

19.May 2020 15:51:01 settings modified and saved

19.May 2020 16:38:51 correct LSTM model creation and compilation

19.May 2020 16:38:51 correct LSTM model creation and compilation

19.May 2020 16:38:51 correct LSTM model creation and compilation

19.May 2020 16:55:08 time series number (by group) saved to forecast settings

19.May 2020 16:55:08 correct model training, correct saving of model and weights

19.May 2020 16:55:08 settings modified and saved

19.May 2020 16:59:27 correct LSTM model creation and compilation

19.May 2020 16:59:27 correct LSTM model creation and compilation

19.May 2020 16:59:27 correct LSTM model creation and compilation

19.May 2020 17:07:39 time series number (by group) saved to forecast settings

19.May 2020 17:07:39 correct model training, correct saving of model and weights

19.May 2020 17:07:39 settings modified and saved

19.May 2020 17:13:18 correct LSTM model creation and compilation

19.May 2020 17:13:18 correct LSTM model creation and compilation

19.May 2020 17:13:18 correct LSTM model creation and compilation

19.May 2020 17:27:43 time series number (by group) saved to forecast settings

19.May 2020 17:27:43 correct model training, correct saving of model and weights

19.May 2020 17:27:43 settings modified and saved

19.May 2020 17:45:33 correct LSTM model creation and compilation

19.May 2020 17:45:33 correct LSTM model creation and compilation

19.May 2020 17:45:33 correct LSTM model creation and compilation

19.May 2020 18:01:06 time series number (by group) saved to forecast settings

19.May 2020 18:01:06 correct model training, correct saving of model and weights

19.May 2020 18:01:06 settings modified and saved

19.May 2020 18:03:31 correct LSTM model creation and compilation

19.May 2020 18:03:31 correct LSTM model creation and compilation

19.May 2020 18:03:31 correct LSTM model creation and compilation

19.May 2020 22:16:32 time series number (by group) saved to forecast settings

19.May 2020 22:16:32 correct model training, correct saving of model and weights

19.May 2020 22:16:32 settings modified and saved

19.May 2020 22:21:17 correct LSTM model creation and compilation

19.May 2020 22:21:17 correct LSTM model creation and compilation

19.May 2020 22:21:17 correct LSTM model creation and compilation

19.May 2020 22:27:56 time series number (by group) saved to forecast settings

19.May 2020 22:27:56 correct model training, correct saving of model and weights

19.May 2020 22:27:56 settings modified and saved

19.May 2020 22:31:02 correct LSTM model creation and compilation

19.May 2020 22:31:02 correct LSTM model creation and compilation

19.May 2020 22:31:02 correct LSTM model creation and compilation

19.May 2020 22:38:04 time series number (by group) saved to forecast settings

19.May 2020 22:38:04 correct model training, correct saving of model and weights

19.May 2020 22:38:04 settings modified and saved

19.May 2020 23:17:31 correct LSTM model creation and compilation

19.May 2020 23:17:31 correct LSTM model creation and compilation

19.May 2020 23:17:31 correct LSTM model creation and compilation

19.May 2020 23:17:31 model training error
too many indices for array
Traceback (most recent call last):
  File ".\_2_train.py", line 471, in train
    x_train[:, time_serie_iterator, :][x_train < 0] = 0.
IndexError: too many indices for array

19.May 2020 23:18:44 correct LSTM model creation and compilation

19.May 2020 23:18:44 correct LSTM model creation and compilation

19.May 2020 23:18:44 correct LSTM model creation and compilation

19.May 2020 23:38:21 time series number (by group) saved to forecast settings

19.May 2020 23:38:21 correct model training, correct saving of model and weights

19.May 2020 23:38:21 settings modified and saved

19.May 2020 23:44:47 correct LSTM model creation and compilation

19.May 2020 23:44:47 correct LSTM model creation and compilation

19.May 2020 23:44:47 correct LSTM model creation and compilation

20.May 2020 00:01:47 time series number (by group) saved to forecast settings

20.May 2020 00:01:47 correct model training, correct saving of model and weights

20.May 2020 00:01:47 settings modified and saved

20.May 2020 00:18:23 correct LSTM model creation and compilation

20.May 2020 00:18:23 correct LSTM model creation and compilation

20.May 2020 00:18:23 correct LSTM model creation and compilation

20.May 2020 00:26:47 time series number (by group) saved to forecast settings

20.May 2020 00:26:47 correct model training, correct saving of model and weights

20.May 2020 00:26:47 settings modified and saved

20.May 2020 00:32:34 correct LSTM model creation and compilation

20.May 2020 00:32:34 correct LSTM model creation and compilation

20.May 2020 00:32:34 correct LSTM model creation and compilation

20.May 2020 00:54:36 time series number (by group) saved to forecast settings

20.May 2020 00:54:36 correct model training, correct saving of model and weights

20.May 2020 00:54:36 settings modified and saved

20.May 2020 01:01:26 correct LSTM model creation and compilation

20.May 2020 01:01:26 correct LSTM model creation and compilation

20.May 2020 01:01:26 correct LSTM model creation and compilation

20.May 2020 01:01:26 model training error
could not broadcast input array from shape (1193,28) into shape (1193)
Traceback (most recent call last):
  File ".\_2_train.py", line 448, in train
    x_train = np.array(x_train)
ValueError: could not broadcast input array from shape (1193,28) into shape (1193)

20.May 2020 01:02:54 correct LSTM model creation and compilation

20.May 2020 01:02:54 correct LSTM model creation and compilation

20.May 2020 01:02:54 correct LSTM model creation and compilation

20.May 2020 01:02:54 model training error
could not broadcast input array from shape (1193,28) into shape (1193)
Traceback (most recent call last):
  File ".\_2_train.py", line 448, in train
    x_train = np.array(x_train)
ValueError: could not broadcast input array from shape (1193,28) into shape (1193)

20.May 2020 01:06:24 correct LSTM model creation and compilation

20.May 2020 01:06:24 correct LSTM model creation and compilation

20.May 2020 01:06:24 correct LSTM model creation and compilation

20.May 2020 01:07:15 correct LSTM model creation and compilation

20.May 2020 01:07:15 correct LSTM model creation and compilation

20.May 2020 01:07:15 correct LSTM model creation and compilation

20.May 2020 01:22:55 time series number (by group) saved to forecast settings

20.May 2020 01:22:55 correct model training, correct saving of model and weights

20.May 2020 01:22:55 settings modified and saved

20.May 2020 01:51:23 correct LSTM model creation and compilation

20.May 2020 01:51:23 correct LSTM model creation and compilation

20.May 2020 01:51:23 correct LSTM model creation and compilation

20.May 2020 02:37:08 time series number (by group) saved to forecast settings

20.May 2020 02:37:08 correct model training, correct saving of model and weights

20.May 2020 02:37:08 settings modified and saved

20.May 2020 07:20:15 correct LSTM model creation and compilation

20.May 2020 07:20:15 correct LSTM model creation and compilation

20.May 2020 07:20:15 correct LSTM model creation and compilation

20.May 2020 07:20:15 model training error
tuple index out of range
Traceback (most recent call last):
  File ".\_2_train.py", line 470, in train
    for time_serie_iterator in range(np.shape(x_train)[1]):
IndexError: tuple index out of range

20.May 2020 07:20:36 correct LSTM model creation and compilation

20.May 2020 07:20:36 correct LSTM model creation and compilation

20.May 2020 07:20:36 correct LSTM model creation and compilation

20.May 2020 07:20:36 model training error
tuple index out of range
Traceback (most recent call last):
  File ".\_2_train.py", line 470, in train
    for time_serie_iterator in range(np.shape(x_train)[1]):
IndexError: tuple index out of range

20.May 2020 07:20:53 correct LSTM model creation and compilation

20.May 2020 07:20:53 correct LSTM model creation and compilation

20.May 2020 07:20:53 correct LSTM model creation and compilation

20.May 2020 07:20:53 model training error
tuple index out of range
Traceback (most recent call last):
  File ".\_2_train.py", line 470, in train
    for time_serie_iterator in range(np.shape(x_train)[1]):
IndexError: tuple index out of range

20.May 2020 07:21:14 correct LSTM model creation and compilation

20.May 2020 07:21:15 correct LSTM model creation and compilation

20.May 2020 07:21:15 correct LSTM model creation and compilation

20.May 2020 07:21:15 model training error
tuple index out of range
Traceback (most recent call last):
  File ".\_2_train.py", line 470, in train
    for time_serie_iterator in range(np.shape(x_train)[1]):
IndexError: tuple index out of range

20.May 2020 07:21:27 correct LSTM model creation and compilation

20.May 2020 07:21:27 correct LSTM model creation and compilation

20.May 2020 07:21:27 correct LSTM model creation and compilation

20.May 2020 07:21:27 model training error
tuple index out of range
Traceback (most recent call last):
  File ".\_2_train.py", line 470, in train
    for time_serie_iterator in range(np.shape(x_train)[1]):
IndexError: tuple index out of range

20.May 2020 07:21:42 correct LSTM model creation and compilation

20.May 2020 07:21:42 correct LSTM model creation and compilation

20.May 2020 07:21:42 correct LSTM model creation and compilation

20.May 2020 07:22:17 correct LSTM model creation and compilation

20.May 2020 07:22:17 correct LSTM model creation and compilation

20.May 2020 07:22:17 correct LSTM model creation and compilation

20.May 2020 07:22:40 correct LSTM model creation and compilation

20.May 2020 07:22:40 correct LSTM model creation and compilation

20.May 2020 07:22:40 correct LSTM model creation and compilation

20.May 2020 07:23:18 correct LSTM model creation and compilation

20.May 2020 07:23:18 correct LSTM model creation and compilation

20.May 2020 07:23:18 correct LSTM model creation and compilation

20.May 2020 07:40:37 time series number (by group) saved to forecast settings

20.May 2020 07:40:37 correct model training, correct saving of model and weights

20.May 2020 07:40:37 settings modified and saved

20.May 2020 07:43:09 correct LSTM model creation and compilation

20.May 2020 07:43:09 correct LSTM model creation and compilation

20.May 2020 07:43:09 correct LSTM model creation and compilation

20.May 2020 07:43:09 model training error
could not broadcast input array from shape (1193,28) into shape (1193)
Traceback (most recent call last):
  File ".\_2_train.py", line 448, in train
    x_train = np.array(x_train)
ValueError: could not broadcast input array from shape (1193,28) into shape (1193)

20.May 2020 07:45:00 correct LSTM model creation and compilation

20.May 2020 07:45:00 correct LSTM model creation and compilation

20.May 2020 07:45:00 correct LSTM model creation and compilation

20.May 2020 08:30:45 time series number (by group) saved to forecast settings

20.May 2020 08:30:45 correct model training, correct saving of model and weights

20.May 2020 08:30:45 settings modified and saved

20.May 2020 08:32:52 correct LSTM model creation and compilation

20.May 2020 08:32:52 correct LSTM model creation and compilation

20.May 2020 08:32:52 correct LSTM model creation and compilation

20.May 2020 08:55:36 time series number (by group) saved to forecast settings

20.May 2020 08:55:36 correct model training, correct saving of model and weights

20.May 2020 08:55:36 settings modified and saved

20.May 2020 09:04:41 correct LSTM model creation and compilation

20.May 2020 09:04:41 correct LSTM model creation and compilation

20.May 2020 09:04:41 correct LSTM model creation and compilation

20.May 2020 09:49:25 time series number (by group) saved to forecast settings

20.May 2020 09:49:25 correct model training, correct saving of model and weights

20.May 2020 09:49:25 settings modified and saved

20.May 2020 09:52:48 correct LSTM model creation and compilation

20.May 2020 09:52:48 correct LSTM model creation and compilation

20.May 2020 09:52:48 correct LSTM model creation and compilation

20.May 2020 10:09:29 time series number (by group) saved to forecast settings

20.May 2020 10:09:29 correct model training, correct saving of model and weights

20.May 2020 10:09:29 settings modified and saved

20.May 2020 12:29:34 correct LSTM model creation and compilation

20.May 2020 12:29:35 correct LSTM model creation and compilation

20.May 2020 12:29:36 correct LSTM model creation and compilation

20.May 2020 12:30:54 correct LSTM model creation and compilation

20.May 2020 12:30:55 correct LSTM model creation and compilation

20.May 2020 12:30:56 correct LSTM model creation and compilation

20.May 2020 12:48:51 time series number (by group) saved to forecast settings

20.May 2020 12:48:51 correct model training, correct saving of model and weights

20.May 2020 12:48:51 settings modified and saved

20.May 2020 13:32:17 correct LSTM model creation and compilation

20.May 2020 13:32:18 correct LSTM model creation and compilation

20.May 2020 13:32:19 correct LSTM model creation and compilation

20.May 2020 13:49:56 time series number (by group) saved to forecast settings

20.May 2020 13:49:56 correct model training, correct saving of model and weights

20.May 2020 13:49:56 settings modified and saved
model unknown

23.May 2020 08:19:26 correct LSTM model creation and compilation

23.May 2020 08:19:27 correct LSTM model creation and compilation

23.May 2020 08:19:28 correct LSTM model creation and compilation

23.May 2020 09:24:03 correct LSTM model creation and compilation

23.May 2020 09:24:04 correct LSTM model creation and compilation

23.May 2020 09:24:05 correct LSTM model creation and compilation

23.May 2020 09:37:38 correct LSTM model creation and compilation

23.May 2020 09:37:39 correct LSTM model creation and compilation

23.May 2020 09:37:40 correct LSTM model creation and compilation

23.May 2020 09:45:34 time series number (by group) saved to forecast settings

23.May 2020 09:45:34 correct model training, correct saving of model and weights

23.May 2020 09:45:34 settings modified and saved

23.May 2020 09:58:57 correct LSTM model creation and compilation

23.May 2020 09:58:58 correct LSTM model creation and compilation

23.May 2020 09:58:59 correct LSTM model creation and compilation

23.May 2020 10:00:55 correct LSTM model creation and compilation

23.May 2020 10:02:06 time series number (by group) saved to forecast settings

23.May 2020 10:02:06 correct model training, correct saving of model and weights

23.May 2020 10:02:06 settings modified and saved

23.May 2020 10:14:27 correct LSTM model creation and compilation

23.May 2020 10:15:38 time series number (by group) saved to forecast settings

23.May 2020 10:15:38 correct model training, correct saving of model and weights

23.May 2020 10:15:38 settings modified and saved

23.May 2020 10:28:02 correct LSTM model creation and compilation

23.May 2020 10:29:12 time series number (by group) saved to forecast settings

23.May 2020 10:29:12 correct model training, correct saving of model and weights

23.May 2020 10:29:12 settings modified and saved

23.May 2020 11:18:38 correct LSTM model creation and compilation

23.May 2020 11:18:40 correct LSTM model creation and compilation

23.May 2020 11:18:41 correct LSTM model creation and compilation

23.May 2020 11:26:31 time series number (by group) saved to forecast settings

23.May 2020 11:26:31 correct model training, correct saving of model and weights

23.May 2020 11:26:31 settings modified and saved

23.May 2020 11:32:13 correct LSTM model creation and compilation

23.May 2020 11:32:14 correct LSTM model creation and compilation

23.May 2020 11:32:15 correct LSTM model creation and compilation

23.May 2020 11:39:45 time series number (by group) saved to forecast settings

23.May 2020 11:39:45 correct model training, correct saving of model and weights

23.May 2020 11:39:45 settings modified and saved

23.May 2020 11:42:04 correct LSTM model creation and compilation

23.May 2020 11:42:06 correct LSTM model creation and compilation

23.May 2020 11:42:07 correct LSTM model creation and compilation

23.May 2020 11:58:05 time series number (by group) saved to forecast settings

23.May 2020 11:58:05 correct model training, correct saving of model and weights

23.May 2020 11:58:05 settings modified and saved

23.May 2020 12:15:24 correct LSTM model creation and compilation

23.May 2020 12:20:40 time series number (by group) saved to forecast settings

23.May 2020 12:20:40 correct model training, correct saving of model and weights

23.May 2020 12:20:40 settings modified and saved

23.May 2020 13:27:48 correct LSTM model creation and compilation

23.May 2020 13:27:49 correct LSTM model creation and compilation

23.May 2020 13:27:50 correct LSTM model creation and compilation

23.May 2020 13:44:33 time series number (by group) saved to forecast settings

23.May 2020 13:44:33 correct model training, correct saving of model and weights

23.May 2020 13:44:33 settings modified and saved

23.May 2020 23:11:44 correct LSTM model creation and compilation

23.May 2020 23:11:45 correct LSTM model creation and compilation

23.May 2020 23:11:46 correct LSTM model creation and compilation

23.May 2020 23:29:43 time series number (by group) saved to forecast settings

23.May 2020 23:29:43 correct model training, correct saving of model and weights

23.May 2020 23:29:43 settings modified and saved

24.May 2020 09:09:21 correct LSTM model creation and compilation

24.May 2020 09:09:44 correct LSTM model creation and compilation

24.May 2020 09:10:08 correct LSTM model creation and compilation

24.May 2020 09:27:19 time series number (by group) saved to forecast settings

24.May 2020 09:27:19 correct model training, correct saving of model and weights

24.May 2020 09:27:19 settings modified and saved

24.May 2020 09:37:14 LSTM model creation or compile error
Model <tensorflow.python.keras.engine.sequential.Sequential object at 0x000001FE737EA130> cannot be saved because the input shapes have not been set. Usually, input shapes are automatically determined from calling .fit() or .predict(). To manually set the shapes, call model._set_inputs(inputs).
Traceback (most recent call last):
  File ".\_2_train.py", line 412, in train
    forecaster.save(''.join([local_script_settings['models_path'], 'model_group_UNTRAINED_forecast_']))
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\network.py", line 1046, in save
    save.save_model(self, filepath, overwrite, include_optimizer, save_format,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\saving\save.py", line 137, in save_model
    saved_model_save.save(model, filepath, overwrite, include_optimizer,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\saving\saved_model\save.py", line 65, in save
    saving_utils.raise_model_input_error(model)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\saving\saving_utils.py", line 91, in raise_model_input_error
    raise ValueError(
ValueError: Model <tensorflow.python.keras.engine.sequential.Sequential object at 0x000001FE737EA130> cannot be saved because the input shapes have not been set. Usually, input shapes are automatically determined from calling .fit() or .predict(). To manually set the shapes, call model._set_inputs(inputs).

24.May 2020 09:46:33 correct LSTM model creation and compilation

24.May 2020 09:46:33 correct LSTM model creation and compilation

24.May 2020 09:46:33 correct LSTM model creation and compilation

24.May 2020 10:02:08 time series number (by group) saved to forecast settings

24.May 2020 10:02:08 correct model training, correct saving of model and weights

24.May 2020 10:02:08 settings modified and saved

24.May 2020 10:06:21 correct LSTM model creation and compilation

24.May 2020 10:06:22 correct LSTM model creation and compilation

24.May 2020 10:06:23 correct LSTM model creation and compilation

24.May 2020 10:23:31 time series number (by group) saved to forecast settings

24.May 2020 10:23:31 correct model training, correct saving of model and weights

24.May 2020 10:23:31 settings modified and saved

24.May 2020 10:33:30 correct LSTM model creation and compilation

24.May 2020 10:33:32 correct LSTM model creation and compilation

24.May 2020 10:33:33 correct LSTM model creation and compilation

24.May 2020 10:50:26 time series number (by group) saved to forecast settings

24.May 2020 10:50:26 correct model training, correct saving of model and weights

24.May 2020 10:50:26 settings modified and saved

24.May 2020 17:47:09 correct LSTM model creation and compilation

24.May 2020 17:47:09 correct LSTM model creation and compilation

24.May 2020 17:47:09 correct LSTM model creation and compilation

24.May 2020 18:38:10 time series number (by group) saved to forecast settings

24.May 2020 18:38:10 correct model training, correct saving of model and weights

24.May 2020 18:38:10 settings modified and saved

24.May 2020 22:26:52 LSTM model creation or compile error
Input 0 of layer repeat_vector is incompatible with the layer: expected ndim=2, found ndim=3. Full shape received: [None, 56, 1]
Traceback (most recent call last):
  File ".\_2_train.py", line 373, in train
    forecaster.add(RepeatVector(model_hyperparameters['repeat_vector']))
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\training\tracking\base.py", line 456, in _method_wrapper
    result = method(self, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\sequential.py", line 213, in add
    output_tensor = layer(self.outputs[0])
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py", line 885, in __call__
    input_spec.assert_input_compatibility(self.input_spec, inputs,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\input_spec.py", line 176, in assert_input_compatibility
    raise ValueError('Input ' + str(input_index) + ' of layer ' +
ValueError: Input 0 of layer repeat_vector is incompatible with the layer: expected ndim=2, found ndim=3. Full shape received: [None, 56, 1]

24.May 2020 22:26:52 model training error
list index out of range
Traceback (most recent call last):
  File ".\_2_train.py", line 510, in train
    forecaster = forecaster_models_list[group_iterator]
IndexError: list index out of range

24.May 2020 22:39:02 LSTM model creation or compile error
Input 0 of layer repeat_vector is incompatible with the layer: expected ndim=2, found ndim=3. Full shape received: [None, 56, 1]
Traceback (most recent call last):
  File ".\_2_train.py", line 373, in train
    forecaster.add(RepeatVector(model_hyperparameters['repeat_vector']))
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\training\tracking\base.py", line 456, in _method_wrapper
    result = method(self, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\sequential.py", line 213, in add
    output_tensor = layer(self.outputs[0])
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py", line 885, in __call__
    input_spec.assert_input_compatibility(self.input_spec, inputs,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\input_spec.py", line 176, in assert_input_compatibility
    raise ValueError('Input ' + str(input_index) + ' of layer ' +
ValueError: Input 0 of layer repeat_vector is incompatible with the layer: expected ndim=2, found ndim=3. Full shape received: [None, 56, 1]

24.May 2020 22:39:02 model training error
list index out of range
Traceback (most recent call last):
  File ".\_2_train.py", line 510, in train
    forecaster = forecaster_models_list[group_iterator]
IndexError: list index out of range

24.May 2020 22:45:53 correct LSTM model creation and compilation

24.May 2020 22:45:54 correct LSTM model creation and compilation

24.May 2020 22:45:55 correct LSTM model creation and compilation

24.May 2020 22:46:27 time series number (by group) saved to forecast settings

24.May 2020 22:46:27 correct model training, correct saving of model and weights

24.May 2020 22:46:27 settings modified and saved

24.May 2020 22:55:46 correct LSTM model creation and compilation

24.May 2020 22:55:47 correct LSTM model creation and compilation

24.May 2020 22:55:48 correct LSTM model creation and compilation

24.May 2020 23:11:47 time series number (by group) saved to forecast settings

24.May 2020 23:11:47 correct model training, correct saving of model and weights

24.May 2020 23:11:47 settings modified and saved

24.May 2020 23:25:02 correct LSTM model creation and compilation

24.May 2020 23:25:02 correct LSTM model creation and compilation

24.May 2020 23:25:02 correct LSTM model creation and compilation

24.May 2020 23:26:32 correct LSTM model creation and compilation

24.May 2020 23:26:32 correct LSTM model creation and compilation

24.May 2020 23:26:32 correct LSTM model creation and compilation

24.May 2020 23:27:32 correct LSTM model creation and compilation

24.May 2020 23:27:32 correct LSTM model creation and compilation

24.May 2020 23:27:32 correct LSTM model creation and compilation

24.May 2020 23:28:03 time series number (by group) saved to forecast settings

24.May 2020 23:28:03 correct model training, correct saving of model and weights

24.May 2020 23:28:03 settings modified and saved

24.May 2020 23:34:24 correct LSTM model creation and compilation

24.May 2020 23:34:24 correct LSTM model creation and compilation

24.May 2020 23:34:24 correct LSTM model creation and compilation

25.May 2020 00:24:14 time series number (by group) saved to forecast settings

25.May 2020 00:24:14 correct model training, correct saving of model and weights

25.May 2020 00:24:14 settings modified and saved

25.May 2020 15:58:38 correct LSTM model creation and compilation

25.May 2020 15:58:38 correct LSTM model creation and compilation

25.May 2020 15:58:38 correct LSTM model creation and compilation

25.May 2020 16:49:27 time series number (by group) saved to forecast settings

25.May 2020 16:49:27 correct model training, correct saving of model and weights

25.May 2020 16:49:27 settings modified and saved

25.May 2020 17:01:06 correct LSTM model creation and compilation

25.May 2020 17:01:07 correct LSTM model creation and compilation

25.May 2020 17:01:08 correct LSTM model creation and compilation

25.May 2020 17:03:45 LSTM model creation or compile error
'forecast_horizon_days'
Traceback (most recent call last):
  File ".\_2_train.py", line 370, in train
    input_shape=(model_hyperparameters['forecast_horizon_days'],
KeyError: 'forecast_horizon_days'

25.May 2020 17:03:45 model training error
list index out of range
Traceback (most recent call last):
  File ".\_2_train.py", line 511, in train
    forecaster = forecaster_models_list[group_iterator]
IndexError: list index out of range

25.May 2020 17:04:10 LSTM model creation or compile error
'forecast_horizon_days'
Traceback (most recent call last):
  File ".\_2_train.py", line 370, in train
    input_shape=(model_hyperparameters['forecast_horizon_days'],
KeyError: 'forecast_horizon_days'

25.May 2020 17:04:10 model training error
list index out of range
Traceback (most recent call last):
  File ".\_2_train.py", line 511, in train
    forecaster = forecaster_models_list[group_iterator]
IndexError: list index out of range

25.May 2020 17:05:40 correct LSTM model creation and compilation

25.May 2020 17:05:41 correct LSTM model creation and compilation

25.May 2020 17:05:42 correct LSTM model creation and compilation

25.May 2020 17:22:54 time series number (by group) saved to forecast settings

25.May 2020 17:22:54 correct model training, correct saving of model and weights

25.May 2020 17:22:54 settings modified and saved

25.May 2020 23:22:15 correct LSTM model creation and compilation

25.May 2020 23:22:16 correct LSTM model creation and compilation

25.May 2020 23:22:17 correct LSTM model creation and compilation

25.May 2020 23:30:27 model training error
[Errno 22] Invalid argument: './5.0_MODELS_DIR/trained_forecaster_group[[ 0.28190179 -0.52766232  0.68668385 ...  1.34445469 -0.6794556\n  -0.6794556 ]\n [-0.24038032 -0.24038032 -0.24038032 ...  2.53067059 -0.83465389\n   0.28712094]\n [-0.27571769 -0.27571769 -0.27571769 ...  0.89078022  0.09897558\n   0.09897558]\n ...\n [-0.15871868  0.54298494 -0.08075161 ... -0.15036506  0.9411739\n   0.55133856]\n [ 0.          0.          0.         ...  1.49751189  0.77009595\n  -0.37298623]\n [ 0.54814735  0.54814735  0.06851842 ...  1.10057711 -0.09849523\n  -0.33830969]]_.json'
Traceback (most recent call last):
  File ".\_2_train.py", line 526, in train
    with open(''.join([local_settings['models_path'], 'trained_forecaster_group', str(group),
OSError: [Errno 22] Invalid argument: './5.0_MODELS_DIR/trained_forecaster_group[[ 0.28190179 -0.52766232  0.68668385 ...  1.34445469 -0.6794556\n  -0.6794556 ]\n [-0.24038032 -0.24038032 -0.24038032 ...  2.53067059 -0.83465389\n   0.28712094]\n [-0.27571769 -0.27571769 -0.27571769 ...  0.89078022  0.09897558\n   0.09897558]\n ...\n [-0.15871868  0.54298494 -0.08075161 ... -0.15036506  0.9411739\n   0.55133856]\n [ 0.          0.          0.         ...  1.49751189  0.77009595\n  -0.37298623]\n [ 0.54814735  0.54814735  0.06851842 ...  1.10057711 -0.09849523\n  -0.33830969]]_.json'

26.May 2020 00:02:39 correct LSTM model creation and compilation

26.May 2020 00:02:40 correct LSTM model creation and compilation

26.May 2020 00:02:41 correct LSTM model creation and compilation

26.May 2020 01:50:14 correct LSTM model creation and compilation

26.May 2020 01:50:15 correct LSTM model creation and compilation

26.May 2020 01:50:17 correct LSTM model creation and compilation

26.May 2020 02:07:30 time series number (by group) saved to forecast settings

26.May 2020 02:07:30 correct model training, correct saving of model and weights

26.May 2020 02:07:30 settings modified and saved

26.May 2020 17:55:47 correct LSTM model creation and compilation

26.May 2020 17:55:48 correct LSTM model creation and compilation

26.May 2020 17:55:49 correct LSTM model creation and compilation

26.May 2020 17:56:20 time series number (by group) saved to forecast settings

26.May 2020 17:56:20 correct model training, correct saving of model and weights

26.May 2020 17:56:20 settings modified and saved

26.May 2020 21:37:14 correct LSTM model creation and compilation

26.May 2020 21:37:15 correct LSTM model creation and compilation

26.May 2020 21:37:16 correct LSTM model creation and compilation

26.May 2020 21:37:47 time series number (by group) saved to forecast settings

26.May 2020 21:37:47 correct model training, correct saving of model and weights

26.May 2020 21:37:47 settings modified and saved

26.May 2020 22:33:28 correct LSTM model creation and compilation

26.May 2020 22:33:29 correct LSTM model creation and compilation

26.May 2020 22:33:30 correct LSTM model creation and compilation

26.May 2020 22:50:26 time series number (by group) saved to forecast settings

26.May 2020 22:50:26 correct model training, correct saving of model and weights

26.May 2020 22:50:26 settings modified and saved

27.May 2020 08:01:47 correct LSTM model creation and compilation

27.May 2020 08:01:49 correct LSTM model creation and compilation

27.May 2020 08:01:51 correct LSTM model creation and compilation

27.May 2020 08:07:15 correct LSTM model creation and compilation

27.May 2020 08:07:17 correct LSTM model creation and compilation

27.May 2020 08:07:20 correct LSTM model creation and compilation

27.May 2020 08:34:56 time series number (by group) saved to forecast settings

27.May 2020 08:34:56 correct model training, correct saving of model and weights

27.May 2020 08:34:56 settings modified and saved

27.May 2020 09:51:42 correct LSTM model creation and compilation

27.May 2020 09:51:45 correct LSTM model creation and compilation

27.May 2020 09:51:47 correct LSTM model creation and compilation

27.May 2020 10:10:55 time series number (by group) saved to forecast settings

27.May 2020 10:10:55 correct model training, correct saving of model and weights

27.May 2020 10:10:55 settings modified and saved

27.May 2020 11:52:00 correct LSTM model creation and compilation

27.May 2020 11:52:02 correct LSTM model creation and compilation

27.May 2020 11:52:04 correct LSTM model creation and compilation

27.May 2020 11:56:40 correct LSTM model creation and compilation

27.May 2020 11:56:42 correct LSTM model creation and compilation

27.May 2020 11:56:44 correct LSTM model creation and compilation

27.May 2020 11:58:54 correct LSTM model creation and compilation

27.May 2020 11:58:56 correct LSTM model creation and compilation

27.May 2020 11:58:58 correct LSTM model creation and compilation

27.May 2020 12:00:45 correct LSTM model creation and compilation

27.May 2020 12:00:47 correct LSTM model creation and compilation

27.May 2020 12:00:49 correct LSTM model creation and compilation

27.May 2020 12:01:34 correct LSTM model creation and compilation

27.May 2020 12:01:36 correct LSTM model creation and compilation

27.May 2020 12:01:39 correct LSTM model creation and compilation

27.May 2020 12:02:31 correct LSTM model creation and compilation

27.May 2020 12:02:32 correct LSTM model creation and compilation

27.May 2020 12:02:33 correct LSTM model creation and compilation

27.May 2020 12:03:09 correct LSTM model creation and compilation

27.May 2020 12:03:11 correct LSTM model creation and compilation

27.May 2020 12:03:12 correct LSTM model creation and compilation

27.May 2020 12:19:26 time series number (by group) saved to forecast settings

27.May 2020 12:19:26 correct model training, correct saving of model and weights

27.May 2020 12:19:26 settings modified and saved

27.May 2020 13:02:10 correct LSTM model creation and compilation

27.May 2020 13:02:11 correct LSTM model creation and compilation

27.May 2020 13:02:12 correct LSTM model creation and compilation

27.May 2020 13:07:42 correct LSTM model creation and compilation

27.May 2020 13:07:43 correct LSTM model creation and compilation

27.May 2020 13:07:44 correct LSTM model creation and compilation

27.May 2020 13:08:38 correct LSTM model creation and compilation

27.May 2020 13:08:40 correct LSTM model creation and compilation

27.May 2020 13:08:42 correct LSTM model creation and compilation

27.May 2020 13:54:25 time series number (by group) saved to forecast settings

27.May 2020 13:54:25 correct model training, correct saving of model and weights

27.May 2020 13:54:25 settings modified and saved

27.May 2020 13:56:30 correct LSTM model creation and compilation

27.May 2020 13:56:32 correct LSTM model creation and compilation

27.May 2020 13:56:34 correct LSTM model creation and compilation

27.May 2020 14:11:28 time series number (by group) saved to forecast settings

27.May 2020 14:11:28 correct model training, correct saving of model and weights

27.May 2020 14:11:28 settings modified and saved

27.May 2020 15:02:21 correct LSTM model creation and compilation

27.May 2020 15:02:22 correct LSTM model creation and compilation

27.May 2020 15:02:23 correct LSTM model creation and compilation

27.May 2020 15:20:01 time series number (by group) saved to forecast settings

27.May 2020 15:20:01 correct model training, correct saving of model and weights

27.May 2020 15:20:01 settings modified and saved

27.May 2020 15:40:55 correct LSTM model creation and compilation

27.May 2020 15:40:56 correct LSTM model creation and compilation

27.May 2020 15:40:57 correct LSTM model creation and compilation

27.May 2020 15:57:20 time series number (by group) saved to forecast settings

27.May 2020 15:57:20 correct model training, correct saving of model and weights

27.May 2020 15:57:20 settings modified and saved

27.May 2020 16:04:26 correct LSTM model creation and compilation

27.May 2020 16:04:26 correct LSTM model creation and compilation

27.May 2020 16:04:27 correct LSTM model creation and compilation

27.May 2020 16:15:57 time series number (by group) saved to forecast settings

27.May 2020 16:15:57 correct model training, correct saving of model and weights

27.May 2020 16:15:57 settings modified and saved

27.May 2020 16:19:10 correct LSTM model creation and compilation

27.May 2020 16:19:11 correct LSTM model creation and compilation

27.May 2020 16:19:12 correct LSTM model creation and compilation

27.May 2020 16:39:39 time series number (by group) saved to forecast settings

27.May 2020 16:39:39 correct model training, correct saving of model and weights

27.May 2020 16:39:39 settings modified and saved

27.May 2020 16:43:29 correct LSTM model creation and compilation

27.May 2020 16:43:30 correct LSTM model creation and compilation

27.May 2020 16:43:32 correct LSTM model creation and compilation

27.May 2020 16:57:13 time series number (by group) saved to forecast settings

27.May 2020 16:57:13 correct model training, correct saving of model and weights

27.May 2020 16:57:13 settings modified and saved

27.May 2020 17:32:10 correct LSTM model creation and compilation

27.May 2020 17:32:11 correct LSTM model creation and compilation

27.May 2020 17:32:12 correct LSTM model creation and compilation

27.May 2020 17:39:50 time series number (by group) saved to forecast settings

27.May 2020 17:39:50 correct model training, correct saving of model and weights

27.May 2020 17:39:50 settings modified and saved

27.May 2020 18:35:19 correct LSTM model creation and compilation

27.May 2020 18:35:21 correct LSTM model creation and compilation

27.May 2020 18:35:22 correct LSTM model creation and compilation

27.May 2020 18:52:18 time series number (by group) saved to forecast settings

27.May 2020 18:52:18 correct model training, correct saving of model and weights

27.May 2020 18:52:18 settings modified and saved

28.May 2020 07:30:13 correct LSTM model creation and compilation

28.May 2020 07:30:15 correct LSTM model creation and compilation

28.May 2020 07:30:16 correct LSTM model creation and compilation

28.May 2020 07:36:38 time series number (by group) saved to forecast settings

28.May 2020 07:36:38 correct model training, correct saving of model and weights

28.May 2020 07:36:38 settings modified and saved

28.May 2020 17:27:55 correct LSTM model creation and compilation

28.May 2020 17:27:56 correct LSTM model creation and compilation

28.May 2020 17:27:57 correct LSTM model creation and compilation

28.May 2020 18:24:09 time series number (by group) saved to forecast settings

28.May 2020 18:24:09 correct model training, correct saving of model and weights

28.May 2020 18:24:09 settings modified and saved

28.May 2020 19:08:55 correct LSTM model creation and compilation

28.May 2020 19:08:57 correct LSTM model creation and compilation

28.May 2020 19:08:58 correct LSTM model creation and compilation

28.May 2020 19:08:58 model training error
tuple index out of range
Traceback (most recent call last):
  File ".\_2_train.py", line 500, in train
    for time_serie_iterator in range(np.shape(x_train)[1]):
IndexError: tuple index out of range

28.May 2020 19:15:58 correct LSTM model creation and compilation

28.May 2020 19:15:59 correct LSTM model creation and compilation

28.May 2020 19:16:00 correct LSTM model creation and compilation

28.May 2020 20:35:45 time series number (by group) saved to forecast settings

28.May 2020 20:35:45 correct model training, correct saving of model and weights

28.May 2020 20:35:45 settings modified and saved

28.May 2020 22:58:56 correct LSTM model creation and compilation

28.May 2020 22:58:57 correct LSTM model creation and compilation

28.May 2020 22:58:58 correct LSTM model creation and compilation

28.May 2020 23:13:53 correct LSTM model creation and compilation

28.May 2020 23:13:54 correct LSTM model creation and compilation

28.May 2020 23:13:55 correct LSTM model creation and compilation

28.May 2020 23:20:42 correct LSTM model creation and compilation

28.May 2020 23:20:43 correct LSTM model creation and compilation

28.May 2020 23:20:44 correct LSTM model creation and compilation

28.May 2020 23:32:18 correct LSTM model creation and compilation

28.May 2020 23:32:19 correct LSTM model creation and compilation

28.May 2020 23:32:20 correct LSTM model creation and compilation

29.May 2020 01:07:20 time series number (by group) saved to forecast settings

29.May 2020 01:07:20 correct model training, correct saving of model and weights

29.May 2020 01:07:20 settings modified and saved

29.May 2020 06:52:23 correct LSTM model creation and compilation

29.May 2020 06:52:24 correct LSTM model creation and compilation

29.May 2020 06:52:26 correct LSTM model creation and compilation

29.May 2020 07:43:22 time series number (by group) saved to forecast settings

29.May 2020 07:43:22 correct model training, correct saving of model and weights

29.May 2020 07:43:22 settings modified and saved

29.May 2020 11:00:06 correct LSTM model creation and compilation

29.May 2020 11:00:08 correct LSTM model creation and compilation

29.May 2020 11:00:09 correct LSTM model creation and compilation

29.May 2020 11:10:18 correct LSTM model creation and compilation

29.May 2020 11:10:19 correct LSTM model creation and compilation

29.May 2020 11:10:20 correct LSTM model creation and compilation

29.May 2020 11:10:21 model training error
in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:466 train_step  **
        loss = self.compiled_loss(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:204 __call__
        loss_value = loss_obj(y_t, y_p, sample_weight=sw)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\losses.py:143 __call__
        losses = self.call(y_true, y_pred)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\losses.py:246 call
        return self.fn(y_true, y_pred, **self._fn_kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\losses.py:1198 mean_squared_error
        return K.mean(math_ops.squared_difference(y_pred, y_true), axis=-1)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\gen_math_ops.py:10037 squared_difference
        _, _, _op, _outputs = _op_def_library._apply_op_helper(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\op_def_library.py:742 _apply_op_helper
        op = g._create_op_internal(op_type_name, inputs, dtypes=None,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py:593 _create_op_internal
        return super(FuncGraph, self)._create_op_internal(  # pylint: disable=protected-access
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py:3319 _create_op_internal
        ret = Operation(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py:1816 __init__
        self._c_op = _create_c_op(self._graph, node_def, inputs,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py:1657 _create_c_op
        raise ValueError(str(e))

    ValueError: Dimensions must be equal, but are 28 and 56 for '{{node mean_squared_error/SquaredDifference}} = SquaredDifference[T=DT_FLOAT](sequential/dense_2/BiasAdd, IteratorGetNext:1)' with input shapes: [8,28,1193], [8,56,1193].
Traceback (most recent call last):
  File ".\_2_train.py", line 525, in train
    forecaster.fit(x_train, y_train, batch_size=batch_size, epochs=epochs, workers=workers,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 66, in _method_wrapper
    return method(self, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 785, in fit
    tmp_logs = train_function(iterator)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 580, in __call__
    result = self._call(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 627, in _call
    self._initialize(args, kwds, add_initializers_to=initializers)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 505, in _initialize
    self._stateful_fn._get_concrete_function_internal_garbage_collected(  # pylint: disable=protected-access
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2446, in _get_concrete_function_internal_garbage_collected
    graph_function, _, _ = self._maybe_define_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2777, in _maybe_define_function
    graph_function = self._create_graph_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2657, in _create_graph_function
    func_graph_module.func_graph_from_py_func(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 981, in func_graph_from_py_func
    func_outputs = python_func(*func_args, **func_kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 441, in wrapped_fn
    return weak_wrapped_fn().__wrapped__(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 968, in wrapper
    raise e.ag_error_metadata.to_exception(e)
ValueError: in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:466 train_step  **
        loss = self.compiled_loss(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:204 __call__
        loss_value = loss_obj(y_t, y_p, sample_weight=sw)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\losses.py:143 __call__
        losses = self.call(y_true, y_pred)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\losses.py:246 call
        return self.fn(y_true, y_pred, **self._fn_kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\losses.py:1198 mean_squared_error
        return K.mean(math_ops.squared_difference(y_pred, y_true), axis=-1)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\gen_math_ops.py:10037 squared_difference
        _, _, _op, _outputs = _op_def_library._apply_op_helper(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\op_def_library.py:742 _apply_op_helper
        op = g._create_op_internal(op_type_name, inputs, dtypes=None,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py:593 _create_op_internal
        return super(FuncGraph, self)._create_op_internal(  # pylint: disable=protected-access
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py:3319 _create_op_internal
        ret = Operation(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py:1816 __init__
        self._c_op = _create_c_op(self._graph, node_def, inputs,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py:1657 _create_c_op
        raise ValueError(str(e))

    ValueError: Dimensions must be equal, but are 28 and 56 for '{{node mean_squared_error/SquaredDifference}} = SquaredDifference[T=DT_FLOAT](sequential/dense_2/BiasAdd, IteratorGetNext:1)' with input shapes: [8,28,1193], [8,56,1193].


29.May 2020 18:42:03 correct LSTM model creation and compilation

29.May 2020 18:42:04 correct LSTM model creation and compilation

29.May 2020 18:42:05 correct LSTM model creation and compilation

29.May 2020 18:42:06 model training error
in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:466 train_step  **
        loss = self.compiled_loss(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:204 __call__
        loss_value = loss_obj(y_t, y_p, sample_weight=sw)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\losses.py:143 __call__
        losses = self.call(y_true, y_pred)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\losses.py:246 call
        return self.fn(y_true, y_pred, **self._fn_kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\losses.py:1198 mean_squared_error
        return K.mean(math_ops.squared_difference(y_pred, y_true), axis=-1)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\gen_math_ops.py:10037 squared_difference
        _, _, _op, _outputs = _op_def_library._apply_op_helper(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\op_def_library.py:742 _apply_op_helper
        op = g._create_op_internal(op_type_name, inputs, dtypes=None,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py:593 _create_op_internal
        return super(FuncGraph, self)._create_op_internal(  # pylint: disable=protected-access
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py:3319 _create_op_internal
        ret = Operation(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py:1816 __init__
        self._c_op = _create_c_op(self._graph, node_def, inputs,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py:1657 _create_c_op
        raise ValueError(str(e))

    ValueError: Dimensions must be equal, but are 28 and 56 for '{{node mean_squared_error/SquaredDifference}} = SquaredDifference[T=DT_FLOAT](sequential/dense_2/BiasAdd, IteratorGetNext:1)' with input shapes: [8,28,1193], [8,56,1193].
Traceback (most recent call last):
  File ".\_2_train.py", line 525, in train
    forecaster.fit(x_train, y_train, batch_size=batch_size, epochs=epochs, workers=workers,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 66, in _method_wrapper
    return method(self, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 785, in fit
    tmp_logs = train_function(iterator)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 580, in __call__
    result = self._call(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 627, in _call
    self._initialize(args, kwds, add_initializers_to=initializers)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 505, in _initialize
    self._stateful_fn._get_concrete_function_internal_garbage_collected(  # pylint: disable=protected-access
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2446, in _get_concrete_function_internal_garbage_collected
    graph_function, _, _ = self._maybe_define_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2777, in _maybe_define_function
    graph_function = self._create_graph_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2657, in _create_graph_function
    func_graph_module.func_graph_from_py_func(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 981, in func_graph_from_py_func
    func_outputs = python_func(*func_args, **func_kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 441, in wrapped_fn
    return weak_wrapped_fn().__wrapped__(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 968, in wrapper
    raise e.ag_error_metadata.to_exception(e)
ValueError: in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:466 train_step  **
        loss = self.compiled_loss(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:204 __call__
        loss_value = loss_obj(y_t, y_p, sample_weight=sw)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\losses.py:143 __call__
        losses = self.call(y_true, y_pred)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\losses.py:246 call
        return self.fn(y_true, y_pred, **self._fn_kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\losses.py:1198 mean_squared_error
        return K.mean(math_ops.squared_difference(y_pred, y_true), axis=-1)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\gen_math_ops.py:10037 squared_difference
        _, _, _op, _outputs = _op_def_library._apply_op_helper(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\op_def_library.py:742 _apply_op_helper
        op = g._create_op_internal(op_type_name, inputs, dtypes=None,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py:593 _create_op_internal
        return super(FuncGraph, self)._create_op_internal(  # pylint: disable=protected-access
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py:3319 _create_op_internal
        ret = Operation(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py:1816 __init__
        self._c_op = _create_c_op(self._graph, node_def, inputs,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py:1657 _create_c_op
        raise ValueError(str(e))

    ValueError: Dimensions must be equal, but are 28 and 56 for '{{node mean_squared_error/SquaredDifference}} = SquaredDifference[T=DT_FLOAT](sequential/dense_2/BiasAdd, IteratorGetNext:1)' with input shapes: [8,28,1193], [8,56,1193].


29.May 2020 18:43:30 correct LSTM model creation and compilation

29.May 2020 18:43:31 correct LSTM model creation and compilation

29.May 2020 18:43:32 correct LSTM model creation and compilation

29.May 2020 18:43:33 model training error
in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:466 train_step  **
        loss = self.compiled_loss(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:204 __call__
        loss_value = loss_obj(y_t, y_p, sample_weight=sw)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\losses.py:143 __call__
        losses = self.call(y_true, y_pred)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\losses.py:246 call
        return self.fn(y_true, y_pred, **self._fn_kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\losses.py:1198 mean_squared_error
        return K.mean(math_ops.squared_difference(y_pred, y_true), axis=-1)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\gen_math_ops.py:10037 squared_difference
        _, _, _op, _outputs = _op_def_library._apply_op_helper(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\op_def_library.py:742 _apply_op_helper
        op = g._create_op_internal(op_type_name, inputs, dtypes=None,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py:593 _create_op_internal
        return super(FuncGraph, self)._create_op_internal(  # pylint: disable=protected-access
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py:3319 _create_op_internal
        ret = Operation(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py:1816 __init__
        self._c_op = _create_c_op(self._graph, node_def, inputs,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py:1657 _create_c_op
        raise ValueError(str(e))

    ValueError: Dimensions must be equal, but are 28 and 56 for '{{node mean_squared_error/SquaredDifference}} = SquaredDifference[T=DT_FLOAT](sequential/dense_2/BiasAdd, IteratorGetNext:1)' with input shapes: [8,28,1193], [8,56,1193].
Traceback (most recent call last):
  File ".\_2_train.py", line 526, in train
    forecaster.fit(x_train, y_train, batch_size=batch_size, epochs=epochs, workers=workers,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 66, in _method_wrapper
    return method(self, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 785, in fit
    tmp_logs = train_function(iterator)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 580, in __call__
    result = self._call(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 627, in _call
    self._initialize(args, kwds, add_initializers_to=initializers)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 505, in _initialize
    self._stateful_fn._get_concrete_function_internal_garbage_collected(  # pylint: disable=protected-access
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2446, in _get_concrete_function_internal_garbage_collected
    graph_function, _, _ = self._maybe_define_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2777, in _maybe_define_function
    graph_function = self._create_graph_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2657, in _create_graph_function
    func_graph_module.func_graph_from_py_func(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 981, in func_graph_from_py_func
    func_outputs = python_func(*func_args, **func_kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 441, in wrapped_fn
    return weak_wrapped_fn().__wrapped__(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 968, in wrapper
    raise e.ag_error_metadata.to_exception(e)
ValueError: in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:466 train_step  **
        loss = self.compiled_loss(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:204 __call__
        loss_value = loss_obj(y_t, y_p, sample_weight=sw)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\losses.py:143 __call__
        losses = self.call(y_true, y_pred)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\losses.py:246 call
        return self.fn(y_true, y_pred, **self._fn_kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\losses.py:1198 mean_squared_error
        return K.mean(math_ops.squared_difference(y_pred, y_true), axis=-1)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\gen_math_ops.py:10037 squared_difference
        _, _, _op, _outputs = _op_def_library._apply_op_helper(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\op_def_library.py:742 _apply_op_helper
        op = g._create_op_internal(op_type_name, inputs, dtypes=None,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py:593 _create_op_internal
        return super(FuncGraph, self)._create_op_internal(  # pylint: disable=protected-access
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py:3319 _create_op_internal
        ret = Operation(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py:1816 __init__
        self._c_op = _create_c_op(self._graph, node_def, inputs,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py:1657 _create_c_op
        raise ValueError(str(e))

    ValueError: Dimensions must be equal, but are 28 and 56 for '{{node mean_squared_error/SquaredDifference}} = SquaredDifference[T=DT_FLOAT](sequential/dense_2/BiasAdd, IteratorGetNext:1)' with input shapes: [8,28,1193], [8,56,1193].


29.May 2020 18:50:50 correct LSTM model creation and compilation

29.May 2020 18:50:51 correct LSTM model creation and compilation

29.May 2020 18:50:52 correct LSTM model creation and compilation

29.May 2020 18:52:06 correct LSTM model creation and compilation

29.May 2020 18:52:07 correct LSTM model creation and compilation

29.May 2020 18:52:08 correct LSTM model creation and compilation

29.May 2020 18:52:09 model training error
in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:466 train_step  **
        loss = self.compiled_loss(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:204 __call__
        loss_value = loss_obj(y_t, y_p, sample_weight=sw)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\losses.py:143 __call__
        losses = self.call(y_true, y_pred)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\losses.py:246 call
        return self.fn(y_true, y_pred, **self._fn_kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\losses.py:1198 mean_squared_error
        return K.mean(math_ops.squared_difference(y_pred, y_true), axis=-1)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\gen_math_ops.py:10037 squared_difference
        _, _, _op, _outputs = _op_def_library._apply_op_helper(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\op_def_library.py:742 _apply_op_helper
        op = g._create_op_internal(op_type_name, inputs, dtypes=None,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py:593 _create_op_internal
        return super(FuncGraph, self)._create_op_internal(  # pylint: disable=protected-access
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py:3319 _create_op_internal
        ret = Operation(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py:1816 __init__
        self._c_op = _create_c_op(self._graph, node_def, inputs,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py:1657 _create_c_op
        raise ValueError(str(e))

    ValueError: Dimensions must be equal, but are 28 and 56 for '{{node mean_squared_error/SquaredDifference}} = SquaredDifference[T=DT_FLOAT](sequential/dense_2/BiasAdd, IteratorGetNext:1)' with input shapes: [8,28,1193], [8,56,1193].
Traceback (most recent call last):
  File ".\_2_train.py", line 526, in train
    forecaster.fit(x_train, y_train, batch_size=batch_size, epochs=epochs, workers=workers,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 66, in _method_wrapper
    return method(self, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 785, in fit
    tmp_logs = train_function(iterator)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 580, in __call__
    result = self._call(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 627, in _call
    self._initialize(args, kwds, add_initializers_to=initializers)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 505, in _initialize
    self._stateful_fn._get_concrete_function_internal_garbage_collected(  # pylint: disable=protected-access
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2446, in _get_concrete_function_internal_garbage_collected
    graph_function, _, _ = self._maybe_define_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2777, in _maybe_define_function
    graph_function = self._create_graph_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2657, in _create_graph_function
    func_graph_module.func_graph_from_py_func(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 981, in func_graph_from_py_func
    func_outputs = python_func(*func_args, **func_kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 441, in wrapped_fn
    return weak_wrapped_fn().__wrapped__(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 968, in wrapper
    raise e.ag_error_metadata.to_exception(e)
ValueError: in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:466 train_step  **
        loss = self.compiled_loss(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:204 __call__
        loss_value = loss_obj(y_t, y_p, sample_weight=sw)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\losses.py:143 __call__
        losses = self.call(y_true, y_pred)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\losses.py:246 call
        return self.fn(y_true, y_pred, **self._fn_kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\losses.py:1198 mean_squared_error
        return K.mean(math_ops.squared_difference(y_pred, y_true), axis=-1)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\gen_math_ops.py:10037 squared_difference
        _, _, _op, _outputs = _op_def_library._apply_op_helper(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\op_def_library.py:742 _apply_op_helper
        op = g._create_op_internal(op_type_name, inputs, dtypes=None,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py:593 _create_op_internal
        return super(FuncGraph, self)._create_op_internal(  # pylint: disable=protected-access
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py:3319 _create_op_internal
        ret = Operation(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py:1816 __init__
        self._c_op = _create_c_op(self._graph, node_def, inputs,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py:1657 _create_c_op
        raise ValueError(str(e))

    ValueError: Dimensions must be equal, but are 28 and 56 for '{{node mean_squared_error/SquaredDifference}} = SquaredDifference[T=DT_FLOAT](sequential/dense_2/BiasAdd, IteratorGetNext:1)' with input shapes: [8,28,1193], [8,56,1193].


29.May 2020 19:58:47 correct LSTM model creation and compilation

29.May 2020 19:58:48 correct LSTM model creation and compilation

29.May 2020 19:58:49 correct LSTM model creation and compilation

29.May 2020 19:58:50 model training error
in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:466 train_step  **
        loss = self.compiled_loss(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:204 __call__
        loss_value = loss_obj(y_t, y_p, sample_weight=sw)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\losses.py:143 __call__
        losses = self.call(y_true, y_pred)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\losses.py:246 call
        return self.fn(y_true, y_pred, **self._fn_kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\losses.py:1198 mean_squared_error
        return K.mean(math_ops.squared_difference(y_pred, y_true), axis=-1)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\gen_math_ops.py:10037 squared_difference
        _, _, _op, _outputs = _op_def_library._apply_op_helper(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\op_def_library.py:742 _apply_op_helper
        op = g._create_op_internal(op_type_name, inputs, dtypes=None,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py:593 _create_op_internal
        return super(FuncGraph, self)._create_op_internal(  # pylint: disable=protected-access
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py:3319 _create_op_internal
        ret = Operation(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py:1816 __init__
        self._c_op = _create_c_op(self._graph, node_def, inputs,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py:1657 _create_c_op
        raise ValueError(str(e))

    ValueError: Dimensions must be equal, but are 28 and 56 for '{{node mean_squared_error/SquaredDifference}} = SquaredDifference[T=DT_FLOAT](sequential/dense_2/BiasAdd, IteratorGetNext:1)' with input shapes: [8,28,1193], [8,56,1193].
Traceback (most recent call last):
  File ".\_2_train.py", line 528, in train
    forecaster.fit(x_train, y_train, batch_size=batch_size, epochs=epochs, workers=workers,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 66, in _method_wrapper
    return method(self, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 785, in fit
    tmp_logs = train_function(iterator)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 580, in __call__
    result = self._call(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 627, in _call
    self._initialize(args, kwds, add_initializers_to=initializers)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 505, in _initialize
    self._stateful_fn._get_concrete_function_internal_garbage_collected(  # pylint: disable=protected-access
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2446, in _get_concrete_function_internal_garbage_collected
    graph_function, _, _ = self._maybe_define_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2777, in _maybe_define_function
    graph_function = self._create_graph_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2657, in _create_graph_function
    func_graph_module.func_graph_from_py_func(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 981, in func_graph_from_py_func
    func_outputs = python_func(*func_args, **func_kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 441, in wrapped_fn
    return weak_wrapped_fn().__wrapped__(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 968, in wrapper
    raise e.ag_error_metadata.to_exception(e)
ValueError: in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:466 train_step  **
        loss = self.compiled_loss(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:204 __call__
        loss_value = loss_obj(y_t, y_p, sample_weight=sw)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\losses.py:143 __call__
        losses = self.call(y_true, y_pred)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\losses.py:246 call
        return self.fn(y_true, y_pred, **self._fn_kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\losses.py:1198 mean_squared_error
        return K.mean(math_ops.squared_difference(y_pred, y_true), axis=-1)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\gen_math_ops.py:10037 squared_difference
        _, _, _op, _outputs = _op_def_library._apply_op_helper(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\op_def_library.py:742 _apply_op_helper
        op = g._create_op_internal(op_type_name, inputs, dtypes=None,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py:593 _create_op_internal
        return super(FuncGraph, self)._create_op_internal(  # pylint: disable=protected-access
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py:3319 _create_op_internal
        ret = Operation(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py:1816 __init__
        self._c_op = _create_c_op(self._graph, node_def, inputs,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py:1657 _create_c_op
        raise ValueError(str(e))

    ValueError: Dimensions must be equal, but are 28 and 56 for '{{node mean_squared_error/SquaredDifference}} = SquaredDifference[T=DT_FLOAT](sequential/dense_2/BiasAdd, IteratorGetNext:1)' with input shapes: [8,28,1193], [8,56,1193].


29.May 2020 20:01:55 correct LSTM model creation and compilation

29.May 2020 20:01:56 correct LSTM model creation and compilation

29.May 2020 20:01:57 correct LSTM model creation and compilation

29.May 2020 20:01:58 model training error
in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:466 train_step  **
        loss = self.compiled_loss(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:204 __call__
        loss_value = loss_obj(y_t, y_p, sample_weight=sw)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\losses.py:143 __call__
        losses = self.call(y_true, y_pred)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\losses.py:246 call
        return self.fn(y_true, y_pred, **self._fn_kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\losses.py:1198 mean_squared_error
        return K.mean(math_ops.squared_difference(y_pred, y_true), axis=-1)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\gen_math_ops.py:10037 squared_difference
        _, _, _op, _outputs = _op_def_library._apply_op_helper(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\op_def_library.py:742 _apply_op_helper
        op = g._create_op_internal(op_type_name, inputs, dtypes=None,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py:593 _create_op_internal
        return super(FuncGraph, self)._create_op_internal(  # pylint: disable=protected-access
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py:3319 _create_op_internal
        ret = Operation(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py:1816 __init__
        self._c_op = _create_c_op(self._graph, node_def, inputs,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py:1657 _create_c_op
        raise ValueError(str(e))

    ValueError: Dimensions must be equal, but are 28 and 56 for '{{node mean_squared_error/SquaredDifference}} = SquaredDifference[T=DT_FLOAT](sequential/dense_2/BiasAdd, IteratorGetNext:1)' with input shapes: [8,28,1193], [8,56,1193].
Traceback (most recent call last):
  File ".\_2_train.py", line 528, in train
    forecaster.fit(x_train, y_train, batch_size=batch_size, epochs=epochs, workers=workers,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 66, in _method_wrapper
    return method(self, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 785, in fit
    tmp_logs = train_function(iterator)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 580, in __call__
    result = self._call(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 627, in _call
    self._initialize(args, kwds, add_initializers_to=initializers)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 505, in _initialize
    self._stateful_fn._get_concrete_function_internal_garbage_collected(  # pylint: disable=protected-access
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2446, in _get_concrete_function_internal_garbage_collected
    graph_function, _, _ = self._maybe_define_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2777, in _maybe_define_function
    graph_function = self._create_graph_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2657, in _create_graph_function
    func_graph_module.func_graph_from_py_func(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 981, in func_graph_from_py_func
    func_outputs = python_func(*func_args, **func_kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 441, in wrapped_fn
    return weak_wrapped_fn().__wrapped__(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 968, in wrapper
    raise e.ag_error_metadata.to_exception(e)
ValueError: in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:466 train_step  **
        loss = self.compiled_loss(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:204 __call__
        loss_value = loss_obj(y_t, y_p, sample_weight=sw)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\losses.py:143 __call__
        losses = self.call(y_true, y_pred)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\losses.py:246 call
        return self.fn(y_true, y_pred, **self._fn_kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\losses.py:1198 mean_squared_error
        return K.mean(math_ops.squared_difference(y_pred, y_true), axis=-1)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\gen_math_ops.py:10037 squared_difference
        _, _, _op, _outputs = _op_def_library._apply_op_helper(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\op_def_library.py:742 _apply_op_helper
        op = g._create_op_internal(op_type_name, inputs, dtypes=None,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py:593 _create_op_internal
        return super(FuncGraph, self)._create_op_internal(  # pylint: disable=protected-access
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py:3319 _create_op_internal
        ret = Operation(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py:1816 __init__
        self._c_op = _create_c_op(self._graph, node_def, inputs,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py:1657 _create_c_op
        raise ValueError(str(e))

    ValueError: Dimensions must be equal, but are 28 and 56 for '{{node mean_squared_error/SquaredDifference}} = SquaredDifference[T=DT_FLOAT](sequential/dense_2/BiasAdd, IteratorGetNext:1)' with input shapes: [8,28,1193], [8,56,1193].


29.May 2020 20:03:55 correct LSTM model creation and compilation

29.May 2020 20:03:56 correct LSTM model creation and compilation

29.May 2020 20:03:58 correct LSTM model creation and compilation

29.May 2020 20:03:59 model training error
in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:466 train_step  **
        loss = self.compiled_loss(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:204 __call__
        loss_value = loss_obj(y_t, y_p, sample_weight=sw)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\losses.py:143 __call__
        losses = self.call(y_true, y_pred)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\losses.py:246 call
        return self.fn(y_true, y_pred, **self._fn_kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\losses.py:1198 mean_squared_error
        return K.mean(math_ops.squared_difference(y_pred, y_true), axis=-1)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\gen_math_ops.py:10037 squared_difference
        _, _, _op, _outputs = _op_def_library._apply_op_helper(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\op_def_library.py:742 _apply_op_helper
        op = g._create_op_internal(op_type_name, inputs, dtypes=None,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py:593 _create_op_internal
        return super(FuncGraph, self)._create_op_internal(  # pylint: disable=protected-access
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py:3319 _create_op_internal
        ret = Operation(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py:1816 __init__
        self._c_op = _create_c_op(self._graph, node_def, inputs,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py:1657 _create_c_op
        raise ValueError(str(e))

    ValueError: Dimensions must be equal, but are 28 and 56 for '{{node mean_squared_error/SquaredDifference}} = SquaredDifference[T=DT_FLOAT](sequential/dense_2/BiasAdd, IteratorGetNext:1)' with input shapes: [8,28,1193], [8,56,1193].
Traceback (most recent call last):
  File ".\_2_train.py", line 527, in train
    forecaster.fit(x_train, y_train, batch_size=batch_size, epochs=epochs, workers=workers,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 66, in _method_wrapper
    return method(self, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 785, in fit
    tmp_logs = train_function(iterator)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 580, in __call__
    result = self._call(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 627, in _call
    self._initialize(args, kwds, add_initializers_to=initializers)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 505, in _initialize
    self._stateful_fn._get_concrete_function_internal_garbage_collected(  # pylint: disable=protected-access
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2446, in _get_concrete_function_internal_garbage_collected
    graph_function, _, _ = self._maybe_define_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2777, in _maybe_define_function
    graph_function = self._create_graph_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2657, in _create_graph_function
    func_graph_module.func_graph_from_py_func(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 981, in func_graph_from_py_func
    func_outputs = python_func(*func_args, **func_kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 441, in wrapped_fn
    return weak_wrapped_fn().__wrapped__(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 968, in wrapper
    raise e.ag_error_metadata.to_exception(e)
ValueError: in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:466 train_step  **
        loss = self.compiled_loss(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:204 __call__
        loss_value = loss_obj(y_t, y_p, sample_weight=sw)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\losses.py:143 __call__
        losses = self.call(y_true, y_pred)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\losses.py:246 call
        return self.fn(y_true, y_pred, **self._fn_kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\losses.py:1198 mean_squared_error
        return K.mean(math_ops.squared_difference(y_pred, y_true), axis=-1)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\gen_math_ops.py:10037 squared_difference
        _, _, _op, _outputs = _op_def_library._apply_op_helper(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\op_def_library.py:742 _apply_op_helper
        op = g._create_op_internal(op_type_name, inputs, dtypes=None,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py:593 _create_op_internal
        return super(FuncGraph, self)._create_op_internal(  # pylint: disable=protected-access
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py:3319 _create_op_internal
        ret = Operation(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py:1816 __init__
        self._c_op = _create_c_op(self._graph, node_def, inputs,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py:1657 _create_c_op
        raise ValueError(str(e))

    ValueError: Dimensions must be equal, but are 28 and 56 for '{{node mean_squared_error/SquaredDifference}} = SquaredDifference[T=DT_FLOAT](sequential/dense_2/BiasAdd, IteratorGetNext:1)' with input shapes: [8,28,1193], [8,56,1193].


29.May 2020 20:12:02 correct LSTM model creation and compilation

29.May 2020 20:12:03 correct LSTM model creation and compilation

29.May 2020 20:12:04 correct LSTM model creation and compilation

29.May 2020 20:44:53 time series number (by group) saved to forecast settings

29.May 2020 20:44:53 correct model training, correct saving of model and weights

29.May 2020 20:44:53 settings modified and saved

29.May 2020 21:37:01 correct LSTM model creation and compilation

29.May 2020 21:37:02 correct LSTM model creation and compilation

29.May 2020 21:37:03 correct LSTM model creation and compilation

29.May 2020 21:37:04 model training error
in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:466 train_step  **
        loss = self.compiled_loss(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:204 __call__
        loss_value = loss_obj(y_t, y_p, sample_weight=sw)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\losses.py:143 __call__
        losses = self.call(y_true, y_pred)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\losses.py:246 call
        return self.fn(y_true, y_pred, **self._fn_kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\losses.py:1198 mean_squared_error
        return K.mean(math_ops.squared_difference(y_pred, y_true), axis=-1)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\gen_math_ops.py:10037 squared_difference
        _, _, _op, _outputs = _op_def_library._apply_op_helper(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\op_def_library.py:742 _apply_op_helper
        op = g._create_op_internal(op_type_name, inputs, dtypes=None,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py:593 _create_op_internal
        return super(FuncGraph, self)._create_op_internal(  # pylint: disable=protected-access
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py:3319 _create_op_internal
        ret = Operation(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py:1816 __init__
        self._c_op = _create_c_op(self._graph, node_def, inputs,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py:1657 _create_c_op
        raise ValueError(str(e))

    ValueError: Dimensions must be equal, but are 56 and 28 for '{{node mean_squared_error/SquaredDifference}} = SquaredDifference[T=DT_FLOAT](sequential/dense_2/BiasAdd, IteratorGetNext:1)' with input shapes: [8,56,1193], [8,28,1193].
Traceback (most recent call last):
  File ".\_2_train.py", line 526, in train
    forecaster.fit(x_train, y_train, batch_size=batch_size, epochs=epochs, workers=workers,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 66, in _method_wrapper
    return method(self, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 785, in fit
    tmp_logs = train_function(iterator)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 580, in __call__
    result = self._call(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 627, in _call
    self._initialize(args, kwds, add_initializers_to=initializers)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 505, in _initialize
    self._stateful_fn._get_concrete_function_internal_garbage_collected(  # pylint: disable=protected-access
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2446, in _get_concrete_function_internal_garbage_collected
    graph_function, _, _ = self._maybe_define_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2777, in _maybe_define_function
    graph_function = self._create_graph_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2657, in _create_graph_function
    func_graph_module.func_graph_from_py_func(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 981, in func_graph_from_py_func
    func_outputs = python_func(*func_args, **func_kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 441, in wrapped_fn
    return weak_wrapped_fn().__wrapped__(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 968, in wrapper
    raise e.ag_error_metadata.to_exception(e)
ValueError: in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:466 train_step  **
        loss = self.compiled_loss(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\compile_utils.py:204 __call__
        loss_value = loss_obj(y_t, y_p, sample_weight=sw)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\losses.py:143 __call__
        losses = self.call(y_true, y_pred)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\losses.py:246 call
        return self.fn(y_true, y_pred, **self._fn_kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\losses.py:1198 mean_squared_error
        return K.mean(math_ops.squared_difference(y_pred, y_true), axis=-1)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\gen_math_ops.py:10037 squared_difference
        _, _, _op, _outputs = _op_def_library._apply_op_helper(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\op_def_library.py:742 _apply_op_helper
        op = g._create_op_internal(op_type_name, inputs, dtypes=None,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py:593 _create_op_internal
        return super(FuncGraph, self)._create_op_internal(  # pylint: disable=protected-access
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py:3319 _create_op_internal
        ret = Operation(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py:1816 __init__
        self._c_op = _create_c_op(self._graph, node_def, inputs,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\ops.py:1657 _create_c_op
        raise ValueError(str(e))

    ValueError: Dimensions must be equal, but are 56 and 28 for '{{node mean_squared_error/SquaredDifference}} = SquaredDifference[T=DT_FLOAT](sequential/dense_2/BiasAdd, IteratorGetNext:1)' with input shapes: [8,56,1193], [8,28,1193].


29.May 2020 21:39:40 correct LSTM model creation and compilation

29.May 2020 21:39:41 correct LSTM model creation and compilation

29.May 2020 21:39:42 correct LSTM model creation and compilation

29.May 2020 21:58:06 time series number (by group) saved to forecast settings

29.May 2020 21:58:06 correct model training, correct saving of model and weights

29.May 2020 21:58:06 settings modified and saved

30.May 2020 00:30:14 correct LSTM model creation and compilation

30.May 2020 00:30:15 correct LSTM model creation and compilation

30.May 2020 00:30:16 correct LSTM model creation and compilation

30.May 2020 00:38:20 time series number (by group) saved to forecast settings

30.May 2020 00:38:20 correct model training, correct saving of model and weights

30.May 2020 00:38:20 settings modified and saved

30.May 2020 00:44:01 correct LSTM model creation and compilation

30.May 2020 00:44:02 correct LSTM model creation and compilation

30.May 2020 00:44:03 correct LSTM model creation and compilation

30.May 2020 00:52:40 time series number (by group) saved to forecast settings

30.May 2020 00:52:40 correct model training, correct saving of model and weights

30.May 2020 00:52:40 settings modified and saved

30.May 2020 01:09:35 correct LSTM model creation and compilation

30.May 2020 01:09:36 correct LSTM model creation and compilation

30.May 2020 01:09:37 correct LSTM model creation and compilation

30.May 2020 01:59:20 time series number (by group) saved to forecast settings

30.May 2020 01:59:20 correct model training, correct saving of model and weights

30.May 2020 01:59:20 settings modified and saved

30.May 2020 02:16:20 correct LSTM model creation and compilation

30.May 2020 02:16:21 correct LSTM model creation and compilation

30.May 2020 02:16:21 correct LSTM model creation and compilation

30.May 2020 02:18:21 correct LSTM model creation and compilation

30.May 2020 02:18:22 correct LSTM model creation and compilation

30.May 2020 02:18:23 correct LSTM model creation and compilation

30.May 2020 06:08:34 time series number (by group) saved to forecast settings

30.May 2020 06:08:34 correct model training, correct saving of model and weights

30.May 2020 06:08:34 settings modified and saved

30.May 2020 07:36:59 correct LSTM model creation and compilation

30.May 2020 07:37:00 correct LSTM model creation and compilation

30.May 2020 07:37:41 correct LSTM model creation and compilation

30.May 2020 07:37:42 correct LSTM model creation and compilation

30.May 2020 07:39:15 correct LSTM model creation and compilation

30.May 2020 07:39:15 correct LSTM model creation and compilation

30.May 2020 07:41:00 correct LSTM model creation and compilation

30.May 2020 07:41:01 correct LSTM model creation and compilation

30.May 2020 07:44:38 model training error
list index out of range
Traceback (most recent call last):
  File ".\_2_train.py", line 525, in train
    forecaster = forecaster_models_list[group_iterator]
IndexError: list index out of range

30.May 2020 07:49:35 correct LSTM model creation and compilation

30.May 2020 07:49:36 correct LSTM model creation and compilation

30.May 2020 07:49:37 correct LSTM model creation and compilation

30.May 2020 07:55:44 time series number (by group) saved to forecast settings

30.May 2020 07:55:44 correct model training, correct saving of model and weights

30.May 2020 07:55:44 settings modified and saved

30.May 2020 08:08:24 correct LSTM model creation and compilation

30.May 2020 08:08:25 correct LSTM model creation and compilation

30.May 2020 08:08:26 correct LSTM model creation and compilation

30.May 2020 08:14:56 time series number (by group) saved to forecast settings

30.May 2020 08:14:56 correct model training, correct saving of model and weights

30.May 2020 08:14:56 settings modified and saved

30.May 2020 08:45:30 correct LSTM model creation and compilation

30.May 2020 08:45:31 correct LSTM model creation and compilation

30.May 2020 08:45:32 correct LSTM model creation and compilation

30.May 2020 08:45:32 model training error
could not broadcast input array from shape (1193,28) into shape (1193)
Traceback (most recent call last):
  File ".\_2_train.py", line 488, in train
    x_train = np.array(x_train)
ValueError: could not broadcast input array from shape (1193,28) into shape (1193)

30.May 2020 08:49:43 correct LSTM model creation and compilation

30.May 2020 08:49:45 correct LSTM model creation and compilation

30.May 2020 08:49:46 correct LSTM model creation and compilation

30.May 2020 08:49:46 model training error
could not broadcast input array from shape (1193,28) into shape (1193)
Traceback (most recent call last):
  File ".\_2_train.py", line 488, in train
    x_train = np.array(x_train)
ValueError: could not broadcast input array from shape (1193,28) into shape (1193)

30.May 2020 08:57:48 correct LSTM model creation and compilation

30.May 2020 08:57:49 correct LSTM model creation and compilation

30.May 2020 08:57:50 correct LSTM model creation and compilation

30.May 2020 08:57:50 model training error
could not broadcast input array from shape (1193,28) into shape (1193)
Traceback (most recent call last):
  File ".\_2_train.py", line 500, in train
    x_train = np.array(x_train)
ValueError: could not broadcast input array from shape (1193,28) into shape (1193)

30.May 2020 09:04:30 correct LSTM model creation and compilation

30.May 2020 09:04:31 correct LSTM model creation and compilation

30.May 2020 09:04:32 correct LSTM model creation and compilation

30.May 2020 09:04:32 model training error
could not broadcast input array from shape (1193,28) into shape (1193)
Traceback (most recent call last):
  File ".\_2_train.py", line 502, in train
    x_train = np.array(x_train)
ValueError: could not broadcast input array from shape (1193,28) into shape (1193)

30.May 2020 09:13:19 correct LSTM model creation and compilation

30.May 2020 09:13:20 correct LSTM model creation and compilation

30.May 2020 09:13:21 correct LSTM model creation and compilation

30.May 2020 09:13:21 model training error
could not broadcast input array from shape (1193,28) into shape (1193)
Traceback (most recent call last):
  File ".\_2_train.py", line 502, in train
    x_train = np.array(x_train)
ValueError: could not broadcast input array from shape (1193,28) into shape (1193)

30.May 2020 09:14:13 correct LSTM model creation and compilation

30.May 2020 09:14:15 correct LSTM model creation and compilation

30.May 2020 09:14:16 correct LSTM model creation and compilation

30.May 2020 09:29:28 time series number (by group) saved to forecast settings

30.May 2020 09:29:28 correct model training, correct saving of model and weights

30.May 2020 09:29:28 settings modified and saved

30.May 2020 10:01:21 correct LSTM model creation and compilation

30.May 2020 10:01:22 correct LSTM model creation and compilation

30.May 2020 10:01:23 correct LSTM model creation and compilation

30.May 2020 10:05:56 time series number (by group) saved to forecast settings

30.May 2020 10:05:56 correct model training, correct saving of model and weights

30.May 2020 10:05:56 settings modified and saved

30.May 2020 10:09:38 correct LSTM model creation and compilation

30.May 2020 10:09:40 correct LSTM model creation and compilation

30.May 2020 10:09:41 correct LSTM model creation and compilation

30.May 2020 10:54:58 time series number (by group) saved to forecast settings

30.May 2020 10:54:58 correct model training, correct saving of model and weights

30.May 2020 10:54:58 settings modified and saved

30.May 2020 12:30:56 correct LSTM model creation and compilation

30.May 2020 12:30:57 correct LSTM model creation and compilation

30.May 2020 12:30:58 correct LSTM model creation and compilation

30.May 2020 12:46:41 time series number (by group) saved to forecast settings

30.May 2020 12:46:41 correct model training, correct saving of model and weights

30.May 2020 12:46:41 settings modified and saved

30.May 2020 20:38:39 correct LSTM model creation and compilation

30.May 2020 20:38:39 correct LSTM model creation and compilation

30.May 2020 20:38:39 correct LSTM model creation and compilation

30.May 2020 20:39:15 time series number (by group) saved to forecast settings

30.May 2020 20:39:15 correct model training, correct saving of model and weights

30.May 2020 20:39:15 settings modified and saved

30.May 2020 20:43:18 correct LSTM model creation and compilation

30.May 2020 20:43:18 correct LSTM model creation and compilation

30.May 2020 20:43:18 correct LSTM model creation and compilation

30.May 2020 20:43:56 time series number (by group) saved to forecast settings

30.May 2020 20:43:56 correct model training, correct saving of model and weights

30.May 2020 20:43:56 settings modified and saved

30.May 2020 20:54:40 correct LSTM model creation and compilation

30.May 2020 20:54:40 correct LSTM model creation and compilation

30.May 2020 20:54:40 correct LSTM model creation and compilation

30.May 2020 20:55:52 time series number (by group) saved to forecast settings

30.May 2020 20:55:52 correct model training, correct saving of model and weights

30.May 2020 20:55:52 settings modified and saved

30.May 2020 21:02:25 correct LSTM model creation and compilation

30.May 2020 21:02:25 correct LSTM model creation and compilation

30.May 2020 21:02:25 correct LSTM model creation and compilation

30.May 2020 21:03:39 time series number (by group) saved to forecast settings

30.May 2020 21:03:39 correct model training, correct saving of model and weights

30.May 2020 21:03:39 settings modified and saved

30.May 2020 21:07:23 correct LSTM model creation and compilation

30.May 2020 21:07:24 correct LSTM model creation and compilation

30.May 2020 21:07:24 correct LSTM model creation and compilation

30.May 2020 21:07:55 time series number (by group) saved to forecast settings

30.May 2020 21:07:55 correct model training, correct saving of model and weights

30.May 2020 21:07:55 settings modified and saved

30.May 2020 21:48:17 correct LSTM model creation and compilation

30.May 2020 21:48:18 correct LSTM model creation and compilation

30.May 2020 21:48:18 correct LSTM model creation and compilation

30.May 2020 21:48:25 time series number (by group) saved to forecast settings

30.May 2020 21:48:25 correct model training, correct saving of model and weights

30.May 2020 21:48:25 settings modified and saved

30.May 2020 21:58:04 correct LSTM model creation and compilation

30.May 2020 21:58:04 correct LSTM model creation and compilation

30.May 2020 21:58:04 correct LSTM model creation and compilation

30.May 2020 21:58:25 time series number (by group) saved to forecast settings

30.May 2020 21:58:25 correct model training, correct saving of model and weights

30.May 2020 21:58:25 settings modified and saved

30.May 2020 22:00:59 correct LSTM model creation and compilation

30.May 2020 22:01:00 correct LSTM model creation and compilation

30.May 2020 22:01:00 correct LSTM model creation and compilation

30.May 2020 22:01:12 time series number (by group) saved to forecast settings

30.May 2020 22:01:12 correct model training, correct saving of model and weights

30.May 2020 22:01:12 settings modified and saved

30.May 2020 22:04:07 correct LSTM model creation and compilation

30.May 2020 22:04:07 correct LSTM model creation and compilation

30.May 2020 22:04:07 correct LSTM model creation and compilation

30.May 2020 22:04:19 time series number (by group) saved to forecast settings

30.May 2020 22:04:19 correct model training, correct saving of model and weights

30.May 2020 22:04:19 settings modified and saved

30.May 2020 22:06:39 correct LSTM model creation and compilation

30.May 2020 22:06:39 correct LSTM model creation and compilation

30.May 2020 22:06:39 correct LSTM model creation and compilation

30.May 2020 22:06:52 time series number (by group) saved to forecast settings

30.May 2020 22:06:52 correct model training, correct saving of model and weights

30.May 2020 22:06:52 settings modified and saved

30.May 2020 22:08:58 correct LSTM model creation and compilation

30.May 2020 22:08:58 correct LSTM model creation and compilation

30.May 2020 22:08:58 correct LSTM model creation and compilation

30.May 2020 22:09:10 time series number (by group) saved to forecast settings

30.May 2020 22:09:10 correct model training, correct saving of model and weights

30.May 2020 22:09:10 settings modified and saved

30.May 2020 22:17:48 correct LSTM model creation and compilation

30.May 2020 22:17:48 correct LSTM model creation and compilation

30.May 2020 22:17:48 correct LSTM model creation and compilation

30.May 2020 22:17:59 time series number (by group) saved to forecast settings

30.May 2020 22:17:59 correct model training, correct saving of model and weights

30.May 2020 22:17:59 settings modified and saved

30.May 2020 22:31:20 correct LSTM model creation and compilation

30.May 2020 22:31:20 correct LSTM model creation and compilation

30.May 2020 22:31:21 correct LSTM model creation and compilation

30.May 2020 22:32:11 time series number (by group) saved to forecast settings

30.May 2020 22:32:11 correct model training, correct saving of model and weights

30.May 2020 22:32:11 settings modified and saved

30.May 2020 22:37:39 correct LSTM model creation and compilation

30.May 2020 22:37:40 correct LSTM model creation and compilation

30.May 2020 22:37:41 correct LSTM model creation and compilation

30.May 2020 22:38:35 correct LSTM model creation and compilation

30.May 2020 22:38:36 correct LSTM model creation and compilation

30.May 2020 22:38:37 correct LSTM model creation and compilation

30.May 2020 22:43:53 time series number (by group) saved to forecast settings

30.May 2020 22:43:53 correct model training, correct saving of model and weights

30.May 2020 22:43:53 settings modified and saved

30.May 2020 23:01:30 correct LSTM model creation and compilation

30.May 2020 23:01:31 correct LSTM model creation and compilation

30.May 2020 23:01:32 correct LSTM model creation and compilation

30.May 2020 23:16:32 time series number (by group) saved to forecast settings

30.May 2020 23:16:32 correct model training, correct saving of model and weights

30.May 2020 23:16:32 settings modified and saved

30.May 2020 23:31:58 correct LSTM model creation and compilation

30.May 2020 23:31:59 correct LSTM model creation and compilation

30.May 2020 23:32:00 correct LSTM model creation and compilation

30.May 2020 23:37:27 time series number (by group) saved to forecast settings

30.May 2020 23:37:27 correct model training, correct saving of model and weights

30.May 2020 23:37:27 settings modified and saved

30.May 2020 23:52:45 correct LSTM model creation and compilation

30.May 2020 23:52:46 correct LSTM model creation and compilation

30.May 2020 23:52:47 correct LSTM model creation and compilation

30.May 2020 23:57:30 time series number (by group) saved to forecast settings

30.May 2020 23:57:30 correct model training, correct saving of model and weights

30.May 2020 23:57:30 settings modified and saved

31.May 2020 00:09:29 correct LSTM model creation and compilation

31.May 2020 00:09:29 correct LSTM model creation and compilation

31.May 2020 00:09:30 correct LSTM model creation and compilation

31.May 2020 00:17:26 time series number (by group) saved to forecast settings

31.May 2020 00:17:26 correct model training, correct saving of model and weights

31.May 2020 00:17:26 settings modified and saved

31.May 2020 07:42:47 correct LSTM model creation and compilation

31.May 2020 07:42:47 correct LSTM model creation and compilation

31.May 2020 07:42:48 correct LSTM model creation and compilation

31.May 2020 07:44:54 correct LSTM model creation and compilation

31.May 2020 07:44:54 correct LSTM model creation and compilation

31.May 2020 07:44:55 correct LSTM model creation and compilation

31.May 2020 07:49:34 time series number (by group) saved to forecast settings

31.May 2020 07:49:34 correct model training, correct saving of model and weights

31.May 2020 07:49:34 settings modified and saved

31.May 2020 08:00:35 correct LSTM model creation and compilation

31.May 2020 08:00:35 correct LSTM model creation and compilation

31.May 2020 08:00:36 correct LSTM model creation and compilation

31.May 2020 08:10:57 time series number (by group) saved to forecast settings

31.May 2020 08:10:57 correct model training, correct saving of model and weights

31.May 2020 08:10:57 settings modified and saved

31.May 2020 08:32:29 correct LSTM model creation and compilation

31.May 2020 08:32:30 correct LSTM model creation and compilation

31.May 2020 08:32:30 correct LSTM model creation and compilation

31.May 2020 08:43:01 time series number (by group) saved to forecast settings

31.May 2020 08:43:01 correct model training, correct saving of model and weights

31.May 2020 08:43:01 settings modified and saved

31.May 2020 08:59:38 correct LSTM model creation and compilation

31.May 2020 08:59:39 correct LSTM model creation and compilation

31.May 2020 08:59:39 correct LSTM model creation and compilation

31.May 2020 09:02:12 correct LSTM model creation and compilation

31.May 2020 09:02:13 correct LSTM model creation and compilation

31.May 2020 09:02:13 correct LSTM model creation and compilation

31.May 2020 09:04:21 correct LSTM model creation and compilation

31.May 2020 09:04:22 correct LSTM model creation and compilation

31.May 2020 09:04:23 correct LSTM model creation and compilation

31.May 2020 09:12:12 correct LSTM model creation and compilation

31.May 2020 09:12:13 correct LSTM model creation and compilation

31.May 2020 09:12:13 correct LSTM model creation and compilation

31.May 2020 09:34:09 correct LSTM model creation and compilation

31.May 2020 09:34:10 correct LSTM model creation and compilation

31.May 2020 09:34:11 correct LSTM model creation and compilation

31.May 2020 09:37:07 correct LSTM model creation and compilation

31.May 2020 09:37:08 correct LSTM model creation and compilation

31.May 2020 09:37:08 correct LSTM model creation and compilation

31.May 2020 09:40:01 correct LSTM model creation and compilation

31.May 2020 09:40:02 correct LSTM model creation and compilation

31.May 2020 09:40:02 correct LSTM model creation and compilation

31.May 2020 09:41:43 correct LSTM model creation and compilation

31.May 2020 09:41:44 correct LSTM model creation and compilation

31.May 2020 09:41:44 correct LSTM model creation and compilation

31.May 2020 09:44:22 correct LSTM model creation and compilation

31.May 2020 09:44:23 correct LSTM model creation and compilation

31.May 2020 09:44:23 correct LSTM model creation and compilation

31.May 2020 09:45:19 correct LSTM model creation and compilation

31.May 2020 09:45:19 correct LSTM model creation and compilation

31.May 2020 09:45:20 correct LSTM model creation and compilation

31.May 2020 09:47:18 correct LSTM model creation and compilation

31.May 2020 09:47:19 correct LSTM model creation and compilation

31.May 2020 09:47:19 correct LSTM model creation and compilation

31.May 2020 09:48:08 correct LSTM model creation and compilation

31.May 2020 09:48:09 correct LSTM model creation and compilation

31.May 2020 09:48:10 correct LSTM model creation and compilation

31.May 2020 09:57:51 time series number (by group) saved to forecast settings

31.May 2020 09:57:51 correct model training, correct saving of model and weights

31.May 2020 09:57:51 settings modified and saved

31.May 2020 13:11:20 correct LSTM model creation and compilation

31.May 2020 13:11:21 correct LSTM model creation and compilation

31.May 2020 13:11:22 correct LSTM model creation and compilation

31.May 2020 13:12:52 correct LSTM model creation and compilation

31.May 2020 13:12:53 correct LSTM model creation and compilation

31.May 2020 13:12:54 correct LSTM model creation and compilation

31.May 2020 13:14:26 correct LSTM model creation and compilation

31.May 2020 13:14:27 correct LSTM model creation and compilation

31.May 2020 13:14:28 correct LSTM model creation and compilation

31.May 2020 13:19:20 correct LSTM model creation and compilation

31.May 2020 13:19:20 correct LSTM model creation and compilation

31.May 2020 13:19:21 correct LSTM model creation and compilation

31.May 2020 13:21:15 correct LSTM model creation and compilation

31.May 2020 13:21:16 correct LSTM model creation and compilation

31.May 2020 13:21:16 correct LSTM model creation and compilation

31.May 2020 13:22:56 correct LSTM model creation and compilation

31.May 2020 13:22:57 correct LSTM model creation and compilation

31.May 2020 13:22:57 correct LSTM model creation and compilation

31.May 2020 13:28:09 correct LSTM model creation and compilation

31.May 2020 13:28:10 correct LSTM model creation and compilation

31.May 2020 13:28:10 correct LSTM model creation and compilation

31.May 2020 13:30:11 correct LSTM model creation and compilation

31.May 2020 13:30:12 correct LSTM model creation and compilation

31.May 2020 13:30:13 correct LSTM model creation and compilation

31.May 2020 13:42:05 correct LSTM model creation and compilation

31.May 2020 13:42:06 correct LSTM model creation and compilation

31.May 2020 13:42:06 correct LSTM model creation and compilation

31.May 2020 13:43:11 correct LSTM model creation and compilation

31.May 2020 13:43:11 correct LSTM model creation and compilation

31.May 2020 13:43:12 correct LSTM model creation and compilation

31.May 2020 13:50:28 correct LSTM model creation and compilation

31.May 2020 13:50:29 correct LSTM model creation and compilation

31.May 2020 13:50:30 correct LSTM model creation and compilation

31.May 2020 14:22:59 correct LSTM model creation and compilation

31.May 2020 14:23:00 correct LSTM model creation and compilation

31.May 2020 14:23:01 correct LSTM model creation and compilation

31.May 2020 14:33:43 model training error
list indices must be integers or slices, not tuple
Traceback (most recent call last):
  File ".\_2_train.py", line 191, in train
    groups_list = groups_list[time_series_not_improved, :]
TypeError: list indices must be integers or slices, not tuple

31.May 2020 14:35:39 model training error
list indices must be integers or slices, not tuple
Traceback (most recent call last):
  File ".\_2_train.py", line 191, in train
    groups_list = groups_list[time_series_not_improved, :]
TypeError: list indices must be integers or slices, not tuple

31.May 2020 14:36:31 model training error
list indices must be integers or slices, not tuple
Traceback (most recent call last):
  File ".\_2_train.py", line 191, in train
    groups_list = groups_list[time_series_not_improved, :]
TypeError: list indices must be integers or slices, not tuple

31.May 2020 14:38:45 model training error
list indices must be integers or slices, not tuple
Traceback (most recent call last):
  File ".\_2_train.py", line 191, in train
    groups_list = groups_list[time_series_not_improved, :]
TypeError: list indices must be integers or slices, not tuple

31.May 2020 14:40:57 model training error
list indices must be integers or slices, not tuple
Traceback (most recent call last):
  File ".\_2_train.py", line 192, in train
    groups_list = groups_list[time_series_not_improved, :]
TypeError: list indices must be integers or slices, not tuple

31.May 2020 14:42:43 model training error
list indices must be integers or slices, not tuple
Traceback (most recent call last):
  File ".\_2_train.py", line 192, in train
    groups_list = groups_list[time_series_not_improved.reshape(-1), :]
TypeError: list indices must be integers or slices, not tuple

31.May 2020 14:43:38 model training error
cannot reshape array of size 12933 into shape (1,)
Traceback (most recent call last):
  File ".\_2_train.py", line 191, in train
    time_series_not_improved = time_series_not_improved.reshape(1)
ValueError: cannot reshape array of size 12933 into shape (1,)

31.May 2020 14:44:20 model training error
list indices must be integers or slices, not tuple
Traceback (most recent call last):
  File ".\_2_train.py", line 192, in train
    groups_list = groups_list[time_series_not_improved, :]
TypeError: list indices must be integers or slices, not tuple

31.May 2020 14:45:11 model training error
only integer scalar arrays can be converted to a scalar index
Traceback (most recent call last):
  File ".\_2_train.py", line 191, in train
    groups_list = groups_list[time_series_not_improved]
TypeError: only integer scalar arrays can be converted to a scalar index

31.May 2020 14:46:39 model training error
only integer scalar arrays can be converted to a scalar index
Traceback (most recent call last):
  File ".\_2_train.py", line 191, in train
    groups_list = groups_list[time_series_not_improved.astype('int')]
TypeError: only integer scalar arrays can be converted to a scalar index

31.May 2020 14:47:40 model training error
only size-1 arrays can be converted to Python scalars
Traceback (most recent call last):
  File ".\_2_train.py", line 191, in train
    time_series_not_improved = int(time_series_not_improved)
TypeError: only size-1 arrays can be converted to Python scalars

31.May 2020 14:48:29 model training error
only integer scalar arrays can be converted to a scalar index
Traceback (most recent call last):
  File ".\_2_train.py", line 192, in train
    groups_list = groups_list[time_series_not_improved]
TypeError: only integer scalar arrays can be converted to a scalar index

31.May 2020 14:48:55 model training error
only integer scalar arrays can be converted to a scalar index
Traceback (most recent call last):
  File ".\_2_train.py", line 192, in train
    groups_list = groups_list[time_series_not_improved]
TypeError: only integer scalar arrays can be converted to a scalar index

31.May 2020 14:49:56 model training error
list indices must be integers or slices, not list
Traceback (most recent call last):
  File ".\_2_train.py", line 192, in train
    groups_list = groups_list[time_series_not_improved]
TypeError: list indices must be integers or slices, not list

31.May 2020 14:51:06 correct LSTM model creation and compilation

31.May 2020 14:51:07 model training error
in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:465 train_step  **
        y_pred = self(x, training=True)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py:885 __call__
        input_spec.assert_input_compatibility(self.input_spec, inputs,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\input_spec.py:212 assert_input_compatibility
        raise ValueError(

    ValueError: Input 0 of layer sequential is incompatible with the layer: expected axis -1 of input shape to have value 30490 but received input with shape [8, 28, 12933]
Traceback (most recent call last):
  File ".\_2_train.py", line 576, in train
    forecaster.fit(x_train, y_train, batch_size=batch_size, epochs=epochs, workers=workers,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 66, in _method_wrapper
    return method(self, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 785, in fit
    tmp_logs = train_function(iterator)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 580, in __call__
    result = self._call(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 627, in _call
    self._initialize(args, kwds, add_initializers_to=initializers)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 505, in _initialize
    self._stateful_fn._get_concrete_function_internal_garbage_collected(  # pylint: disable=protected-access
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2446, in _get_concrete_function_internal_garbage_collected
    graph_function, _, _ = self._maybe_define_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2777, in _maybe_define_function
    graph_function = self._create_graph_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2657, in _create_graph_function
    func_graph_module.func_graph_from_py_func(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 981, in func_graph_from_py_func
    func_outputs = python_func(*func_args, **func_kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 441, in wrapped_fn
    return weak_wrapped_fn().__wrapped__(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 968, in wrapper
    raise e.ag_error_metadata.to_exception(e)
ValueError: in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:465 train_step  **
        y_pred = self(x, training=True)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py:885 __call__
        input_spec.assert_input_compatibility(self.input_spec, inputs,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\input_spec.py:212 assert_input_compatibility
        raise ValueError(

    ValueError: Input 0 of layer sequential is incompatible with the layer: expected axis -1 of input shape to have value 30490 but received input with shape [8, 28, 12933]


31.May 2020 14:55:45 correct LSTM model creation and compilation

31.May 2020 14:55:46 model training error
in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:465 train_step  **
        y_pred = self(x, training=True)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py:885 __call__
        input_spec.assert_input_compatibility(self.input_spec, inputs,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\input_spec.py:212 assert_input_compatibility
        raise ValueError(

    ValueError: Input 0 of layer sequential is incompatible with the layer: expected axis -1 of input shape to have value 30490 but received input with shape [8, 28, 12933]
Traceback (most recent call last):
  File ".\_2_train.py", line 578, in train
    forecaster.fit(x_train, y_train, batch_size=batch_size, epochs=epochs, workers=workers,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 66, in _method_wrapper
    return method(self, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 785, in fit
    tmp_logs = train_function(iterator)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 580, in __call__
    result = self._call(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 627, in _call
    self._initialize(args, kwds, add_initializers_to=initializers)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 505, in _initialize
    self._stateful_fn._get_concrete_function_internal_garbage_collected(  # pylint: disable=protected-access
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2446, in _get_concrete_function_internal_garbage_collected
    graph_function, _, _ = self._maybe_define_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2777, in _maybe_define_function
    graph_function = self._create_graph_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2657, in _create_graph_function
    func_graph_module.func_graph_from_py_func(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 981, in func_graph_from_py_func
    func_outputs = python_func(*func_args, **func_kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 441, in wrapped_fn
    return weak_wrapped_fn().__wrapped__(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 968, in wrapper
    raise e.ag_error_metadata.to_exception(e)
ValueError: in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:465 train_step  **
        y_pred = self(x, training=True)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py:885 __call__
        input_spec.assert_input_compatibility(self.input_spec, inputs,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\input_spec.py:212 assert_input_compatibility
        raise ValueError(

    ValueError: Input 0 of layer sequential is incompatible with the layer: expected axis -1 of input shape to have value 30490 but received input with shape [8, 28, 12933]


31.May 2020 14:58:54 correct LSTM model creation and compilation

31.May 2020 14:58:55 model training error
in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:465 train_step  **
        y_pred = self(x, training=True)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py:885 __call__
        input_spec.assert_input_compatibility(self.input_spec, inputs,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\input_spec.py:212 assert_input_compatibility
        raise ValueError(

    ValueError: Input 0 of layer sequential is incompatible with the layer: expected axis -1 of input shape to have value 30490 but received input with shape [8, 28, 12933]
Traceback (most recent call last):
  File ".\_2_train.py", line 579, in train
    forecaster.fit(x_train, y_train, batch_size=batch_size, epochs=epochs, workers=workers,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 66, in _method_wrapper
    return method(self, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 785, in fit
    tmp_logs = train_function(iterator)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 580, in __call__
    result = self._call(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 627, in _call
    self._initialize(args, kwds, add_initializers_to=initializers)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 505, in _initialize
    self._stateful_fn._get_concrete_function_internal_garbage_collected(  # pylint: disable=protected-access
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2446, in _get_concrete_function_internal_garbage_collected
    graph_function, _, _ = self._maybe_define_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2777, in _maybe_define_function
    graph_function = self._create_graph_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2657, in _create_graph_function
    func_graph_module.func_graph_from_py_func(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 981, in func_graph_from_py_func
    func_outputs = python_func(*func_args, **func_kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 441, in wrapped_fn
    return weak_wrapped_fn().__wrapped__(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 968, in wrapper
    raise e.ag_error_metadata.to_exception(e)
ValueError: in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:465 train_step  **
        y_pred = self(x, training=True)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py:885 __call__
        input_spec.assert_input_compatibility(self.input_spec, inputs,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\input_spec.py:212 assert_input_compatibility
        raise ValueError(

    ValueError: Input 0 of layer sequential is incompatible with the layer: expected axis -1 of input shape to have value 30490 but received input with shape [8, 28, 12933]


31.May 2020 15:01:17 correct LSTM model creation and compilation

31.May 2020 15:01:18 model training error
in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:465 train_step  **
        y_pred = self(x, training=True)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py:885 __call__
        input_spec.assert_input_compatibility(self.input_spec, inputs,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\input_spec.py:212 assert_input_compatibility
        raise ValueError(

    ValueError: Input 0 of layer sequential is incompatible with the layer: expected axis -1 of input shape to have value 30490 but received input with shape [8, 28, 12933]
Traceback (most recent call last):
  File ".\_2_train.py", line 579, in train
    forecaster.fit(x_train, y_train, batch_size=batch_size, epochs=epochs, workers=workers,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 66, in _method_wrapper
    return method(self, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 785, in fit
    tmp_logs = train_function(iterator)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 580, in __call__
    result = self._call(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 627, in _call
    self._initialize(args, kwds, add_initializers_to=initializers)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 505, in _initialize
    self._stateful_fn._get_concrete_function_internal_garbage_collected(  # pylint: disable=protected-access
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2446, in _get_concrete_function_internal_garbage_collected
    graph_function, _, _ = self._maybe_define_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2777, in _maybe_define_function
    graph_function = self._create_graph_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2657, in _create_graph_function
    func_graph_module.func_graph_from_py_func(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 981, in func_graph_from_py_func
    func_outputs = python_func(*func_args, **func_kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 441, in wrapped_fn
    return weak_wrapped_fn().__wrapped__(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 968, in wrapper
    raise e.ag_error_metadata.to_exception(e)
ValueError: in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:465 train_step  **
        y_pred = self(x, training=True)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py:885 __call__
        input_spec.assert_input_compatibility(self.input_spec, inputs,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\input_spec.py:212 assert_input_compatibility
        raise ValueError(

    ValueError: Input 0 of layer sequential is incompatible with the layer: expected axis -1 of input shape to have value 30490 but received input with shape [8, 28, 12933]


31.May 2020 15:02:36 correct LSTM model creation and compilation

31.May 2020 15:02:37 model training error
in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:465 train_step  **
        y_pred = self(x, training=True)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py:885 __call__
        input_spec.assert_input_compatibility(self.input_spec, inputs,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\input_spec.py:212 assert_input_compatibility
        raise ValueError(

    ValueError: Input 0 of layer sequential is incompatible with the layer: expected axis -1 of input shape to have value 30490 but received input with shape [8, 28, 12933]
Traceback (most recent call last):
  File ".\_2_train.py", line 578, in train
    forecaster.fit(x_train, y_train, batch_size=batch_size, epochs=epochs, workers=workers,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 66, in _method_wrapper
    return method(self, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 785, in fit
    tmp_logs = train_function(iterator)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 580, in __call__
    result = self._call(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 627, in _call
    self._initialize(args, kwds, add_initializers_to=initializers)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 505, in _initialize
    self._stateful_fn._get_concrete_function_internal_garbage_collected(  # pylint: disable=protected-access
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2446, in _get_concrete_function_internal_garbage_collected
    graph_function, _, _ = self._maybe_define_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2777, in _maybe_define_function
    graph_function = self._create_graph_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2657, in _create_graph_function
    func_graph_module.func_graph_from_py_func(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 981, in func_graph_from_py_func
    func_outputs = python_func(*func_args, **func_kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 441, in wrapped_fn
    return weak_wrapped_fn().__wrapped__(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 968, in wrapper
    raise e.ag_error_metadata.to_exception(e)
ValueError: in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:465 train_step  **
        y_pred = self(x, training=True)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py:885 __call__
        input_spec.assert_input_compatibility(self.input_spec, inputs,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\input_spec.py:212 assert_input_compatibility
        raise ValueError(

    ValueError: Input 0 of layer sequential is incompatible with the layer: expected axis -1 of input shape to have value 30490 but received input with shape [8, 28, 12933]


31.May 2020 15:03:16 correct LSTM model creation and compilation

31.May 2020 15:03:17 model training error
in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:465 train_step  **
        y_pred = self(x, training=True)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py:885 __call__
        input_spec.assert_input_compatibility(self.input_spec, inputs,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\input_spec.py:212 assert_input_compatibility
        raise ValueError(

    ValueError: Input 0 of layer sequential is incompatible with the layer: expected axis -1 of input shape to have value 30490 but received input with shape [8, 28, 12933]
Traceback (most recent call last):
  File ".\_2_train.py", line 579, in train
    forecaster.fit(x_train, y_train, batch_size=batch_size, epochs=epochs, workers=workers,
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 66, in _method_wrapper
    return method(self, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py", line 785, in fit
    tmp_logs = train_function(iterator)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 580, in __call__
    result = self._call(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 627, in _call
    self._initialize(args, kwds, add_initializers_to=initializers)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 505, in _initialize
    self._stateful_fn._get_concrete_function_internal_garbage_collected(  # pylint: disable=protected-access
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2446, in _get_concrete_function_internal_garbage_collected
    graph_function, _, _ = self._maybe_define_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2777, in _maybe_define_function
    graph_function = self._create_graph_function(args, kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\function.py", line 2657, in _create_graph_function
    func_graph_module.func_graph_from_py_func(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 981, in func_graph_from_py_func
    func_outputs = python_func(*func_args, **func_kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\def_function.py", line 441, in wrapped_fn
    return weak_wrapped_fn().__wrapped__(*args, **kwds)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\func_graph.py", line 968, in wrapper
    raise e.ag_error_metadata.to_exception(e)
ValueError: in user code:

    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:505 train_function  *
        outputs = self.distribute_strategy.run(
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:951 run  **
        return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2290 call_for_each_replica
        return self._call_for_each_replica(fn, args, kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\distribute\distribute_lib.py:2649 _call_for_each_replica
        return fn(*args, **kwargs)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\training.py:465 train_step  **
        y_pred = self(x, training=True)
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\base_layer.py:885 __call__
        input_spec.assert_input_compatibility(self.input_spec, inputs,
    C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\input_spec.py:212 assert_input_compatibility
        raise ValueError(

    ValueError: Input 0 of layer sequential is incompatible with the layer: expected axis -1 of input shape to have value 30490 but received input with shape [8, 28, 12933]


31.May 2020 15:05:17 LSTM model creation or compile error
Error converting shape to a TensorShape: Dimension value must be integer or None or have an __index__ method, got (12933, 1913).
Traceback (most recent call last):
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\execute.py", line 211, in make_shape
    shape = tensor_shape.as_shape(v)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\tensor_shape.py", line 1218, in as_shape
    return TensorShape(shape)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\tensor_shape.py", line 771, in __init__
    self._dims = [as_dimension(d) for d in dims_iter]
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\tensor_shape.py", line 771, in <listcomp>
    self._dims = [as_dimension(d) for d in dims_iter]
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\tensor_shape.py", line 716, in as_dimension
    return Dimension(value)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\framework\tensor_shape.py", line 197, in __init__
    six.raise_from(
  File "<string>", line 3, in raise_from
TypeError: Dimension value must be integer or None or have an __index__ method, got (12933, 1913)

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File ".\_2_train.py", line 409, in train
    forecaster.add(layers.Dense(units=model_hyperparameters['units_layer_1'],
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\training\tracking\base.py", line 456, in _method_wrapper
    result = method(self, *args, **kwargs)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\sequential.py", line 193, in add
    x = input_layer.Input(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\input_layer.py", line 295, in Input
    input_layer = InputLayer(**input_layer_config)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\engine\input_layer.py", line 149, in __init__
    input_tensor = backend.placeholder(
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\keras\backend.py", line 1087, in placeholder
    x = array_ops.placeholder(dtype, shape=shape, name=name)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\array_ops.py", line 3026, in placeholder
    return gen_array_ops.placeholder(dtype=dtype, shape=shape, name=name)
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\ops\gen_array_ops.py", line 6674, in placeholder
    shape = _execute.make_shape(shape, "shape")
  File "C:\carpeta_p_pycharm\M5_kaggle_accuracy\venv\lib\site-packages\tensorflow\python\eager\execute.py", line 213, in make_shape
    raise TypeError("Error converting %s to a TensorShape: %s." % (arg_name, e))
TypeError: Error converting shape to a TensorShape: Dimension value must be integer or None or have an __index__ method, got (12933, 1913).

31.May 2020 15:05:18 model training error
list index out of range
Traceback (most recent call last):
  File ".\_2_train.py", line 577, in train
    forecaster = forecaster_models_list[group_iterator]
IndexError: list index out of range

31.May 2020 15:11:56 correct LSTM model creation and compilation

31.May 2020 15:19:05 time series number (by group) saved to forecast settings

31.May 2020 15:19:05 correct model training, correct saving of model and weights

31.May 2020 15:19:05 settings modified and saved

31.May 2020 15:59:58 correct LSTM model creation and compilation

31.May 2020 16:00:40 time series number (by group) saved to forecast settings

31.May 2020 16:00:40 correct model training, correct saving of model and weights

31.May 2020 16:00:40 settings modified and saved

31.May 2020 16:04:34 correct LSTM model creation and compilation

31.May 2020 16:04:47 time series number (by group) saved to forecast settings

31.May 2020 16:04:47 correct model training, correct saving of model and weights

31.May 2020 16:04:47 settings modified and saved

31.May 2020 16:07:07 correct LSTM model creation and compilation

31.May 2020 16:08:26 time series number (by group) saved to forecast settings

31.May 2020 16:08:26 correct model training, correct saving of model and weights

31.May 2020 16:08:26 settings modified and saved

31.May 2020 16:10:59 correct LSTM model creation and compilation

31.May 2020 16:12:32 time series number (by group) saved to forecast settings

31.May 2020 16:12:32 correct model training, correct saving of model and weights

31.May 2020 16:12:32 settings modified and saved

31.May 2020 16:21:56 correct LSTM model creation and compilation

31.May 2020 16:22:41 time series number (by group) saved to forecast settings

31.May 2020 16:22:41 correct model training, correct saving of model and weights

31.May 2020 16:22:41 settings modified and saved

31.May 2020 16:25:39 correct LSTM model creation and compilation

31.May 2020 16:28:03 time series number (by group) saved to forecast settings

31.May 2020 16:28:03 correct model training, correct saving of model and weights

31.May 2020 16:28:03 settings modified and saved

31.May 2020 17:25:05 correct LSTM model creation and compilation

31.May 2020 17:25:21 time series number (by group) saved to forecast settings

31.May 2020 17:25:21 correct model training, correct saving of model and weights

31.May 2020 17:25:21 settings modified and saved

31.May 2020 17:34:49 correct LSTM model creation and compilation

31.May 2020 17:35:05 time series number (by group) saved to forecast settings

31.May 2020 17:35:05 correct model training, correct saving of model and weights

31.May 2020 17:35:05 settings modified and saved

31.May 2020 17:36:43 correct LSTM model creation and compilation

31.May 2020 17:37:10 time series number (by group) saved to forecast settings

31.May 2020 17:37:10 correct model training, correct saving of model and weights

31.May 2020 17:37:10 settings modified and saved

31.May 2020 17:39:52 correct LSTM model creation and compilation

31.May 2020 17:40:19 time series number (by group) saved to forecast settings

31.May 2020 17:40:19 correct model training, correct saving of model and weights

31.May 2020 17:40:19 settings modified and saved

31.May 2020 17:54:04 correct LSTM model creation and compilation

31.May 2020 17:54:37 time series number (by group) saved to forecast settings

31.May 2020 17:54:37 correct model training, correct saving of model and weights

31.May 2020 17:54:37 settings modified and saved

31.May 2020 18:06:49 correct LSTM model creation and compilation

31.May 2020 18:07:28 time series number (by group) saved to forecast settings

31.May 2020 18:07:28 correct model training, correct saving of model and weights

31.May 2020 18:07:28 settings modified and saved

31.May 2020 18:11:39 correct LSTM model creation and compilation

31.May 2020 18:12:16 time series number (by group) saved to forecast settings

31.May 2020 18:12:16 correct model training, correct saving of model and weights

31.May 2020 18:12:16 settings modified and saved

31.May 2020 18:26:39 correct LSTM model creation and compilation

31.May 2020 18:26:58 time series number (by group) saved to forecast settings

31.May 2020 18:26:58 correct model training, correct saving of model and weights

31.May 2020 18:26:58 settings modified and saved

31.May 2020 18:39:38 correct LSTM model creation and compilation

31.May 2020 18:40:25 time series number (by group) saved to forecast settings

31.May 2020 18:40:25 correct model training, correct saving of model and weights

31.May 2020 18:40:25 settings modified and saved

31.May 2020 19:10:01 correct LSTM model creation and compilation

31.May 2020 19:10:56 time series number (by group) saved to forecast settings

31.May 2020 19:10:56 correct model training, correct saving of model and weights

31.May 2020 19:10:56 settings modified and saved

31.May 2020 19:38:45 correct LSTM model creation and compilation

31.May 2020 19:44:23 time series number (by group) saved to forecast settings

31.May 2020 19:44:23 correct model training, correct saving of model and weights

31.May 2020 19:44:23 settings modified and saved

31.May 2020 19:57:59 correct LSTM model creation and compilation

31.May 2020 20:07:31 correct LSTM model creation and compilation

31.May 2020 20:28:49 correct LSTM model creation and compilation

31.May 2020 20:34:29 correct LSTM model creation and compilation

31.May 2020 20:37:55 correct LSTM model creation and compilation

31.May 2020 20:38:45 correct LSTM model creation and compilation

31.May 2020 20:39:23 correct LSTM model creation and compilation

31.May 2020 20:49:07 correct LSTM model creation and compilation

31.May 2020 21:39:24 correct LSTM model creation and compilation

31.May 2020 21:44:38 time series number (by group) saved to forecast settings

31.May 2020 21:44:38 correct model training, correct saving of model and weights

31.May 2020 21:44:38 settings modified and saved

31.May 2020 21:51:40 correct LSTM model creation and compilation

31.May 2020 21:56:50 time series number (by group) saved to forecast settings

31.May 2020 21:56:50 correct model training, correct saving of model and weights

31.May 2020 21:56:50 settings modified and saved

31.May 2020 22:07:14 correct LSTM model creation and compilation

31.May 2020 22:12:22 time series number (by group) saved to forecast settings

31.May 2020 22:12:22 correct model training, correct saving of model and weights

31.May 2020 22:12:22 settings modified and saved

31.May 2020 22:16:15 correct LSTM model creation and compilation

31.May 2020 22:47:13 time series number (by group) saved to forecast settings

31.May 2020 22:47:13 correct model training, correct saving of model and weights

31.May 2020 22:47:13 settings modified and saved

31.May 2020 22:53:40 correct LSTM model creation and compilation

31.May 2020 23:14:55 time series number (by group) saved to forecast settings

31.May 2020 23:14:55 correct model training, correct saving of model and weights

31.May 2020 23:14:55 settings modified and saved

31.May 2020 23:36:18 correct LSTM model creation and compilation

31.May 2020 23:37:06 time series number (by group) saved to forecast settings

31.May 2020 23:37:06 correct model training, correct saving of model and weights

31.May 2020 23:37:06 settings modified and saved

31.May 2020 23:47:51 correct LSTM model creation and compilation

31.May 2020 23:48:40 time series number (by group) saved to forecast settings

31.May 2020 23:48:40 correct model training, correct saving of model and weights

31.May 2020 23:48:40 settings modified and saved

01.Jun 2020 02:45:04 correct LSTM model creation and compilation

01.Jun 2020 02:45:05 model training error
'neural_network_time_serie_schema' object is not callable
Traceback (most recent call last):
  File ".\_2_train.py", line 584, in train
    train_model = model_trainer(local_script_settings, x_train, y_train, batch_size, epochs,
TypeError: 'neural_network_time_serie_schema' object is not callable

01.Jun 2020 02:48:25 correct LSTM model creation and compilation

01.Jun 2020 02:49:36 correct LSTM model creation and compilation

01.Jun 2020 02:52:27 correct LSTM model creation and compilation

01.Jun 2020 02:54:43 correct LSTM model creation and compilation

01.Jun 2020 02:56:20 correct LSTM model creation and compilation

01.Jun 2020 02:57:25 correct LSTM model creation and compilation

01.Jun 2020 02:58:38 correct LSTM model creation and compilation

01.Jun 2020 03:18:17 correct LSTM model creation and compilation

01.Jun 2020 03:22:22 correct LSTM model creation and compilation

01.Jun 2020 03:23:48 correct LSTM model creation and compilation

01.Jun 2020 03:26:19 correct LSTM model creation and compilation

01.Jun 2020 10:02:27 correct LSTM model creation and compilation

01.Jun 2020 10:04:53 correct LSTM model creation and compilation

01.Jun 2020 10:07:40 correct LSTM model creation and compilation

02.Jun 2020 17:20:48 correct LSTM model creation and compilation

02.Jun 2020 17:31:29 correct LSTM model creation and compilation

02.Jun 2020 17:39:08 correct LSTM model creation and compilation

02.Jun 2020 17:55:07 correct LSTM model creation and compilation

02.Jun 2020 19:06:56 correct LSTM model creation and compilation

02.Jun 2020 19:08:08 correct LSTM model creation and compilation

02.Jun 2020 19:09:10 correct LSTM model creation and compilation

02.Jun 2020 19:16:52 correct LSTM model creation and compilation

02.Jun 2020 19:29:11 correct LSTM model creation and compilation

02.Jun 2020 19:54:05 correct LSTM model creation and compilation

02.Jun 2020 19:54:05 model training error
tuple index out of range
Traceback (most recent call last):
  File ".\_2_train.py", line 587, in train
    x_train = x_train.reshape((np.shape(x_train)[0], np.shape(x_train)[2], np.shape(x_train)[1]))
IndexError: tuple index out of range

02.Jun 2020 19:58:12 correct LSTM model creation and compilation

02.Jun 2020 19:58:12 model training error
tuple index out of range
Traceback (most recent call last):
  File ".\_2_train.py", line 590, in train
    x_train = x_train.reshape((np.shape(x_train)[0], np.shape(x_train)[2], np.shape(x_train)[1]))
IndexError: tuple index out of range

02.Jun 2020 20:01:05 correct LSTM model creation and compilation

02.Jun 2020 20:01:06 model training error
tuple index out of range
Traceback (most recent call last):
  File ".\_2_train.py", line 589, in train
    x_train = x_train.reshape((np.shape(x_train)[0], np.shape(x_train)[2], np.shape(x_train)[1]))
IndexError: tuple index out of range

02.Jun 2020 20:06:46 correct LSTM model creation and compilation

02.Jun 2020 20:08:49 correct LSTM model creation and compilation

02.Jun 2020 20:14:04 correct LSTM model creation and compilation

02.Jun 2020 20:22:44 correct LSTM model creation and compilation

03.Jun 2020 00:57:48 correct LSTM model creation and compilation

03.Jun 2020 07:37:40 correct LSTM model creation and compilation

03.Jun 2020 08:06:38 correct LSTM model creation and compilation

03.Jun 2020 11:42:51 correct LSTM model creation and compilation

03.Jun 2020 11:55:38 correct LSTM model creation and compilation

03.Jun 2020 11:56:57 correct LSTM model creation and compilation

03.Jun 2020 14:05:44 correct LSTM model creation and compilation

03.Jun 2020 14:30:27 correct LSTM model creation and compilation

03.Jun 2020 14:55:30 correct LSTM model creation and compilation

03.Jun 2020 15:00:45 correct LSTM model creation and compilation

03.Jun 2020 15:44:19 correct LSTM model creation and compilation

03.Jun 2020 15:47:31 correct LSTM model creation and compilation

03.Jun 2020 15:52:25 correct LSTM model creation and compilation

03.Jun 2020 15:55:47 correct LSTM model creation and compilation

03.Jun 2020 16:00:36 correct LSTM model creation and compilation

03.Jun 2020 16:27:13 correct LSTM model creation and compilation

03.Jun 2020 16:28:39 correct LSTM model creation and compilation

03.Jun 2020 16:38:29 correct LSTM model creation and compilation

03.Jun 2020 17:37:01 correct LSTM model creation and compilation

03.Jun 2020 18:57:02 correct LSTM model creation and compilation

03.Jun 2020 19:35:07 correct LSTM model creation and compilation

03.Jun 2020 19:45:22 correct LSTM model creation and compilation

03.Jun 2020 19:55:06 correct LSTM model creation and compilation

03.Jun 2020 20:09:58 correct LSTM model creation and compilation

03.Jun 2020 21:20:05 correct LSTM model creation and compilation

03.Jun 2020 21:51:38 correct LSTM model creation and compilation

03.Jun 2020 21:57:03 correct LSTM model creation and compilation

03.Jun 2020 22:08:31 correct LSTM model creation and compilation

03.Jun 2020 22:17:29 correct LSTM model creation and compilation

03.Jun 2020 22:35:17 correct LSTM model creation and compilation

03.Jun 2020 22:43:24 correct LSTM model creation and compilation

03.Jun 2020 22:53:00 correct LSTM model creation and compilation

03.Jun 2020 23:00:08 correct LSTM model creation and compilation

03.Jun 2020 23:01:32 correct LSTM model creation and compilation

03.Jun 2020 23:02:33 correct LSTM model creation and compilation

03.Jun 2020 23:06:38 correct LSTM model creation and compilation

03.Jun 2020 23:09:30 correct LSTM model creation and compilation

03.Jun 2020 23:17:33 correct LSTM model creation and compilation

03.Jun 2020 23:26:19 correct LSTM model creation and compilation

03.Jun 2020 23:39:37 correct LSTM model creation and compilation

04.Jun 2020 00:28:10 correct LSTM model creation and compilation

04.Jun 2020 00:40:57 correct LSTM model creation and compilation

04.Jun 2020 00:51:44 correct LSTM model creation and compilation

04.Jun 2020 00:52:59 correct LSTM model creation and compilation
